-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity create_tree is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_value_V_dout : IN STD_LOGIC_VECTOR (8 downto 0);
    in_value_V_empty_n : IN STD_LOGIC;
    in_value_V_read : OUT STD_LOGIC;
    in_frequency_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    in_frequency_V_empty_n : IN STD_LOGIC;
    in_frequency_V_read : OUT STD_LOGIC;
    extLd_loc_dout : IN STD_LOGIC_VECTOR (8 downto 0);
    extLd_loc_empty_n : IN STD_LOGIC;
    extLd_loc_read : OUT STD_LOGIC;
    parent_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    parent_V_ce0 : OUT STD_LOGIC;
    parent_V_we0 : OUT STD_LOGIC;
    parent_V_d0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    left_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    left_V_ce0 : OUT STD_LOGIC;
    left_V_we0 : OUT STD_LOGIC;
    left_V_d0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    right_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    right_V_ce0 : OUT STD_LOGIC;
    right_V_we0 : OUT STD_LOGIC;
    right_V_d0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    extLd_loc_out_din : OUT STD_LOGIC_VECTOR (8 downto 0);
    extLd_loc_out_full_n : IN STD_LOGIC;
    extLd_loc_out_write : OUT STD_LOGIC );
end;


architecture behav of create_tree is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv9_1FF : STD_LOGIC_VECTOR (8 downto 0) := "111111111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv10_3FF : STD_LOGIC_VECTOR (9 downto 0) := "1111111111";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal in_value_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal icmp_ln21_reg_804 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln34_fu_658_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal or_ln52_fu_711_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal in_frequency_V_blk_n : STD_LOGIC;
    signal extLd_loc_blk_n : STD_LOGIC;
    signal extLd_loc_out_blk_n : STD_LOGIC;
    signal t_V_3_reg_287 : STD_LOGIC_VECTOR (8 downto 0);
    signal op_assign_reg_299 : STD_LOGIC_VECTOR (8 downto 0);
    signal s_frequency_V_1_reg_312 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_value_V_1_reg_322 : STD_LOGIC_VECTOR (8 downto 0);
    signal node_freq_V_reg_332 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_0_0_i_i_reg_342 : STD_LOGIC_VECTOR (8 downto 0);
    signal t_V_reg_353 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_0217_2_i_i_reg_452 : STD_LOGIC_VECTOR (8 downto 0);
    signal reg_536 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_predicate_op112_read_state7 : BOOLEAN;
    signal ap_predicate_op113_read_state7 : BOOLEAN;
    signal ap_block_state7_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal extLd_loc_read_reg_772 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal s_value_V_reg_779 : STD_LOGIC_VECTOR (8 downto 0);
    signal s_frequency_V_reg_784 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state2 : BOOLEAN;
    signal add_ln21_fu_543_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln21_reg_799 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln21_fu_553_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal lshr_ln1_reg_808 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_fu_578_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_reg_813 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state4_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal intermediate_freq_V_1_fu_609_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal intermediate_freq_V_1_reg_838 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state5_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal intermediate_freq_ne_fu_617_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal intermediate_freq_ne_reg_845 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_predicate_op77_read_state6 : BOOLEAN;
    signal ap_predicate_op78_read_state6 : BOOLEAN;
    signal ap_block_state6_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal tree_count_V_fu_670_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal in_count_V_fu_676_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal right_V_addr_reg_874 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln52_reg_879 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln209_1_fu_717_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln209_1_reg_883 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln321_1_fu_723_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln321_1_reg_889 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln209_fu_739_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln209_reg_893 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln321_fu_745_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln321_reg_899 : STD_LOGIC_VECTOR (0 downto 0);
    signal in_count_V_1_fu_749_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state4 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal frequency_0_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal frequency_0_V_ce0 : STD_LOGIC;
    signal frequency_0_V_we0 : STD_LOGIC;
    signal frequency_0_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal frequency_0_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal frequency_0_V_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal frequency_0_V_ce1 : STD_LOGIC;
    signal frequency_0_V_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal frequency_1_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal frequency_1_V_ce0 : STD_LOGIC;
    signal frequency_1_V_we0 : STD_LOGIC;
    signal frequency_1_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal frequency_1_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal frequency_1_V_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal frequency_1_V_ce1 : STD_LOGIC;
    signal frequency_1_V_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_t_V_3_phi_fu_291_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_op_assign_phi_fu_304_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_reg_pp0_iter0_s_frequency_V_2_reg_365 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_s_value_V_2_reg_376 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_reg_pp0_iter0_s_1_1_i_i_reg_387 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_s_0_1_i_i_reg_399 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_reg_pp0_iter0_t_V_5_reg_412 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_reg_pp0_iter0_t_V_4_reg_422 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_reg_pp0_iter0_p_0195_0_i_i_reg_433 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_p_0120_0_i_i_reg_443 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_p_0217_2_i_i_reg_452 : STD_LOGIC_VECTOR (8 downto 0);
    signal tree_count_V_1_fu_732_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_reg_pp0_iter0_s_next_1_2_i_i_reg_464 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_s_next_1_2_i_i_reg_464 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_s_next_0_2_i_i_reg_476 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_reg_pp0_iter1_s_next_0_2_i_i_reg_476 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_reg_pp0_iter0_s_1_2_i_i_reg_488 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_s_1_2_i_i_reg_488 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_s_0_2_i_i_reg_501 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_reg_pp0_iter1_s_0_2_i_i_reg_501 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_reg_pp0_iter0_p_0247_2_i_i_reg_514 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_reg_pp0_iter1_p_0247_2_i_i_reg_514 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln31_fu_594_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal zext_ln32_fu_600_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln36_fu_664_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_fu_625_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_4_fu_727_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln321_1_fu_755_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln321_fu_761_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_3_fu_767_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal extLd_cast_fu_540_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln243_fu_549_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln215_fu_558_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_V_fu_562_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal lshr_ln_fu_584_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal trunc_ln31_fu_605_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln34_1_fu_635_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln34_fu_640_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln34_fu_630_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln34_fu_646_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_fu_652_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_1_fu_687_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln52_fu_693_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_fu_682_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln52_fu_699_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_2_fu_705_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_590 : BOOLEAN;
    signal ap_condition_175 : BOOLEAN;
    signal ap_condition_358 : BOOLEAN;
    signal ap_condition_411 : BOOLEAN;
    signal ap_condition_668 : BOOLEAN;

    component create_tree_frequibs IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component create_tree_frequjbC IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    frequency_0_V_U : component create_tree_frequibs
    generic map (
        DataWidth => 32,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => frequency_0_V_address0,
        ce0 => frequency_0_V_ce0,
        we0 => frequency_0_V_we0,
        d0 => frequency_0_V_d0,
        q0 => frequency_0_V_q0,
        address1 => frequency_0_V_address1,
        ce1 => frequency_0_V_ce1,
        q1 => frequency_0_V_q1);

    frequency_1_V_U : component create_tree_frequjbC
    generic map (
        DataWidth => 32,
        AddressRange => 127,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => frequency_1_V_address0,
        ce0 => frequency_1_V_ce0,
        we0 => frequency_1_V_we0,
        d0 => frequency_1_V_d0,
        q0 => frequency_1_V_q0,
        address1 => frequency_1_V_address1,
        ce1 => frequency_1_V_ce1,
        q1 => frequency_1_V_q1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((in_frequency_V_empty_n = ap_const_logic_0) or (in_value_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif ((not(((in_frequency_V_empty_n = ap_const_logic_0) or (in_value_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter0_p_0120_0_i_i_reg_443_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_590)) then
                if ((or_ln34_fu_658_p2 = ap_const_lv1_0)) then 
                    ap_phi_reg_pp0_iter0_p_0120_0_i_i_reg_443 <= intermediate_freq_ne_reg_845;
                elsif ((or_ln34_fu_658_p2 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter0_p_0120_0_i_i_reg_443 <= intermediate_freq_V_1_reg_838;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter0_p_0195_0_i_i_reg_433_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_590)) then
                if ((or_ln34_fu_658_p2 = ap_const_lv1_0)) then 
                    ap_phi_reg_pp0_iter0_p_0195_0_i_i_reg_433 <= intermediate_freq_V_1_reg_838;
                elsif ((or_ln34_fu_658_p2 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter0_p_0195_0_i_i_reg_433 <= node_freq_V_reg_332;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter0_s_0_1_i_i_reg_399_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_590)) then
                if ((or_ln34_fu_658_p2 = ap_const_lv1_0)) then 
                    ap_phi_reg_pp0_iter0_s_0_1_i_i_reg_399 <= s_0_0_i_i_reg_342;
                elsif ((or_ln34_fu_658_p2 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter0_s_0_1_i_i_reg_399 <= s_value_V_1_reg_322;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter0_s_1_1_i_i_reg_387_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_590)) then
                if ((or_ln34_fu_658_p2 = ap_const_lv1_0)) then 
                    ap_phi_reg_pp0_iter0_s_1_1_i_i_reg_387 <= node_freq_V_reg_332;
                elsif ((or_ln34_fu_658_p2 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter0_s_1_1_i_i_reg_387 <= s_frequency_V_1_reg_312;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter0_s_frequency_V_2_reg_365_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_590)) then
                if ((or_ln34_fu_658_p2 = ap_const_lv1_0)) then 
                    ap_phi_reg_pp0_iter0_s_frequency_V_2_reg_365 <= s_frequency_V_1_reg_312;
                elsif ((or_ln34_fu_658_p2 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter0_s_frequency_V_2_reg_365 <= in_frequency_V_dout;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter0_s_value_V_2_reg_376_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_590)) then
                if ((or_ln34_fu_658_p2 = ap_const_lv1_0)) then 
                    ap_phi_reg_pp0_iter0_s_value_V_2_reg_376 <= s_value_V_1_reg_322;
                elsif ((or_ln34_fu_658_p2 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter0_s_value_V_2_reg_376 <= in_value_V_dout;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter0_t_V_4_reg_422_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_590)) then
                if ((or_ln34_fu_658_p2 = ap_const_lv1_0)) then 
                    ap_phi_reg_pp0_iter0_t_V_4_reg_422 <= t_V_reg_353;
                elsif ((or_ln34_fu_658_p2 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter0_t_V_4_reg_422 <= in_count_V_fu_676_p2;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter0_t_V_5_reg_412_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_590)) then
                if ((or_ln34_fu_658_p2 = ap_const_lv1_0)) then 
                    ap_phi_reg_pp0_iter0_t_V_5_reg_412 <= tree_count_V_fu_670_p2;
                elsif ((or_ln34_fu_658_p2 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter0_t_V_5_reg_412 <= t_V_3_reg_287;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_p_0247_2_i_i_reg_514_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_175)) then
                if (((icmp_ln21_reg_804 = ap_const_lv1_1) and (or_ln52_fu_711_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_p_0247_2_i_i_reg_514 <= ap_phi_reg_pp0_iter0_t_V_4_reg_422;
                elsif (((or_ln52_fu_711_p2 = ap_const_lv1_1) and (icmp_ln21_reg_804 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter1_p_0247_2_i_i_reg_514 <= in_count_V_1_fu_749_p2;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_p_0247_2_i_i_reg_514 <= ap_phi_reg_pp0_iter0_p_0247_2_i_i_reg_514;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_s_0_2_i_i_reg_501_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_175)) then
                if (((icmp_ln21_reg_804 = ap_const_lv1_1) and (or_ln52_fu_711_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_s_0_2_i_i_reg_501 <= ap_phi_reg_pp0_iter0_s_0_1_i_i_reg_399;
                elsif (((or_ln52_fu_711_p2 = ap_const_lv1_1) and (icmp_ln21_reg_804 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter1_s_0_2_i_i_reg_501 <= ap_phi_reg_pp0_iter0_s_value_V_2_reg_376;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_s_0_2_i_i_reg_501 <= ap_phi_reg_pp0_iter0_s_0_2_i_i_reg_501;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_s_1_2_i_i_reg_488_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_175)) then
                if (((icmp_ln21_reg_804 = ap_const_lv1_1) and (or_ln52_fu_711_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_s_1_2_i_i_reg_488 <= ap_phi_reg_pp0_iter0_s_1_1_i_i_reg_387;
                elsif (((or_ln52_fu_711_p2 = ap_const_lv1_1) and (icmp_ln21_reg_804 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter1_s_1_2_i_i_reg_488 <= ap_phi_reg_pp0_iter0_s_frequency_V_2_reg_365;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_s_1_2_i_i_reg_488 <= ap_phi_reg_pp0_iter0_s_1_2_i_i_reg_488;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_s_next_0_2_i_i_reg_476_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_175)) then
                if (((icmp_ln21_reg_804 = ap_const_lv1_1) and (or_ln52_fu_711_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_s_next_0_2_i_i_reg_476 <= ap_phi_reg_pp0_iter0_s_value_V_2_reg_376;
                elsif (((or_ln52_fu_711_p2 = ap_const_lv1_1) and (icmp_ln21_reg_804 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter1_s_next_0_2_i_i_reg_476 <= in_value_V_dout;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_s_next_0_2_i_i_reg_476 <= ap_phi_reg_pp0_iter0_s_next_0_2_i_i_reg_476;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_s_next_1_2_i_i_reg_464_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_175)) then
                if (((icmp_ln21_reg_804 = ap_const_lv1_1) and (or_ln52_fu_711_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_s_next_1_2_i_i_reg_464 <= ap_phi_reg_pp0_iter0_s_frequency_V_2_reg_365;
                elsif (((or_ln52_fu_711_p2 = ap_const_lv1_1) and (icmp_ln21_reg_804 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter1_s_next_1_2_i_i_reg_464 <= in_frequency_V_dout;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_s_next_1_2_i_i_reg_464 <= ap_phi_reg_pp0_iter0_s_next_1_2_i_i_reg_464;
                end if;
            end if; 
        end if;
    end process;

    node_freq_V_reg_332_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln21_reg_804 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                node_freq_V_reg_332 <= ap_phi_reg_pp0_iter1_s_1_2_i_i_reg_488;
            elsif ((not(((in_frequency_V_empty_n = ap_const_logic_0) or (in_value_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                node_freq_V_reg_332 <= s_frequency_V_reg_784;
            end if; 
        end if;
    end process;

    op_assign_reg_299_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln21_reg_804 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                op_assign_reg_299 <= i_reg_813;
            elsif ((not(((in_frequency_V_empty_n = ap_const_logic_0) or (in_value_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                op_assign_reg_299 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    p_0217_2_i_i_reg_452_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_175)) then
                if (((icmp_ln21_reg_804 = ap_const_lv1_1) and (or_ln52_fu_711_p2 = ap_const_lv1_0))) then 
                    p_0217_2_i_i_reg_452 <= tree_count_V_1_fu_732_p2;
                elsif (((or_ln52_fu_711_p2 = ap_const_lv1_1) and (icmp_ln21_reg_804 = ap_const_lv1_1))) then 
                    p_0217_2_i_i_reg_452 <= ap_phi_reg_pp0_iter0_t_V_5_reg_412;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    p_0217_2_i_i_reg_452 <= ap_phi_reg_pp0_iter0_p_0217_2_i_i_reg_452;
                end if;
            end if; 
        end if;
    end process;

    s_0_0_i_i_reg_342_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln21_reg_804 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                s_0_0_i_i_reg_342 <= ap_phi_reg_pp0_iter1_s_0_2_i_i_reg_501;
            elsif ((not(((in_frequency_V_empty_n = ap_const_logic_0) or (in_value_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                s_0_0_i_i_reg_342 <= s_value_V_reg_779;
            end if; 
        end if;
    end process;

    s_frequency_V_1_reg_312_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln21_reg_804 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                s_frequency_V_1_reg_312 <= ap_phi_reg_pp0_iter1_s_next_1_2_i_i_reg_464;
            elsif ((not(((in_frequency_V_empty_n = ap_const_logic_0) or (in_value_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                s_frequency_V_1_reg_312 <= in_frequency_V_dout;
            end if; 
        end if;
    end process;

    s_value_V_1_reg_322_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln21_reg_804 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                s_value_V_1_reg_322 <= ap_phi_reg_pp0_iter1_s_next_0_2_i_i_reg_476;
            elsif ((not(((in_frequency_V_empty_n = ap_const_logic_0) or (in_value_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                s_value_V_1_reg_322 <= in_value_V_dout;
            end if; 
        end if;
    end process;

    t_V_3_reg_287_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln21_reg_804 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                t_V_3_reg_287 <= p_0217_2_i_i_reg_452;
            elsif ((not(((in_frequency_V_empty_n = ap_const_logic_0) or (in_value_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                t_V_3_reg_287 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    t_V_reg_353_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln21_reg_804 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                t_V_reg_353 <= ap_phi_reg_pp0_iter1_p_0247_2_i_i_reg_514;
            elsif ((not(((in_frequency_V_empty_n = ap_const_logic_0) or (in_value_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                t_V_reg_353 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln21_reg_804 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (or_ln52_fu_711_p2 = ap_const_lv1_0))) then
                add_ln209_1_reg_883 <= add_ln209_1_fu_717_p2;
                trunc_ln321_1_reg_889 <= trunc_ln321_1_fu_723_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln52_fu_711_p2 = ap_const_lv1_1) and (icmp_ln21_reg_804 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                add_ln209_reg_893 <= add_ln209_fu_739_p2;
                trunc_ln321_reg_899 <= trunc_ln321_fu_745_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((in_frequency_V_empty_n = ap_const_logic_0) or (in_value_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                add_ln21_reg_799 <= add_ln21_fu_543_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((extLd_loc_out_full_n = ap_const_logic_0) or (extLd_loc_empty_n = ap_const_logic_0) or (in_frequency_V_empty_n = ap_const_logic_0) or (in_value_V_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                extLd_loc_read_reg_772 <= extLd_loc_dout;
                s_frequency_V_reg_784 <= in_frequency_V_dout;
                s_value_V_reg_779 <= in_value_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                i_reg_813 <= i_fu_578_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln21_reg_804 <= icmp_ln21_fu_553_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln21_reg_804 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                intermediate_freq_V_1_reg_838 <= intermediate_freq_V_1_fu_609_p3;
                intermediate_freq_ne_reg_845 <= intermediate_freq_ne_fu_617_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln21_fu_553_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                lshr_ln1_reg_808 <= ret_V_fu_562_p2(9 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln21_reg_804 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                or_ln52_reg_879 <= or_ln52_fu_711_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln21_reg_804 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (or_ln52_fu_711_p2 = ap_const_lv1_0)) or ((or_ln52_fu_711_p2 = ap_const_lv1_1) and (icmp_ln21_reg_804 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)))) then
                reg_536 <= op_assign_reg_299(8 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln21_reg_804 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                right_V_addr_reg_874 <= zext_ln36_fu_664_p1(8 - 1 downto 0);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, in_value_V_empty_n, in_frequency_V_empty_n, extLd_loc_empty_n, extLd_loc_out_full_n, ap_CS_fsm_state2, ap_enable_reg_pp0_iter0, icmp_ln21_reg_804, ap_block_pp0_stage1_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage0_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((extLd_loc_out_full_n = ap_const_logic_0) or (extLd_loc_empty_n = ap_const_logic_0) or (in_frequency_V_empty_n = ap_const_logic_0) or (in_value_V_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if ((not(((in_frequency_V_empty_n = ap_const_logic_0) or (in_value_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((not(((icmp_ln21_reg_804 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                elsif (((icmp_ln21_reg_804 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;
    add_ln209_1_fu_717_p2 <= std_logic_vector(unsigned(ap_phi_reg_pp0_iter0_p_0195_0_i_i_reg_433) + unsigned(ap_phi_reg_pp0_iter0_p_0120_0_i_i_reg_443));
    add_ln209_fu_739_p2 <= std_logic_vector(unsigned(ap_phi_reg_pp0_iter0_p_0195_0_i_i_reg_433) + unsigned(ap_phi_reg_pp0_iter0_s_1_1_i_i_reg_387));
    add_ln21_fu_543_p2 <= std_logic_vector(unsigned(extLd_cast_fu_540_p1) + unsigned(ap_const_lv10_3FF));
    and_ln34_fu_646_p2 <= (xor_ln34_fu_640_p2 and icmp_ln34_fu_630_p2);
    and_ln52_fu_699_p2 <= (xor_ln52_fu_693_p2 and icmp_ln52_fu_682_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(6);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state9 <= ap_CS_fsm(7);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage3_11001_assign_proc : process(in_value_V_empty_n, in_frequency_V_empty_n, ap_enable_reg_pp0_iter0, ap_predicate_op77_read_state6, ap_predicate_op78_read_state6)
    begin
                ap_block_pp0_stage3_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((in_frequency_V_empty_n = ap_const_logic_0) and (ap_predicate_op78_read_state6 = ap_const_boolean_1)) or ((in_value_V_empty_n = ap_const_logic_0) and (ap_predicate_op77_read_state6 = ap_const_boolean_1))));
    end process;


    ap_block_pp0_stage3_subdone_assign_proc : process(in_value_V_empty_n, in_frequency_V_empty_n, ap_enable_reg_pp0_iter0, ap_predicate_op77_read_state6, ap_predicate_op78_read_state6)
    begin
                ap_block_pp0_stage3_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((in_frequency_V_empty_n = ap_const_logic_0) and (ap_predicate_op78_read_state6 = ap_const_boolean_1)) or ((in_value_V_empty_n = ap_const_logic_0) and (ap_predicate_op77_read_state6 = ap_const_boolean_1))));
    end process;

        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage4_11001_assign_proc : process(in_value_V_empty_n, in_frequency_V_empty_n, ap_enable_reg_pp0_iter0, ap_predicate_op112_read_state7, ap_predicate_op113_read_state7)
    begin
                ap_block_pp0_stage4_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((in_frequency_V_empty_n = ap_const_logic_0) and (ap_predicate_op113_read_state7 = ap_const_boolean_1)) or ((in_value_V_empty_n = ap_const_logic_0) and (ap_predicate_op112_read_state7 = ap_const_boolean_1))));
    end process;


    ap_block_pp0_stage4_subdone_assign_proc : process(in_value_V_empty_n, in_frequency_V_empty_n, ap_enable_reg_pp0_iter0, ap_predicate_op112_read_state7, ap_predicate_op113_read_state7)
    begin
                ap_block_pp0_stage4_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((in_frequency_V_empty_n = ap_const_logic_0) and (ap_predicate_op113_read_state7 = ap_const_boolean_1)) or ((in_value_V_empty_n = ap_const_logic_0) and (ap_predicate_op112_read_state7 = ap_const_boolean_1))));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, in_value_V_empty_n, in_frequency_V_empty_n, extLd_loc_empty_n, extLd_loc_out_full_n)
    begin
                ap_block_state1 <= ((extLd_loc_out_full_n = ap_const_logic_0) or (extLd_loc_empty_n = ap_const_logic_0) or (in_frequency_V_empty_n = ap_const_logic_0) or (in_value_V_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state2_assign_proc : process(in_value_V_empty_n, in_frequency_V_empty_n)
    begin
                ap_block_state2 <= ((in_frequency_V_empty_n = ap_const_logic_0) or (in_value_V_empty_n = ap_const_logic_0));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state6_pp0_stage3_iter0_assign_proc : process(in_value_V_empty_n, in_frequency_V_empty_n, ap_predicate_op77_read_state6, ap_predicate_op78_read_state6)
    begin
                ap_block_state6_pp0_stage3_iter0 <= (((in_frequency_V_empty_n = ap_const_logic_0) and (ap_predicate_op78_read_state6 = ap_const_boolean_1)) or ((in_value_V_empty_n = ap_const_logic_0) and (ap_predicate_op77_read_state6 = ap_const_boolean_1)));
    end process;


    ap_block_state7_pp0_stage4_iter0_assign_proc : process(in_value_V_empty_n, in_frequency_V_empty_n, ap_predicate_op112_read_state7, ap_predicate_op113_read_state7)
    begin
                ap_block_state7_pp0_stage4_iter0 <= (((in_frequency_V_empty_n = ap_const_logic_0) and (ap_predicate_op113_read_state7 = ap_const_boolean_1)) or ((in_value_V_empty_n = ap_const_logic_0) and (ap_predicate_op112_read_state7 = ap_const_boolean_1)));
    end process;

        ap_block_state8_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_175_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001)
    begin
                ap_condition_175 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001));
    end process;


    ap_condition_358_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
                ap_condition_358 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_411_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter0, ap_block_pp0_stage3, icmp_ln21_reg_804)
    begin
                ap_condition_411 <= ((icmp_ln21_reg_804 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3));
    end process;


    ap_condition_590_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter0, icmp_ln21_reg_804, ap_block_pp0_stage3_11001)
    begin
                ap_condition_590 <= ((icmp_ln21_reg_804 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3));
    end process;


    ap_condition_668_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln21_reg_804, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4)
    begin
                ap_condition_668 <= ((icmp_ln21_reg_804 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4));
    end process;


    ap_condition_pp0_exit_iter0_state4_assign_proc : process(icmp_ln21_reg_804)
    begin
        if ((icmp_ln21_reg_804 = ap_const_lv1_0)) then 
            ap_condition_pp0_exit_iter0_state4 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_op_assign_phi_fu_304_p4_assign_proc : process(icmp_ln21_reg_804, op_assign_reg_299, ap_CS_fsm_pp0_stage0, i_reg_813, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((icmp_ln21_reg_804 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_op_assign_phi_fu_304_p4 <= i_reg_813;
        else 
            ap_phi_mux_op_assign_phi_fu_304_p4 <= op_assign_reg_299;
        end if; 
    end process;


    ap_phi_mux_t_V_3_phi_fu_291_p4_assign_proc : process(icmp_ln21_reg_804, t_V_3_reg_287, p_0217_2_i_i_reg_452, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((icmp_ln21_reg_804 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_t_V_3_phi_fu_291_p4 <= p_0217_2_i_i_reg_452;
        else 
            ap_phi_mux_t_V_3_phi_fu_291_p4 <= t_V_3_reg_287;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_p_0217_2_i_i_reg_452 <= "XXXXXXXXX";
    ap_phi_reg_pp0_iter0_p_0247_2_i_i_reg_514 <= "XXXXXXXXX";
    ap_phi_reg_pp0_iter0_s_0_2_i_i_reg_501 <= "XXXXXXXXX";
    ap_phi_reg_pp0_iter0_s_1_2_i_i_reg_488 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_s_next_0_2_i_i_reg_476 <= "XXXXXXXXX";
    ap_phi_reg_pp0_iter0_s_next_1_2_i_i_reg_464 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_predicate_op112_read_state7_assign_proc : process(icmp_ln21_reg_804, or_ln52_fu_711_p2)
    begin
                ap_predicate_op112_read_state7 <= ((or_ln52_fu_711_p2 = ap_const_lv1_1) and (icmp_ln21_reg_804 = ap_const_lv1_1));
    end process;


    ap_predicate_op113_read_state7_assign_proc : process(icmp_ln21_reg_804, or_ln52_fu_711_p2)
    begin
                ap_predicate_op113_read_state7 <= ((or_ln52_fu_711_p2 = ap_const_lv1_1) and (icmp_ln21_reg_804 = ap_const_lv1_1));
    end process;


    ap_predicate_op77_read_state6_assign_proc : process(icmp_ln21_reg_804, or_ln34_fu_658_p2)
    begin
                ap_predicate_op77_read_state6 <= ((or_ln34_fu_658_p2 = ap_const_lv1_1) and (icmp_ln21_reg_804 = ap_const_lv1_1));
    end process;


    ap_predicate_op78_read_state6_assign_proc : process(icmp_ln21_reg_804, or_ln34_fu_658_p2)
    begin
                ap_predicate_op78_read_state6 <= ((or_ln34_fu_658_p2 = ap_const_lv1_1) and (icmp_ln21_reg_804 = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    extLd_cast_fu_540_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(extLd_loc_read_reg_772),10));

    extLd_loc_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, extLd_loc_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            extLd_loc_blk_n <= extLd_loc_empty_n;
        else 
            extLd_loc_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    extLd_loc_out_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, extLd_loc_out_full_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            extLd_loc_out_blk_n <= extLd_loc_out_full_n;
        else 
            extLd_loc_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    extLd_loc_out_din <= extLd_loc_dout;

    extLd_loc_out_write_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, in_value_V_empty_n, in_frequency_V_empty_n, extLd_loc_empty_n, extLd_loc_out_full_n)
    begin
        if ((not(((extLd_loc_out_full_n = ap_const_logic_0) or (extLd_loc_empty_n = ap_const_logic_0) or (in_frequency_V_empty_n = ap_const_logic_0) or (in_value_V_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            extLd_loc_out_write <= ap_const_logic_1;
        else 
            extLd_loc_out_write <= ap_const_logic_0;
        end if; 
    end process;


    extLd_loc_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, in_value_V_empty_n, in_frequency_V_empty_n, extLd_loc_empty_n, extLd_loc_out_full_n)
    begin
        if ((not(((extLd_loc_out_full_n = ap_const_logic_0) or (extLd_loc_empty_n = ap_const_logic_0) or (in_frequency_V_empty_n = ap_const_logic_0) or (in_value_V_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            extLd_loc_read <= ap_const_logic_1;
        else 
            extLd_loc_read <= ap_const_logic_0;
        end if; 
    end process;


    frequency_0_V_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, or_ln52_reg_879, trunc_ln321_1_reg_889, trunc_ln321_reg_899, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, zext_ln31_fu_594_p1, ap_block_pp0_stage1, zext_ln321_1_fu_755_p1, zext_ln321_fu_761_p1)
    begin
        if (((or_ln52_reg_879 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln321_reg_899 = ap_const_lv1_0))) then 
            frequency_0_V_address0 <= zext_ln321_fu_761_p1(7 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln321_1_reg_889 = ap_const_lv1_0) and (or_ln52_reg_879 = ap_const_lv1_0))) then 
            frequency_0_V_address0 <= zext_ln321_1_fu_755_p1(7 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            frequency_0_V_address0 <= zext_ln31_fu_594_p1(7 - 1 downto 0);
        else 
            frequency_0_V_address0 <= "XXXXXXX";
        end if; 
    end process;

    frequency_0_V_address1 <= zext_ln32_fu_600_p1(7 - 1 downto 0);

    frequency_0_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, or_ln52_reg_879, trunc_ln321_1_reg_889, trunc_ln321_reg_899, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((or_ln52_reg_879 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln321_reg_899 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln321_1_reg_889 = ap_const_lv1_0) and (or_ln52_reg_879 = ap_const_lv1_0)))) then 
            frequency_0_V_ce0 <= ap_const_logic_1;
        else 
            frequency_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    frequency_0_V_ce1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            frequency_0_V_ce1 <= ap_const_logic_1;
        else 
            frequency_0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    frequency_0_V_d0_assign_proc : process(or_ln52_reg_879, add_ln209_1_reg_883, trunc_ln321_1_reg_889, add_ln209_reg_893, trunc_ln321_reg_899, ap_condition_358)
    begin
        if ((ap_const_boolean_1 = ap_condition_358)) then
            if (((or_ln52_reg_879 = ap_const_lv1_1) and (trunc_ln321_reg_899 = ap_const_lv1_0))) then 
                frequency_0_V_d0 <= add_ln209_reg_893;
            elsif (((trunc_ln321_1_reg_889 = ap_const_lv1_0) and (or_ln52_reg_879 = ap_const_lv1_0))) then 
                frequency_0_V_d0 <= add_ln209_1_reg_883;
            else 
                frequency_0_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            frequency_0_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    frequency_0_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, or_ln52_reg_879, trunc_ln321_1_reg_889, trunc_ln321_reg_899, ap_enable_reg_pp0_iter1)
    begin
        if ((((or_ln52_reg_879 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln321_reg_899 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln321_1_reg_889 = ap_const_lv1_0) and (or_ln52_reg_879 = ap_const_lv1_0)))) then 
            frequency_0_V_we0 <= ap_const_logic_1;
        else 
            frequency_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    frequency_1_V_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, or_ln52_reg_879, trunc_ln321_1_reg_889, trunc_ln321_reg_899, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, zext_ln31_fu_594_p1, ap_block_pp0_stage1, zext_ln321_1_fu_755_p1, zext_ln321_fu_761_p1)
    begin
        if (((trunc_ln321_reg_899 = ap_const_lv1_1) and (or_ln52_reg_879 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            frequency_1_V_address0 <= zext_ln321_fu_761_p1(7 - 1 downto 0);
        elsif (((trunc_ln321_1_reg_889 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (or_ln52_reg_879 = ap_const_lv1_0))) then 
            frequency_1_V_address0 <= zext_ln321_1_fu_755_p1(7 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            frequency_1_V_address0 <= zext_ln31_fu_594_p1(7 - 1 downto 0);
        else 
            frequency_1_V_address0 <= "XXXXXXX";
        end if; 
    end process;

    frequency_1_V_address1 <= zext_ln32_fu_600_p1(7 - 1 downto 0);

    frequency_1_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, or_ln52_reg_879, trunc_ln321_1_reg_889, trunc_ln321_reg_899, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((trunc_ln321_reg_899 = ap_const_lv1_1) and (or_ln52_reg_879 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((trunc_ln321_1_reg_889 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (or_ln52_reg_879 = ap_const_lv1_0)))) then 
            frequency_1_V_ce0 <= ap_const_logic_1;
        else 
            frequency_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    frequency_1_V_ce1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            frequency_1_V_ce1 <= ap_const_logic_1;
        else 
            frequency_1_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    frequency_1_V_d0_assign_proc : process(or_ln52_reg_879, add_ln209_1_reg_883, trunc_ln321_1_reg_889, add_ln209_reg_893, trunc_ln321_reg_899, ap_condition_358)
    begin
        if ((ap_const_boolean_1 = ap_condition_358)) then
            if (((trunc_ln321_reg_899 = ap_const_lv1_1) and (or_ln52_reg_879 = ap_const_lv1_1))) then 
                frequency_1_V_d0 <= add_ln209_reg_893;
            elsif (((trunc_ln321_1_reg_889 = ap_const_lv1_1) and (or_ln52_reg_879 = ap_const_lv1_0))) then 
                frequency_1_V_d0 <= add_ln209_1_reg_883;
            else 
                frequency_1_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            frequency_1_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    frequency_1_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, or_ln52_reg_879, trunc_ln321_1_reg_889, trunc_ln321_reg_899, ap_enable_reg_pp0_iter1)
    begin
        if ((((trunc_ln321_reg_899 = ap_const_lv1_1) and (or_ln52_reg_879 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((trunc_ln321_1_reg_889 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (or_ln52_reg_879 = ap_const_lv1_0)))) then 
            frequency_1_V_we0 <= ap_const_logic_1;
        else 
            frequency_1_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    i_fu_578_p2 <= std_logic_vector(unsigned(op_assign_reg_299) + unsigned(ap_const_lv9_1));
    icmp_ln21_fu_553_p2 <= "1" when (signed(zext_ln243_fu_549_p1) < signed(add_ln21_reg_799)) else "0";
    icmp_ln34_1_fu_635_p2 <= "1" when (unsigned(intermediate_freq_V_1_reg_838) < unsigned(node_freq_V_reg_332)) else "0";
    icmp_ln34_fu_630_p2 <= "1" when (unsigned(t_V_reg_353) < unsigned(extLd_loc_read_reg_772)) else "0";
    icmp_ln52_1_fu_687_p2 <= "1" when (unsigned(ap_phi_reg_pp0_iter0_p_0120_0_i_i_reg_443) < unsigned(ap_phi_reg_pp0_iter0_s_1_1_i_i_reg_387)) else "0";
    icmp_ln52_fu_682_p2 <= "1" when (unsigned(ap_phi_reg_pp0_iter0_t_V_4_reg_422) < unsigned(extLd_loc_read_reg_772)) else "0";
    icmp_ln879_2_fu_705_p2 <= "1" when (ap_phi_reg_pp0_iter0_t_V_5_reg_412 = op_assign_reg_299) else "0";
    icmp_ln879_fu_652_p2 <= "1" when (t_V_3_reg_287 = op_assign_reg_299) else "0";
    in_count_V_1_fu_749_p2 <= std_logic_vector(unsigned(ap_phi_reg_pp0_iter0_t_V_4_reg_422) + unsigned(ap_const_lv9_1));
    in_count_V_fu_676_p2 <= std_logic_vector(unsigned(t_V_reg_353) + unsigned(ap_const_lv9_1));

    in_frequency_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, in_frequency_V_empty_n, ap_CS_fsm_state2, ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter0, ap_block_pp0_stage3, icmp_ln21_reg_804, or_ln34_fu_658_p2, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, or_ln52_fu_711_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((or_ln52_fu_711_p2 = ap_const_lv1_1) and (icmp_ln21_reg_804 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((or_ln34_fu_658_p2 = ap_const_lv1_1) and (icmp_ln21_reg_804 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or (not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_frequency_V_blk_n <= in_frequency_V_empty_n;
        else 
            in_frequency_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_frequency_V_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, in_value_V_empty_n, in_frequency_V_empty_n, extLd_loc_empty_n, extLd_loc_out_full_n, ap_CS_fsm_state2, ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_predicate_op113_read_state7, ap_block_pp0_stage4_11001, ap_predicate_op78_read_state6, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_predicate_op113_read_state7 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_predicate_op78_read_state6 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or (not(((in_frequency_V_empty_n = ap_const_logic_0) or (in_value_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2)) or (not(((extLd_loc_out_full_n = ap_const_logic_0) or (extLd_loc_empty_n = ap_const_logic_0) or (in_frequency_V_empty_n = ap_const_logic_0) or (in_value_V_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_frequency_V_read <= ap_const_logic_1;
        else 
            in_frequency_V_read <= ap_const_logic_0;
        end if; 
    end process;


    in_value_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, in_value_V_empty_n, ap_CS_fsm_state2, ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter0, ap_block_pp0_stage3, icmp_ln21_reg_804, or_ln34_fu_658_p2, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, or_ln52_fu_711_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((or_ln52_fu_711_p2 = ap_const_lv1_1) and (icmp_ln21_reg_804 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((or_ln34_fu_658_p2 = ap_const_lv1_1) and (icmp_ln21_reg_804 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or (not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_value_V_blk_n <= in_value_V_empty_n;
        else 
            in_value_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_value_V_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, in_value_V_empty_n, in_frequency_V_empty_n, extLd_loc_empty_n, extLd_loc_out_full_n, ap_CS_fsm_state2, ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_predicate_op112_read_state7, ap_block_pp0_stage4_11001, ap_predicate_op77_read_state6, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_predicate_op112_read_state7 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_predicate_op77_read_state6 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or (not(((in_frequency_V_empty_n = ap_const_logic_0) or (in_value_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2)) or (not(((extLd_loc_out_full_n = ap_const_logic_0) or (extLd_loc_empty_n = ap_const_logic_0) or (in_frequency_V_empty_n = ap_const_logic_0) or (in_value_V_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_value_V_read <= ap_const_logic_1;
        else 
            in_value_V_read <= ap_const_logic_0;
        end if; 
    end process;

    intermediate_freq_V_1_fu_609_p3 <= 
        frequency_1_V_q0 when (trunc_ln31_fu_605_p1(0) = '1') else 
        frequency_0_V_q0;
    intermediate_freq_ne_fu_617_p3 <= 
        frequency_0_V_q1 when (trunc_ln31_fu_605_p1(0) = '1') else 
        frequency_1_V_q1;
    left_V_address0 <= zext_ln36_fu_664_p1(8 - 1 downto 0);

    left_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter0, icmp_ln21_reg_804, or_ln34_fu_658_p2, ap_block_pp0_stage3_11001)
    begin
        if ((((or_ln34_fu_658_p2 = ap_const_lv1_1) and (icmp_ln21_reg_804 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((or_ln34_fu_658_p2 = ap_const_lv1_0) and (icmp_ln21_reg_804 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            left_V_ce0 <= ap_const_logic_1;
        else 
            left_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    left_V_d0_assign_proc : process(or_ln34_fu_658_p2, s_0_0_i_i_reg_342, ap_condition_411)
    begin
        if ((ap_const_boolean_1 = ap_condition_411)) then
            if ((or_ln34_fu_658_p2 = ap_const_lv1_1)) then 
                left_V_d0 <= s_0_0_i_i_reg_342;
            elsif ((or_ln34_fu_658_p2 = ap_const_lv1_0)) then 
                left_V_d0 <= ap_const_lv9_1FF;
            else 
                left_V_d0 <= "XXXXXXXXX";
            end if;
        else 
            left_V_d0 <= "XXXXXXXXX";
        end if; 
    end process;


    left_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter0, icmp_ln21_reg_804, or_ln34_fu_658_p2, ap_block_pp0_stage3_11001)
    begin
        if ((((or_ln34_fu_658_p2 = ap_const_lv1_1) and (icmp_ln21_reg_804 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((or_ln34_fu_658_p2 = ap_const_lv1_0) and (icmp_ln21_reg_804 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            left_V_we0 <= ap_const_logic_1;
        else 
            left_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    lshr_ln_fu_584_p4 <= t_V_3_reg_287(8 downto 1);
    or_ln34_fu_658_p2 <= (icmp_ln879_fu_652_p2 or and_ln34_fu_646_p2);
    or_ln52_fu_711_p2 <= (icmp_ln879_2_fu_705_p2 or and_ln52_fu_699_p2);

    parent_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter0, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, zext_ln544_fu_625_p1, zext_ln544_4_fu_727_p1, zext_ln544_3_fu_767_p1, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            parent_V_address0 <= zext_ln544_3_fu_767_p1(8 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            parent_V_address0 <= zext_ln544_4_fu_727_p1(8 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            parent_V_address0 <= zext_ln544_fu_625_p1(8 - 1 downto 0);
        else 
            parent_V_address0 <= "XXXXXXXX";
        end if; 
    end process;


    parent_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_block_pp0_stage3_11001, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            parent_V_ce0 <= ap_const_logic_1;
        else 
            parent_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    parent_V_d0_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter0, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, op_assign_reg_299, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            parent_V_d0 <= ap_const_lv9_0;
        elsif ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            parent_V_d0 <= op_assign_reg_299;
        else 
            parent_V_d0 <= "XXXXXXXXX";
        end if; 
    end process;


    parent_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter0, icmp_ln21_reg_804, or_ln34_fu_658_p2, ap_CS_fsm_pp0_stage4, or_ln52_fu_711_p2, ap_block_pp0_stage4_11001, ap_block_pp0_stage3_11001, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or ((icmp_ln21_reg_804 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (or_ln52_fu_711_p2 = ap_const_lv1_0)) or ((or_ln34_fu_658_p2 = ap_const_lv1_0) and (icmp_ln21_reg_804 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            parent_V_we0 <= ap_const_logic_1;
        else 
            parent_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    ret_V_fu_562_p2 <= std_logic_vector(unsigned(ap_const_lv10_1) + unsigned(zext_ln215_fu_558_p1));
    right_V_address0 <= right_V_addr_reg_874;

    right_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln21_reg_804, ap_CS_fsm_pp0_stage4, or_ln52_fu_711_p2, ap_block_pp0_stage4_11001)
    begin
        if ((((icmp_ln21_reg_804 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (or_ln52_fu_711_p2 = ap_const_lv1_0)) or ((or_ln52_fu_711_p2 = ap_const_lv1_1) and (icmp_ln21_reg_804 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)))) then 
            right_V_ce0 <= ap_const_logic_1;
        else 
            right_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    right_V_d0_assign_proc : process(or_ln52_fu_711_p2, ap_phi_reg_pp0_iter0_s_0_1_i_i_reg_399, ap_condition_668)
    begin
        if ((ap_const_boolean_1 = ap_condition_668)) then
            if ((or_ln52_fu_711_p2 = ap_const_lv1_1)) then 
                right_V_d0 <= ap_phi_reg_pp0_iter0_s_0_1_i_i_reg_399;
            elsif ((or_ln52_fu_711_p2 = ap_const_lv1_0)) then 
                right_V_d0 <= ap_const_lv9_1FF;
            else 
                right_V_d0 <= "XXXXXXXXX";
            end if;
        else 
            right_V_d0 <= "XXXXXXXXX";
        end if; 
    end process;


    right_V_we0_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln21_reg_804, ap_CS_fsm_pp0_stage4, or_ln52_fu_711_p2, ap_block_pp0_stage4_11001)
    begin
        if ((((icmp_ln21_reg_804 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (or_ln52_fu_711_p2 = ap_const_lv1_0)) or ((or_ln52_fu_711_p2 = ap_const_lv1_1) and (icmp_ln21_reg_804 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)))) then 
            right_V_we0 <= ap_const_logic_1;
        else 
            right_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    tree_count_V_1_fu_732_p2 <= std_logic_vector(unsigned(ap_phi_reg_pp0_iter0_t_V_5_reg_412) + unsigned(ap_const_lv9_1));
    tree_count_V_fu_670_p2 <= std_logic_vector(unsigned(t_V_3_reg_287) + unsigned(ap_const_lv9_1));
    trunc_ln31_fu_605_p1 <= t_V_3_reg_287(1 - 1 downto 0);
    trunc_ln321_1_fu_723_p1 <= op_assign_reg_299(1 - 1 downto 0);
    trunc_ln321_fu_745_p1 <= op_assign_reg_299(1 - 1 downto 0);
    xor_ln34_fu_640_p2 <= (icmp_ln34_1_fu_635_p2 xor ap_const_lv1_1);
    xor_ln52_fu_693_p2 <= (icmp_ln52_1_fu_687_p2 xor ap_const_lv1_1);
    zext_ln215_fu_558_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_t_V_3_phi_fu_291_p4),10));
    zext_ln243_fu_549_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_op_assign_phi_fu_304_p4),10));
    zext_ln31_fu_594_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln_fu_584_p4),64));
    zext_ln321_1_fu_755_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_536),64));
    zext_ln321_fu_761_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_536),64));
    zext_ln32_fu_600_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln1_reg_808),64));
    zext_ln36_fu_664_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(op_assign_reg_299),64));
    zext_ln544_3_fu_767_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_3_reg_287),64));
    zext_ln544_4_fu_727_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_reg_pp0_iter0_t_V_5_reg_412),64));
    zext_ln544_fu_625_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_3_reg_287),64));
end behav;
