-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity create_tree is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_value_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    in_value_V_ce0 : OUT STD_LOGIC;
    in_value_V_q0 : IN STD_LOGIC_VECTOR (8 downto 0);
    in_frequency_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    in_frequency_V_ce0 : OUT STD_LOGIC;
    in_frequency_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    extLd_loc_dout : IN STD_LOGIC_VECTOR (8 downto 0);
    extLd_loc_empty_n : IN STD_LOGIC;
    extLd_loc_read : OUT STD_LOGIC;
    parent_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    parent_V_ce0 : OUT STD_LOGIC;
    parent_V_we0 : OUT STD_LOGIC;
    parent_V_d0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    left_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    left_V_ce0 : OUT STD_LOGIC;
    left_V_we0 : OUT STD_LOGIC;
    left_V_d0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    right_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    right_V_ce0 : OUT STD_LOGIC;
    right_V_we0 : OUT STD_LOGIC;
    right_V_d0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    extLd_loc_out_din : OUT STD_LOGIC_VECTOR (8 downto 0);
    extLd_loc_out_full_n : IN STD_LOGIC;
    extLd_loc_out_write : OUT STD_LOGIC );
end;


architecture behav of create_tree is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv9_1FF : STD_LOGIC_VECTOR (8 downto 0) := "111111111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv10_3FF : STD_LOGIC_VECTOR (9 downto 0) := "1111111111";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal extLd_loc_blk_n : STD_LOGIC;
    signal extLd_loc_out_blk_n : STD_LOGIC;
    signal t_V_3_reg_291 : STD_LOGIC_VECTOR (8 downto 0);
    signal t_V_reg_303 : STD_LOGIC_VECTOR (8 downto 0);
    signal op_assign_reg_315 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_0147_2_i_i_reg_385 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_098_2_i_i_reg_397 : STD_LOGIC_VECTOR (8 downto 0);
    signal reg_419 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_state6_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal icmp_ln19_reg_688 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln51_fu_615_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal extLd_loc_read_reg_677 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal add_ln19_fu_427_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln19_reg_683 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln19_fu_437_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal i_fu_442_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_reg_692 : STD_LOGIC_VECTOR (8 downto 0);
    signal lshr_ln1_reg_707 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_1_fu_478_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_V_1_reg_712 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state3_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal s_value_V_reg_727 : STD_LOGIC_VECTOR (8 downto 0);
    signal s_frequency_V_2_reg_733 : STD_LOGIC_VECTOR (31 downto 0);
    signal intermediate_freq_V_1_fu_514_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal intermediate_freq_V_1_reg_760 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state4_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal intermediate_freq_ne_fu_522_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal intermediate_freq_ne_reg_767 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_value_V_1_reg_772 : STD_LOGIC_VECTOR (8 downto 0);
    signal s_frequency_V_reg_777 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln34_fu_562_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state5_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal tree_count_V_fu_574_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal in_count_V_fu_580_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal right_V_addr_reg_796 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln51_reg_801 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln209_1_fu_621_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln209_1_reg_805 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln321_1_fu_627_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln321_1_reg_811 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln209_fu_643_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln209_reg_815 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln321_fu_649_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln321_reg_821 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal frequency_0_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal frequency_0_V_ce0 : STD_LOGIC;
    signal frequency_0_V_we0 : STD_LOGIC;
    signal frequency_0_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal frequency_0_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal frequency_0_V_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal frequency_0_V_ce1 : STD_LOGIC;
    signal frequency_0_V_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal frequency_1_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal frequency_1_V_ce0 : STD_LOGIC;
    signal frequency_1_V_we0 : STD_LOGIC;
    signal frequency_1_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal frequency_1_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal frequency_1_V_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal frequency_1_V_ce1 : STD_LOGIC;
    signal frequency_1_V_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_t_V_3_phi_fu_295_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_t_V_phi_fu_307_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_mux_op_assign_phi_fu_320_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_reg_pp0_iter0_s_1_0_i_i_reg_328 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_s_0_0_i_i_reg_337 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_reg_pp0_iter0_t_V_5_reg_347 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_reg_pp0_iter0_t_V_4_reg_357 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_reg_pp0_iter0_p_0181_0_i_i_reg_367 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_p_0102_0_i_i_reg_376 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_p_0147_2_i_i_reg_385 : STD_LOGIC_VECTOR (8 downto 0);
    signal tree_count_V_1_fu_636_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal in_count_V_1_fu_653_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_reg_pp0_iter0_p_098_2_i_i_reg_397 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln544_4_fu_448_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln29_fu_494_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal zext_ln31_fu_500_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_5_fu_505_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln36_fu_568_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal zext_ln544_fu_530_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_6_fu_631_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal zext_ln321_1_fu_660_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln321_fu_666_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_3_fu_672_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal extLd_cast_fu_423_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln243_fu_433_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln215_fu_454_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_V_fu_458_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln215_1_fu_474_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal lshr_ln_fu_484_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal trunc_ln29_fu_510_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln34_1_fu_540_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln34_fu_544_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln34_fu_535_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln34_fu_550_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_fu_556_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln51_1_fu_591_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln51_fu_597_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln51_fu_586_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln51_fu_603_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_2_fu_609_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_529 : BOOLEAN;
    signal ap_condition_299 : BOOLEAN;
    signal ap_condition_342 : BOOLEAN;
    signal ap_condition_113 : BOOLEAN;
    signal ap_condition_608 : BOOLEAN;

    component create_tree_frequibs IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component create_tree_frequjbC IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    frequency_0_V_U : component create_tree_frequibs
    generic map (
        DataWidth => 32,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => frequency_0_V_address0,
        ce0 => frequency_0_V_ce0,
        we0 => frequency_0_V_we0,
        d0 => frequency_0_V_d0,
        q0 => frequency_0_V_q0,
        address1 => frequency_0_V_address1,
        ce1 => frequency_0_V_ce1,
        q1 => frequency_0_V_q1);

    frequency_1_V_U : component create_tree_frequjbC
    generic map (
        DataWidth => 32,
        AddressRange => 127,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => frequency_1_V_address0,
        ce0 => frequency_1_V_ce0,
        we0 => frequency_1_V_we0,
        d0 => frequency_1_V_d0,
        q0 => frequency_1_V_q0,
        address1 => frequency_1_V_address1,
        ce1 => frequency_1_V_ce1,
        q1 => frequency_1_V_q1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((extLd_loc_out_full_n = ap_const_logic_0) or (extLd_loc_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif ((not(((extLd_loc_out_full_n = ap_const_logic_0) or (extLd_loc_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter0_p_0102_0_i_i_reg_376_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_529)) then
                if ((or_ln34_fu_562_p2 = ap_const_lv1_0)) then 
                    ap_phi_reg_pp0_iter0_p_0102_0_i_i_reg_376 <= intermediate_freq_ne_reg_767;
                elsif ((or_ln34_fu_562_p2 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter0_p_0102_0_i_i_reg_376 <= intermediate_freq_V_1_reg_760;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter0_p_0181_0_i_i_reg_367_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_529)) then
                if ((or_ln34_fu_562_p2 = ap_const_lv1_0)) then 
                    ap_phi_reg_pp0_iter0_p_0181_0_i_i_reg_367 <= intermediate_freq_V_1_reg_760;
                elsif ((or_ln34_fu_562_p2 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter0_p_0181_0_i_i_reg_367 <= s_frequency_V_2_reg_733;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter0_s_0_0_i_i_reg_337_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_529)) then
                if ((or_ln34_fu_562_p2 = ap_const_lv1_0)) then 
                    ap_phi_reg_pp0_iter0_s_0_0_i_i_reg_337 <= s_value_V_reg_727;
                elsif ((or_ln34_fu_562_p2 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter0_s_0_0_i_i_reg_337 <= s_value_V_1_reg_772;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter0_s_1_0_i_i_reg_328_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_529)) then
                if ((or_ln34_fu_562_p2 = ap_const_lv1_0)) then 
                    ap_phi_reg_pp0_iter0_s_1_0_i_i_reg_328 <= s_frequency_V_2_reg_733;
                elsif ((or_ln34_fu_562_p2 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter0_s_1_0_i_i_reg_328 <= s_frequency_V_reg_777;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter0_t_V_4_reg_357_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_529)) then
                if ((or_ln34_fu_562_p2 = ap_const_lv1_0)) then 
                    ap_phi_reg_pp0_iter0_t_V_4_reg_357 <= t_V_reg_303;
                elsif ((or_ln34_fu_562_p2 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter0_t_V_4_reg_357 <= in_count_V_fu_580_p2;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter0_t_V_5_reg_347_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_529)) then
                if ((or_ln34_fu_562_p2 = ap_const_lv1_0)) then 
                    ap_phi_reg_pp0_iter0_t_V_5_reg_347 <= tree_count_V_fu_574_p2;
                elsif ((or_ln34_fu_562_p2 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter0_t_V_5_reg_347 <= t_V_3_reg_291;
                end if;
            end if; 
        end if;
    end process;

    op_assign_reg_315_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln19_reg_688 = ap_const_lv1_1))) then 
                op_assign_reg_315 <= i_reg_692;
            elsif ((not(((extLd_loc_out_full_n = ap_const_logic_0) or (extLd_loc_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                op_assign_reg_315 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    p_0147_2_i_i_reg_385_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_113)) then
                if (((or_ln51_fu_615_p2 = ap_const_lv1_0) and (icmp_ln19_reg_688 = ap_const_lv1_1))) then 
                    p_0147_2_i_i_reg_385 <= tree_count_V_1_fu_636_p2;
                elsif (((or_ln51_fu_615_p2 = ap_const_lv1_1) and (icmp_ln19_reg_688 = ap_const_lv1_1))) then 
                    p_0147_2_i_i_reg_385 <= ap_phi_reg_pp0_iter0_t_V_5_reg_347;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    p_0147_2_i_i_reg_385 <= ap_phi_reg_pp0_iter0_p_0147_2_i_i_reg_385;
                end if;
            end if; 
        end if;
    end process;

    p_098_2_i_i_reg_397_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_113)) then
                if (((or_ln51_fu_615_p2 = ap_const_lv1_0) and (icmp_ln19_reg_688 = ap_const_lv1_1))) then 
                    p_098_2_i_i_reg_397 <= ap_phi_reg_pp0_iter0_t_V_4_reg_357;
                elsif (((or_ln51_fu_615_p2 = ap_const_lv1_1) and (icmp_ln19_reg_688 = ap_const_lv1_1))) then 
                    p_098_2_i_i_reg_397 <= in_count_V_1_fu_653_p2;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    p_098_2_i_i_reg_397 <= ap_phi_reg_pp0_iter0_p_098_2_i_i_reg_397;
                end if;
            end if; 
        end if;
    end process;

    t_V_3_reg_291_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln19_reg_688 = ap_const_lv1_1))) then 
                t_V_3_reg_291 <= p_0147_2_i_i_reg_385;
            elsif ((not(((extLd_loc_out_full_n = ap_const_logic_0) or (extLd_loc_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                t_V_3_reg_291 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    t_V_reg_303_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln19_reg_688 = ap_const_lv1_1))) then 
                t_V_reg_303 <= p_098_2_i_i_reg_397;
            elsif ((not(((extLd_loc_out_full_n = ap_const_logic_0) or (extLd_loc_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                t_V_reg_303 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((extLd_loc_out_full_n = ap_const_logic_0) or (extLd_loc_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                add_ln19_reg_683 <= add_ln19_fu_427_p2;
                extLd_loc_read_reg_677 <= extLd_loc_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (or_ln51_fu_615_p2 = ap_const_lv1_0) and (icmp_ln19_reg_688 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                add_ln209_1_reg_805 <= add_ln209_1_fu_621_p2;
                trunc_ln321_1_reg_811 <= trunc_ln321_1_fu_627_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (or_ln51_fu_615_p2 = ap_const_lv1_1) and (icmp_ln19_reg_688 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                add_ln209_reg_815 <= add_ln209_fu_643_p2;
                trunc_ln321_reg_821 <= trunc_ln321_fu_649_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                i_reg_692 <= i_fu_442_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln19_reg_688 <= icmp_ln19_fu_437_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln19_reg_688 = ap_const_lv1_1))) then
                intermediate_freq_V_1_reg_760 <= intermediate_freq_V_1_fu_514_p3;
                intermediate_freq_ne_reg_767 <= intermediate_freq_ne_fu_522_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln19_fu_437_p2 = ap_const_lv1_1))) then
                lshr_ln1_reg_707 <= ret_V_fu_458_p2(9 downto 1);
                ret_V_1_reg_712 <= ret_V_1_fu_478_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (icmp_ln19_reg_688 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                or_ln51_reg_801 <= or_ln51_fu_615_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (or_ln51_fu_615_p2 = ap_const_lv1_1) and (icmp_ln19_reg_688 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (or_ln51_fu_615_p2 = ap_const_lv1_0) and (icmp_ln19_reg_688 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)))) then
                reg_419 <= op_assign_reg_315(8 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln19_reg_688 = ap_const_lv1_1))) then
                right_V_addr_reg_796 <= zext_ln36_fu_568_p1(8 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln19_reg_688 = ap_const_lv1_1))) then
                s_frequency_V_2_reg_733 <= in_frequency_V_q0;
                s_value_V_reg_727 <= in_value_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln19_reg_688 = ap_const_lv1_1))) then
                s_frequency_V_reg_777 <= in_frequency_V_q0;
                s_value_V_1_reg_772 <= in_value_V_q0;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, extLd_loc_empty_n, extLd_loc_out_full_n, ap_enable_reg_pp0_iter0, icmp_ln19_fu_437_p2, ap_block_pp0_stage0_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((extLd_loc_out_full_n = ap_const_logic_0) or (extLd_loc_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln19_fu_437_p2 = ap_const_lv1_0))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln19_fu_437_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXX";
        end case;
    end process;
    add_ln19_fu_427_p2 <= std_logic_vector(unsigned(extLd_cast_fu_423_p1) + unsigned(ap_const_lv10_3FF));
    add_ln209_1_fu_621_p2 <= std_logic_vector(unsigned(ap_phi_reg_pp0_iter0_p_0181_0_i_i_reg_367) + unsigned(ap_phi_reg_pp0_iter0_p_0102_0_i_i_reg_376));
    add_ln209_fu_643_p2 <= std_logic_vector(unsigned(ap_phi_reg_pp0_iter0_p_0181_0_i_i_reg_367) + unsigned(ap_phi_reg_pp0_iter0_s_1_0_i_i_reg_328));
    and_ln34_fu_550_p2 <= (xor_ln34_fu_544_p2 and icmp_ln34_fu_535_p2);
    and_ln51_fu_603_p2 <= (xor_ln51_fu_597_p2 and icmp_ln51_fu_586_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(5);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state8 <= ap_CS_fsm(6);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, extLd_loc_empty_n, extLd_loc_out_full_n)
    begin
                ap_block_state1 <= ((extLd_loc_out_full_n = ap_const_logic_0) or (extLd_loc_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_113_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter0, ap_block_pp0_stage4_11001)
    begin
                ap_condition_113 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001));
    end process;


    ap_condition_299_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
                ap_condition_299 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_342_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln19_reg_688, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3)
    begin
                ap_condition_342 <= ((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln19_reg_688 = ap_const_lv1_1));
    end process;


    ap_condition_529_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln19_reg_688, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
                ap_condition_529 <= ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln19_reg_688 = ap_const_lv1_1));
    end process;


    ap_condition_608_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter0, icmp_ln19_reg_688, ap_block_pp0_stage4)
    begin
                ap_condition_608 <= ((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (icmp_ln19_reg_688 = ap_const_lv1_1));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln19_fu_437_p2)
    begin
        if ((icmp_ln19_fu_437_p2 = ap_const_lv1_0)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_op_assign_phi_fu_320_p4_assign_proc : process(op_assign_reg_315, icmp_ln19_reg_688, ap_CS_fsm_pp0_stage0, i_reg_692, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln19_reg_688 = ap_const_lv1_1))) then 
            ap_phi_mux_op_assign_phi_fu_320_p4 <= i_reg_692;
        else 
            ap_phi_mux_op_assign_phi_fu_320_p4 <= op_assign_reg_315;
        end if; 
    end process;


    ap_phi_mux_t_V_3_phi_fu_295_p4_assign_proc : process(t_V_3_reg_291, p_0147_2_i_i_reg_385, icmp_ln19_reg_688, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln19_reg_688 = ap_const_lv1_1))) then 
            ap_phi_mux_t_V_3_phi_fu_295_p4 <= p_0147_2_i_i_reg_385;
        else 
            ap_phi_mux_t_V_3_phi_fu_295_p4 <= t_V_3_reg_291;
        end if; 
    end process;


    ap_phi_mux_t_V_phi_fu_307_p4_assign_proc : process(t_V_reg_303, p_098_2_i_i_reg_397, icmp_ln19_reg_688, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln19_reg_688 = ap_const_lv1_1))) then 
            ap_phi_mux_t_V_phi_fu_307_p4 <= p_098_2_i_i_reg_397;
        else 
            ap_phi_mux_t_V_phi_fu_307_p4 <= t_V_reg_303;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_p_0147_2_i_i_reg_385 <= "XXXXXXXXX";
    ap_phi_reg_pp0_iter0_p_098_2_i_i_reg_397 <= "XXXXXXXXX";

    ap_ready_assign_proc : process(ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    extLd_cast_fu_423_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(extLd_loc_dout),10));

    extLd_loc_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, extLd_loc_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            extLd_loc_blk_n <= extLd_loc_empty_n;
        else 
            extLd_loc_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    extLd_loc_out_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, extLd_loc_out_full_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            extLd_loc_out_blk_n <= extLd_loc_out_full_n;
        else 
            extLd_loc_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    extLd_loc_out_din <= extLd_loc_dout;

    extLd_loc_out_write_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, extLd_loc_empty_n, extLd_loc_out_full_n)
    begin
        if ((not(((extLd_loc_out_full_n = ap_const_logic_0) or (extLd_loc_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            extLd_loc_out_write <= ap_const_logic_1;
        else 
            extLd_loc_out_write <= ap_const_logic_0;
        end if; 
    end process;


    extLd_loc_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, extLd_loc_empty_n, extLd_loc_out_full_n)
    begin
        if ((not(((extLd_loc_out_full_n = ap_const_logic_0) or (extLd_loc_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            extLd_loc_read <= ap_const_logic_1;
        else 
            extLd_loc_read <= ap_const_logic_0;
        end if; 
    end process;


    frequency_0_V_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, or_ln51_reg_801, trunc_ln321_1_reg_811, trunc_ln321_reg_821, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, zext_ln29_fu_494_p1, ap_block_pp0_stage1, zext_ln321_1_fu_660_p1, zext_ln321_fu_666_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln321_reg_821 = ap_const_lv1_0) and (or_ln51_reg_801 = ap_const_lv1_1))) then 
            frequency_0_V_address0 <= zext_ln321_fu_666_p1(7 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln321_1_reg_811 = ap_const_lv1_0) and (or_ln51_reg_801 = ap_const_lv1_0))) then 
            frequency_0_V_address0 <= zext_ln321_1_fu_660_p1(7 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            frequency_0_V_address0 <= zext_ln29_fu_494_p1(7 - 1 downto 0);
        else 
            frequency_0_V_address0 <= "XXXXXXX";
        end if; 
    end process;

    frequency_0_V_address1 <= zext_ln31_fu_500_p1(7 - 1 downto 0);

    frequency_0_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, or_ln51_reg_801, trunc_ln321_1_reg_811, trunc_ln321_reg_821, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln321_reg_821 = ap_const_lv1_0) and (or_ln51_reg_801 = ap_const_lv1_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln321_1_reg_811 = ap_const_lv1_0) and (or_ln51_reg_801 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            frequency_0_V_ce0 <= ap_const_logic_1;
        else 
            frequency_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    frequency_0_V_ce1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            frequency_0_V_ce1 <= ap_const_logic_1;
        else 
            frequency_0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    frequency_0_V_d0_assign_proc : process(or_ln51_reg_801, add_ln209_1_reg_805, trunc_ln321_1_reg_811, add_ln209_reg_815, trunc_ln321_reg_821, ap_condition_299)
    begin
        if ((ap_const_boolean_1 = ap_condition_299)) then
            if (((trunc_ln321_reg_821 = ap_const_lv1_0) and (or_ln51_reg_801 = ap_const_lv1_1))) then 
                frequency_0_V_d0 <= add_ln209_reg_815;
            elsif (((trunc_ln321_1_reg_811 = ap_const_lv1_0) and (or_ln51_reg_801 = ap_const_lv1_0))) then 
                frequency_0_V_d0 <= add_ln209_1_reg_805;
            else 
                frequency_0_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            frequency_0_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    frequency_0_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, or_ln51_reg_801, trunc_ln321_1_reg_811, trunc_ln321_reg_821, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln321_reg_821 = ap_const_lv1_0) and (or_ln51_reg_801 = ap_const_lv1_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln321_1_reg_811 = ap_const_lv1_0) and (or_ln51_reg_801 = ap_const_lv1_0)))) then 
            frequency_0_V_we0 <= ap_const_logic_1;
        else 
            frequency_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    frequency_1_V_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, or_ln51_reg_801, trunc_ln321_1_reg_811, trunc_ln321_reg_821, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, zext_ln29_fu_494_p1, ap_block_pp0_stage1, zext_ln321_1_fu_660_p1, zext_ln321_fu_666_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln321_reg_821 = ap_const_lv1_1) and (or_ln51_reg_801 = ap_const_lv1_1))) then 
            frequency_1_V_address0 <= zext_ln321_fu_666_p1(7 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (or_ln51_reg_801 = ap_const_lv1_0) and (trunc_ln321_1_reg_811 = ap_const_lv1_1))) then 
            frequency_1_V_address0 <= zext_ln321_1_fu_660_p1(7 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            frequency_1_V_address0 <= zext_ln29_fu_494_p1(7 - 1 downto 0);
        else 
            frequency_1_V_address0 <= "XXXXXXX";
        end if; 
    end process;

    frequency_1_V_address1 <= zext_ln31_fu_500_p1(7 - 1 downto 0);

    frequency_1_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, or_ln51_reg_801, trunc_ln321_1_reg_811, trunc_ln321_reg_821, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln321_reg_821 = ap_const_lv1_1) and (or_ln51_reg_801 = ap_const_lv1_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln51_reg_801 = ap_const_lv1_0) and (trunc_ln321_1_reg_811 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            frequency_1_V_ce0 <= ap_const_logic_1;
        else 
            frequency_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    frequency_1_V_ce1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            frequency_1_V_ce1 <= ap_const_logic_1;
        else 
            frequency_1_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    frequency_1_V_d0_assign_proc : process(or_ln51_reg_801, add_ln209_1_reg_805, trunc_ln321_1_reg_811, add_ln209_reg_815, trunc_ln321_reg_821, ap_condition_299)
    begin
        if ((ap_const_boolean_1 = ap_condition_299)) then
            if (((trunc_ln321_reg_821 = ap_const_lv1_1) and (or_ln51_reg_801 = ap_const_lv1_1))) then 
                frequency_1_V_d0 <= add_ln209_reg_815;
            elsif (((or_ln51_reg_801 = ap_const_lv1_0) and (trunc_ln321_1_reg_811 = ap_const_lv1_1))) then 
                frequency_1_V_d0 <= add_ln209_1_reg_805;
            else 
                frequency_1_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            frequency_1_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    frequency_1_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, or_ln51_reg_801, trunc_ln321_1_reg_811, trunc_ln321_reg_821, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln321_reg_821 = ap_const_lv1_1) and (or_ln51_reg_801 = ap_const_lv1_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln51_reg_801 = ap_const_lv1_0) and (trunc_ln321_1_reg_811 = ap_const_lv1_1)))) then 
            frequency_1_V_we0 <= ap_const_logic_1;
        else 
            frequency_1_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    i_fu_442_p2 <= std_logic_vector(unsigned(ap_phi_mux_op_assign_phi_fu_320_p4) + unsigned(ap_const_lv9_1));
    icmp_ln19_fu_437_p2 <= "1" when (signed(zext_ln243_fu_433_p1) < signed(add_ln19_reg_683)) else "0";
    icmp_ln34_1_fu_540_p2 <= "1" when (unsigned(intermediate_freq_V_1_reg_760) < unsigned(s_frequency_V_2_reg_733)) else "0";
    icmp_ln34_fu_535_p2 <= "1" when (unsigned(t_V_reg_303) < unsigned(extLd_loc_read_reg_677)) else "0";
    icmp_ln51_1_fu_591_p2 <= "1" when (unsigned(ap_phi_reg_pp0_iter0_p_0102_0_i_i_reg_376) < unsigned(ap_phi_reg_pp0_iter0_s_1_0_i_i_reg_328)) else "0";
    icmp_ln51_fu_586_p2 <= "1" when (unsigned(ap_phi_reg_pp0_iter0_t_V_4_reg_357) < unsigned(extLd_loc_read_reg_677)) else "0";
    icmp_ln879_2_fu_609_p2 <= "1" when (ap_phi_reg_pp0_iter0_t_V_5_reg_347 = op_assign_reg_315) else "0";
    icmp_ln879_fu_556_p2 <= "1" when (t_V_3_reg_291 = op_assign_reg_315) else "0";
    in_count_V_1_fu_653_p2 <= std_logic_vector(unsigned(ap_phi_reg_pp0_iter0_t_V_4_reg_357) + unsigned(ap_const_lv9_1));
    in_count_V_fu_580_p2 <= std_logic_vector(unsigned(t_V_reg_303) + unsigned(ap_const_lv9_1));

    in_frequency_V_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0, zext_ln544_4_fu_448_p1, ap_block_pp0_stage1, zext_ln544_5_fu_505_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                in_frequency_V_address0 <= zext_ln544_5_fu_505_p1(8 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                in_frequency_V_address0 <= zext_ln544_4_fu_448_p1(8 - 1 downto 0);
            else 
                in_frequency_V_address0 <= "XXXXXXXX";
            end if;
        else 
            in_frequency_V_address0 <= "XXXXXXXX";
        end if; 
    end process;


    in_frequency_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            in_frequency_V_ce0 <= ap_const_logic_1;
        else 
            in_frequency_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    in_value_V_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0, zext_ln544_4_fu_448_p1, ap_block_pp0_stage1, zext_ln544_5_fu_505_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                in_value_V_address0 <= zext_ln544_5_fu_505_p1(8 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                in_value_V_address0 <= zext_ln544_4_fu_448_p1(8 - 1 downto 0);
            else 
                in_value_V_address0 <= "XXXXXXXX";
            end if;
        else 
            in_value_V_address0 <= "XXXXXXXX";
        end if; 
    end process;


    in_value_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            in_value_V_ce0 <= ap_const_logic_1;
        else 
            in_value_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    intermediate_freq_V_1_fu_514_p3 <= 
        frequency_1_V_q0 when (trunc_ln29_fu_510_p1(0) = '1') else 
        frequency_0_V_q0;
    intermediate_freq_ne_fu_522_p3 <= 
        frequency_0_V_q1 when (trunc_ln29_fu_510_p1(0) = '1') else 
        frequency_1_V_q1;
    left_V_address0 <= zext_ln36_fu_568_p1(8 - 1 downto 0);

    left_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln19_reg_688, or_ln34_fu_562_p2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (or_ln34_fu_562_p2 = ap_const_lv1_1) and (icmp_ln19_reg_688 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (or_ln34_fu_562_p2 = ap_const_lv1_0) and (icmp_ln19_reg_688 = ap_const_lv1_1)))) then 
            left_V_ce0 <= ap_const_logic_1;
        else 
            left_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    left_V_d0_assign_proc : process(s_value_V_reg_727, or_ln34_fu_562_p2, ap_condition_342)
    begin
        if ((ap_const_boolean_1 = ap_condition_342)) then
            if ((or_ln34_fu_562_p2 = ap_const_lv1_1)) then 
                left_V_d0 <= s_value_V_reg_727;
            elsif ((or_ln34_fu_562_p2 = ap_const_lv1_0)) then 
                left_V_d0 <= ap_const_lv9_1FF;
            else 
                left_V_d0 <= "XXXXXXXXX";
            end if;
        else 
            left_V_d0 <= "XXXXXXXXX";
        end if; 
    end process;


    left_V_we0_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln19_reg_688, or_ln34_fu_562_p2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (or_ln34_fu_562_p2 = ap_const_lv1_1) and (icmp_ln19_reg_688 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (or_ln34_fu_562_p2 = ap_const_lv1_0) and (icmp_ln19_reg_688 = ap_const_lv1_1)))) then 
            left_V_we0 <= ap_const_logic_1;
        else 
            left_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    lshr_ln_fu_484_p4 <= t_V_3_reg_291(8 downto 1);
    or_ln34_fu_562_p2 <= (icmp_ln879_fu_556_p2 or and_ln34_fu_550_p2);
    or_ln51_fu_615_p2 <= (icmp_ln879_2_fu_609_p2 or and_ln51_fu_603_p2);

    parent_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, zext_ln544_fu_530_p1, zext_ln544_6_fu_631_p1, ap_block_pp0_stage4, zext_ln544_3_fu_672_p1, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            parent_V_address0 <= zext_ln544_3_fu_672_p1(8 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            parent_V_address0 <= zext_ln544_6_fu_631_p1(8 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            parent_V_address0 <= zext_ln544_fu_530_p1(8 - 1 downto 0);
        else 
            parent_V_address0 <= "XXXXXXXX";
        end if; 
    end process;


    parent_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter0, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)))) then 
            parent_V_ce0 <= ap_const_logic_1;
        else 
            parent_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    parent_V_d0_assign_proc : process(op_assign_reg_315, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            parent_V_d0 <= ap_const_lv9_0;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)))) then 
            parent_V_d0 <= op_assign_reg_315;
        else 
            parent_V_d0 <= "XXXXXXXXX";
        end if; 
    end process;


    parent_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter0, ap_block_pp0_stage4_11001, icmp_ln19_reg_688, or_ln51_fu_615_p2, or_ln34_fu_562_p2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (or_ln34_fu_562_p2 = ap_const_lv1_0) and (icmp_ln19_reg_688 = ap_const_lv1_1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (or_ln51_fu_615_p2 = ap_const_lv1_0) and (icmp_ln19_reg_688 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)))) then 
            parent_V_we0 <= ap_const_logic_1;
        else 
            parent_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    ret_V_1_fu_478_p2 <= std_logic_vector(unsigned(ap_const_lv10_1) + unsigned(zext_ln215_1_fu_474_p1));
    ret_V_fu_458_p2 <= std_logic_vector(unsigned(ap_const_lv10_1) + unsigned(zext_ln215_fu_454_p1));
    right_V_address0 <= right_V_addr_reg_796;

    right_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter0, ap_block_pp0_stage4_11001, icmp_ln19_reg_688, or_ln51_fu_615_p2)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (or_ln51_fu_615_p2 = ap_const_lv1_1) and (icmp_ln19_reg_688 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (or_ln51_fu_615_p2 = ap_const_lv1_0) and (icmp_ln19_reg_688 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)))) then 
            right_V_ce0 <= ap_const_logic_1;
        else 
            right_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    right_V_d0_assign_proc : process(or_ln51_fu_615_p2, ap_phi_reg_pp0_iter0_s_0_0_i_i_reg_337, ap_condition_608)
    begin
        if ((ap_const_boolean_1 = ap_condition_608)) then
            if ((or_ln51_fu_615_p2 = ap_const_lv1_1)) then 
                right_V_d0 <= ap_phi_reg_pp0_iter0_s_0_0_i_i_reg_337;
            elsif ((or_ln51_fu_615_p2 = ap_const_lv1_0)) then 
                right_V_d0 <= ap_const_lv9_1FF;
            else 
                right_V_d0 <= "XXXXXXXXX";
            end if;
        else 
            right_V_d0 <= "XXXXXXXXX";
        end if; 
    end process;


    right_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter0, ap_block_pp0_stage4_11001, icmp_ln19_reg_688, or_ln51_fu_615_p2)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (or_ln51_fu_615_p2 = ap_const_lv1_1) and (icmp_ln19_reg_688 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (or_ln51_fu_615_p2 = ap_const_lv1_0) and (icmp_ln19_reg_688 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)))) then 
            right_V_we0 <= ap_const_logic_1;
        else 
            right_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    tree_count_V_1_fu_636_p2 <= std_logic_vector(unsigned(ap_phi_reg_pp0_iter0_t_V_5_reg_347) + unsigned(ap_const_lv9_1));
    tree_count_V_fu_574_p2 <= std_logic_vector(unsigned(t_V_3_reg_291) + unsigned(ap_const_lv9_1));
    trunc_ln29_fu_510_p1 <= t_V_3_reg_291(1 - 1 downto 0);
    trunc_ln321_1_fu_627_p1 <= op_assign_reg_315(1 - 1 downto 0);
    trunc_ln321_fu_649_p1 <= op_assign_reg_315(1 - 1 downto 0);
    xor_ln34_fu_544_p2 <= (icmp_ln34_1_fu_540_p2 xor ap_const_lv1_1);
    xor_ln51_fu_597_p2 <= (icmp_ln51_1_fu_591_p2 xor ap_const_lv1_1);
    zext_ln215_1_fu_474_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_t_V_phi_fu_307_p4),10));
    zext_ln215_fu_454_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_t_V_3_phi_fu_295_p4),10));
    zext_ln243_fu_433_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_op_assign_phi_fu_320_p4),10));
    zext_ln29_fu_494_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln_fu_484_p4),64));
    zext_ln31_fu_500_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln1_reg_707),64));
    zext_ln321_1_fu_660_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_419),64));
    zext_ln321_fu_666_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_419),64));
    zext_ln36_fu_568_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(op_assign_reg_315),64));
    zext_ln544_3_fu_672_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_3_reg_291),64));
    zext_ln544_4_fu_448_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_t_V_phi_fu_307_p4),64));
    zext_ln544_5_fu_505_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_1_reg_712),64));
    zext_ln544_6_fu_631_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_reg_pp0_iter0_t_V_5_reg_347),64));
    zext_ln544_fu_530_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_3_reg_291),64));
end behav;
