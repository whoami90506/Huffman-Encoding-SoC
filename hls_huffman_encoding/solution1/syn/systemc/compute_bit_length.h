// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _compute_bit_length_HH_
#define _compute_bit_length_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "compute_bit_lengtkbM.h"
#include "compute_bit_lengtlbW.h"

namespace ap_rtl {

struct compute_bit_length : public sc_module {
    // Port declarations 32
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<8> > parent_V_address0;
    sc_out< sc_logic > parent_V_ce0;
    sc_in< sc_lv<9> > parent_V_q0;
    sc_out< sc_lv<8> > parent_V_address1;
    sc_out< sc_logic > parent_V_ce1;
    sc_in< sc_lv<9> > parent_V_q1;
    sc_out< sc_lv<8> > left_V_address0;
    sc_out< sc_logic > left_V_ce0;
    sc_in< sc_lv<9> > left_V_q0;
    sc_out< sc_lv<8> > left_V_address1;
    sc_out< sc_logic > left_V_ce1;
    sc_in< sc_lv<9> > left_V_q1;
    sc_out< sc_lv<8> > right_V_address0;
    sc_out< sc_logic > right_V_ce0;
    sc_in< sc_lv<9> > right_V_q0;
    sc_out< sc_lv<8> > right_V_address1;
    sc_out< sc_logic > right_V_ce1;
    sc_in< sc_lv<9> > right_V_q1;
    sc_in< sc_lv<9> > extLd_loc_dout;
    sc_in< sc_logic > extLd_loc_empty_n;
    sc_out< sc_logic > extLd_loc_read;
    sc_out< sc_lv<6> > length_histogram_V_address0;
    sc_out< sc_logic > length_histogram_V_ce0;
    sc_out< sc_logic > length_histogram_V_we0;
    sc_out< sc_lv<9> > length_histogram_V_d0;


    // Module declarations
    compute_bit_length(sc_module_name name);
    SC_HAS_PROCESS(compute_bit_length);

    ~compute_bit_length();

    sc_trace_file* mVcdFile;

    compute_bit_lengtkbM* child_depth_V_U;
    compute_bit_lengtlbW* internal_length_hist_U;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<12> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > extLd_loc_blk_n;
    sc_signal< sc_lv<6> > p_097_0_i_i_reg_293;
    sc_signal< sc_lv<9> > p_0104_0_i_i_reg_303;
    sc_signal< sc_lv<9> > p_09_0_i_i_reg_312;
    sc_signal< sc_lv<9> > left_curr_V_1_reg_321;
    sc_signal< sc_lv<9> > p_07_0_i_i_reg_332;
    sc_signal< sc_lv<9> > right_curr_V_1_reg_341;
    sc_signal< sc_lv<6> > p_0106_0_i_i_reg_352;
    sc_signal< sc_lv<32> > op2_assign_reg_361;
    sc_signal< sc_lv<9> > reg_384;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage2;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter0;
    sc_signal< bool > ap_block_state11_pp1_stage2_iter0;
    sc_signal< bool > ap_block_pp1_stage2_11001;
    sc_signal< sc_lv<1> > tmp_reg_652;
    sc_signal< sc_lv<10> > zext_ln13_fu_389_p1;
    sc_signal< sc_lv<10> > zext_ln13_reg_540;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<7> > i_5_fu_399_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<10> > add_ln23_fu_411_p2;
    sc_signal< sc_lv<10> > add_ln23_reg_555;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<10> > i_fu_416_p2;
    sc_signal< sc_lv<10> > i_reg_560;
    sc_signal< sc_lv<10> > add_ln26_fu_421_p2;
    sc_signal< sc_lv<10> > add_ln26_reg_566;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<9> > parent_next_V_reg_601;
    sc_signal< sc_lv<9> > left_curr_V_reg_607;
    sc_signal< sc_lv<9> > left_next_V_reg_612;
    sc_signal< sc_lv<9> > right_curr_V_reg_617;
    sc_signal< sc_lv<9> > right_next_V_reg_622;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<6> > child_depth_V_q0;
    sc_signal< sc_lv<6> > child_depth_curr_V_reg_637;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<6> > child_depth_V_q1;
    sc_signal< sc_lv<6> > child_depth_next_V_reg_642;
    sc_signal< sc_lv<32> > sext_ln25_1_fu_451_p1;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<1> > tmp_fu_454_p3;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage0;
    sc_signal< bool > ap_block_state9_pp1_stage0_iter0;
    sc_signal< bool > ap_block_state12_pp1_stage0_iter1;
    sc_signal< bool > ap_block_pp1_stage0_11001;
    sc_signal< sc_lv<1> > tmp_reg_652_pp1_iter1_reg;
    sc_signal< sc_lv<6> > length_V_fu_462_p2;
    sc_signal< sc_lv<6> > length_V_reg_656;
    sc_signal< sc_lv<1> > icmp_ln883_fu_468_p2;
    sc_signal< sc_lv<1> > icmp_ln883_reg_662;
    sc_signal< sc_lv<1> > icmp_ln883_1_fu_474_p2;
    sc_signal< sc_lv<1> > icmp_ln883_1_reg_666;
    sc_signal< sc_lv<64> > zext_ln544_7_fu_480_p1;
    sc_signal< sc_lv<64> > zext_ln544_7_reg_670;
    sc_signal< sc_lv<6> > internal_length_hist_2_reg_675;
    sc_signal< sc_lv<1> > icmp_ln879_fu_489_p2;
    sc_signal< sc_lv<1> > icmp_ln879_reg_680;
    sc_signal< sc_lv<32> > add_ln61_fu_495_p2;
    sc_signal< sc_lv<32> > add_ln61_reg_685;
    sc_signal< sc_lv<9> > internal_length_hist_q0;
    sc_signal< sc_lv<9> > count_V_reg_690;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage1;
    sc_signal< bool > ap_block_state10_pp1_stage1_iter0;
    sc_signal< bool > ap_block_state13_pp1_stage1_iter1;
    sc_signal< bool > ap_block_pp1_stage1_11001;
    sc_signal< sc_lv<6> > child_depth_curr_V_1_fu_523_p3;
    sc_signal< sc_lv<6> > child_depth_curr_V_1_reg_710;
    sc_signal< sc_lv<9> > left_next_V_1_reg_715;
    sc_signal< sc_lv<9> > right_next_V_1_reg_720;
    sc_signal< sc_lv<32> > i_6_fu_529_p2;
    sc_signal< sc_lv<32> > i_6_reg_725;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter1;
    sc_signal< bool > ap_block_pp1_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp1_exit_iter0_state9;
    sc_signal< bool > ap_block_pp1_stage2_subdone;
    sc_signal< bool > ap_block_pp1_stage1_subdone;
    sc_signal< sc_lv<8> > child_depth_V_address0;
    sc_signal< sc_logic > child_depth_V_ce0;
    sc_signal< sc_logic > child_depth_V_we0;
    sc_signal< sc_lv<6> > child_depth_V_d0;
    sc_signal< sc_lv<8> > child_depth_V_address1;
    sc_signal< sc_logic > child_depth_V_ce1;
    sc_signal< sc_lv<6> > internal_length_hist_address0;
    sc_signal< sc_logic > internal_length_hist_ce0;
    sc_signal< sc_logic > internal_length_hist_we0;
    sc_signal< sc_lv<9> > internal_length_hist_d0;
    sc_signal< sc_lv<7> > i_0_i_i_reg_282;
    sc_signal< sc_lv<1> > icmp_ln17_fu_393_p2;
    sc_signal< sc_lv<9> > ap_phi_mux_p_0104_0_i_i_phi_fu_306_p4;
    sc_signal< bool > ap_block_pp1_stage0;
    sc_signal< sc_lv<9> > ap_phi_mux_p_09_0_i_i_phi_fu_315_p4;
    sc_signal< sc_lv<9> > ap_phi_mux_p_07_0_i_i_phi_fu_335_p4;
    sc_signal< sc_lv<6> > ap_phi_mux_p_0106_0_i_i_phi_fu_355_p4;
    sc_signal< sc_lv<32> > ap_phi_mux_op2_assign_phi_fu_364_p4;
    sc_signal< sc_lv<2> > ap_phi_reg_pp1_iter0_phi_ln700_i_i_reg_371;
    sc_signal< sc_lv<64> > zext_ln19_fu_405_p1;
    sc_signal< sc_lv<64> > sext_ln23_fu_426_p1;
    sc_signal< sc_lv<64> > sext_ln25_fu_430_p1;
    sc_signal< sc_lv<64> > sext_ln26_fu_436_p1;
    sc_signal< sc_lv<64> > zext_ln544_fu_442_p1;
    sc_signal< sc_lv<64> > zext_ln544_5_fu_447_p1;
    sc_signal< sc_lv<64> > zext_ln40_fu_501_p1;
    sc_signal< bool > ap_block_pp1_stage1;
    sc_signal< sc_lv<64> > sext_ln61_fu_506_p1;
    sc_signal< bool > ap_block_pp1_stage2;
    sc_signal< sc_lv<64> > zext_ln544_8_fu_535_p1;
    sc_signal< sc_lv<9> > count_V_1_fu_516_p2;
    sc_signal< sc_lv<32> > zext_ln879_fu_485_p1;
    sc_signal< sc_lv<9> > zext_ln544_6_fu_512_p1;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_lv<12> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp1;
    sc_signal< sc_logic > ap_enable_pp1;
    sc_signal< bool > ap_condition_530;
    sc_signal< bool > ap_condition_534;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<12> ap_ST_fsm_state1;
    static const sc_lv<12> ap_ST_fsm_state2;
    static const sc_lv<12> ap_ST_fsm_state3;
    static const sc_lv<12> ap_ST_fsm_state4;
    static const sc_lv<12> ap_ST_fsm_state5;
    static const sc_lv<12> ap_ST_fsm_state6;
    static const sc_lv<12> ap_ST_fsm_state7;
    static const sc_lv<12> ap_ST_fsm_state8;
    static const sc_lv<12> ap_ST_fsm_pp1_stage0;
    static const sc_lv<12> ap_ST_fsm_pp1_stage1;
    static const sc_lv<12> ap_ST_fsm_pp1_stage2;
    static const sc_lv<12> ap_ST_fsm_state14;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_A;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<7> ap_const_lv7_40;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<10> ap_const_lv10_3FE;
    static const sc_lv<10> ap_const_lv10_3FD;
    static const sc_lv<10> ap_const_lv10_3FC;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<9> ap_const_lv9_1FF;
    static const sc_lv<32> ap_const_lv32_FFFFFFFE;
    static const sc_lv<32> ap_const_lv32_FFFFFFFF;
    static const sc_lv<32> ap_const_lv32_B;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln23_fu_411_p2();
    void thread_add_ln26_fu_421_p2();
    void thread_add_ln61_fu_495_p2();
    void thread_ap_CS_fsm_pp1_stage0();
    void thread_ap_CS_fsm_pp1_stage1();
    void thread_ap_CS_fsm_pp1_stage2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_block_pp1_stage0();
    void thread_ap_block_pp1_stage0_11001();
    void thread_ap_block_pp1_stage0_subdone();
    void thread_ap_block_pp1_stage1();
    void thread_ap_block_pp1_stage1_11001();
    void thread_ap_block_pp1_stage1_subdone();
    void thread_ap_block_pp1_stage2();
    void thread_ap_block_pp1_stage2_11001();
    void thread_ap_block_pp1_stage2_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state10_pp1_stage1_iter0();
    void thread_ap_block_state11_pp1_stage2_iter0();
    void thread_ap_block_state12_pp1_stage0_iter1();
    void thread_ap_block_state13_pp1_stage1_iter1();
    void thread_ap_block_state9_pp1_stage0_iter0();
    void thread_ap_condition_530();
    void thread_ap_condition_534();
    void thread_ap_condition_pp1_exit_iter0_state9();
    void thread_ap_done();
    void thread_ap_enable_pp1();
    void thread_ap_idle();
    void thread_ap_idle_pp1();
    void thread_ap_phi_mux_op2_assign_phi_fu_364_p4();
    void thread_ap_phi_mux_p_0104_0_i_i_phi_fu_306_p4();
    void thread_ap_phi_mux_p_0106_0_i_i_phi_fu_355_p4();
    void thread_ap_phi_mux_p_07_0_i_i_phi_fu_335_p4();
    void thread_ap_phi_mux_p_09_0_i_i_phi_fu_315_p4();
    void thread_ap_ready();
    void thread_child_depth_V_address0();
    void thread_child_depth_V_address1();
    void thread_child_depth_V_ce0();
    void thread_child_depth_V_ce1();
    void thread_child_depth_V_d0();
    void thread_child_depth_V_we0();
    void thread_child_depth_curr_V_1_fu_523_p3();
    void thread_count_V_1_fu_516_p2();
    void thread_extLd_loc_blk_n();
    void thread_extLd_loc_read();
    void thread_i_5_fu_399_p2();
    void thread_i_6_fu_529_p2();
    void thread_i_fu_416_p2();
    void thread_icmp_ln17_fu_393_p2();
    void thread_icmp_ln879_fu_489_p2();
    void thread_icmp_ln883_1_fu_474_p2();
    void thread_icmp_ln883_fu_468_p2();
    void thread_internal_length_hist_address0();
    void thread_internal_length_hist_ce0();
    void thread_internal_length_hist_d0();
    void thread_internal_length_hist_we0();
    void thread_left_V_address0();
    void thread_left_V_address1();
    void thread_left_V_ce0();
    void thread_left_V_ce1();
    void thread_length_V_fu_462_p2();
    void thread_length_histogram_V_address0();
    void thread_length_histogram_V_ce0();
    void thread_length_histogram_V_d0();
    void thread_length_histogram_V_we0();
    void thread_parent_V_address0();
    void thread_parent_V_address1();
    void thread_parent_V_ce0();
    void thread_parent_V_ce1();
    void thread_right_V_address0();
    void thread_right_V_address1();
    void thread_right_V_ce0();
    void thread_right_V_ce1();
    void thread_sext_ln23_fu_426_p1();
    void thread_sext_ln25_1_fu_451_p1();
    void thread_sext_ln25_fu_430_p1();
    void thread_sext_ln26_fu_436_p1();
    void thread_sext_ln61_fu_506_p1();
    void thread_tmp_fu_454_p3();
    void thread_zext_ln13_fu_389_p1();
    void thread_zext_ln19_fu_405_p1();
    void thread_zext_ln40_fu_501_p1();
    void thread_zext_ln544_5_fu_447_p1();
    void thread_zext_ln544_6_fu_512_p1();
    void thread_zext_ln544_7_fu_480_p1();
    void thread_zext_ln544_8_fu_535_p1();
    void thread_zext_ln544_fu_442_p1();
    void thread_zext_ln879_fu_485_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
