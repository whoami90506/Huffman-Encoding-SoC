// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "compute_bit_length.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic compute_bit_length::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic compute_bit_length::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<12> compute_bit_length::ap_ST_fsm_state1 = "1";
const sc_lv<12> compute_bit_length::ap_ST_fsm_state2 = "10";
const sc_lv<12> compute_bit_length::ap_ST_fsm_state3 = "100";
const sc_lv<12> compute_bit_length::ap_ST_fsm_state4 = "1000";
const sc_lv<12> compute_bit_length::ap_ST_fsm_state5 = "10000";
const sc_lv<12> compute_bit_length::ap_ST_fsm_state6 = "100000";
const sc_lv<12> compute_bit_length::ap_ST_fsm_state7 = "1000000";
const sc_lv<12> compute_bit_length::ap_ST_fsm_state8 = "10000000";
const sc_lv<12> compute_bit_length::ap_ST_fsm_pp1_stage0 = "100000000";
const sc_lv<12> compute_bit_length::ap_ST_fsm_pp1_stage1 = "1000000000";
const sc_lv<12> compute_bit_length::ap_ST_fsm_pp1_stage2 = "10000000000";
const sc_lv<12> compute_bit_length::ap_ST_fsm_state14 = "100000000000";
const sc_lv<32> compute_bit_length::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool compute_bit_length::ap_const_boolean_1 = true;
const sc_lv<32> compute_bit_length::ap_const_lv32_4 = "100";
const sc_lv<32> compute_bit_length::ap_const_lv32_A = "1010";
const bool compute_bit_length::ap_const_boolean_0 = false;
const sc_lv<1> compute_bit_length::ap_const_lv1_0 = "0";
const sc_lv<32> compute_bit_length::ap_const_lv32_1 = "1";
const sc_lv<32> compute_bit_length::ap_const_lv32_2 = "10";
const sc_lv<32> compute_bit_length::ap_const_lv32_3 = "11";
const sc_lv<32> compute_bit_length::ap_const_lv32_5 = "101";
const sc_lv<32> compute_bit_length::ap_const_lv32_6 = "110";
const sc_lv<32> compute_bit_length::ap_const_lv32_7 = "111";
const sc_lv<32> compute_bit_length::ap_const_lv32_8 = "1000";
const sc_lv<32> compute_bit_length::ap_const_lv32_9 = "1001";
const sc_lv<1> compute_bit_length::ap_const_lv1_1 = "1";
const sc_lv<7> compute_bit_length::ap_const_lv7_0 = "0000000";
const sc_lv<2> compute_bit_length::ap_const_lv2_1 = "1";
const sc_lv<2> compute_bit_length::ap_const_lv2_2 = "10";
const sc_lv<9> compute_bit_length::ap_const_lv9_0 = "000000000";
const sc_lv<6> compute_bit_length::ap_const_lv6_1 = "1";
const sc_lv<7> compute_bit_length::ap_const_lv7_40 = "1000000";
const sc_lv<7> compute_bit_length::ap_const_lv7_1 = "1";
const sc_lv<10> compute_bit_length::ap_const_lv10_3FE = "1111111110";
const sc_lv<10> compute_bit_length::ap_const_lv10_3FD = "1111111101";
const sc_lv<10> compute_bit_length::ap_const_lv10_3FC = "1111111100";
const sc_lv<32> compute_bit_length::ap_const_lv32_1F = "11111";
const sc_lv<9> compute_bit_length::ap_const_lv9_1FF = "111111111";
const sc_lv<32> compute_bit_length::ap_const_lv32_FFFFFFFE = "11111111111111111111111111111110";
const sc_lv<32> compute_bit_length::ap_const_lv32_FFFFFFFF = "11111111111111111111111111111111";
const sc_lv<32> compute_bit_length::ap_const_lv32_B = "1011";

compute_bit_length::compute_bit_length(sc_module_name name) : sc_module(name), mVcdFile(0) {
    child_depth_V_U = new compute_bit_lengtkbM("child_depth_V_U");
    child_depth_V_U->clk(ap_clk);
    child_depth_V_U->reset(ap_rst);
    child_depth_V_U->address0(child_depth_V_address0);
    child_depth_V_U->ce0(child_depth_V_ce0);
    child_depth_V_U->we0(child_depth_V_we0);
    child_depth_V_U->d0(child_depth_V_d0);
    child_depth_V_U->q0(child_depth_V_q0);
    child_depth_V_U->address1(child_depth_V_address1);
    child_depth_V_U->ce1(child_depth_V_ce1);
    child_depth_V_U->q1(child_depth_V_q1);
    internal_length_hist_U = new compute_bit_lengtlbW("internal_length_hist_U");
    internal_length_hist_U->clk(ap_clk);
    internal_length_hist_U->reset(ap_rst);
    internal_length_hist_U->address0(internal_length_hist_address0);
    internal_length_hist_U->ce0(internal_length_hist_ce0);
    internal_length_hist_U->we0(internal_length_hist_we0);
    internal_length_hist_U->d0(internal_length_hist_d0);
    internal_length_hist_U->q0(internal_length_hist_q0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln23_fu_419_p2);
    sensitive << ( zext_ln13_reg_548 );

    SC_METHOD(thread_add_ln26_fu_429_p2);
    sensitive << ( zext_ln13_reg_548 );

    SC_METHOD(thread_add_ln61_fu_503_p2);
    sensitive << ( ap_phi_mux_op2_assign_phi_fu_372_p4 );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp1_stage0);

    SC_METHOD(thread_ap_block_pp1_stage0_11001);

    SC_METHOD(thread_ap_block_pp1_stage0_subdone);

    SC_METHOD(thread_ap_block_pp1_stage1);

    SC_METHOD(thread_ap_block_pp1_stage1_11001);

    SC_METHOD(thread_ap_block_pp1_stage1_subdone);

    SC_METHOD(thread_ap_block_pp1_stage2);

    SC_METHOD(thread_ap_block_pp1_stage2_11001);

    SC_METHOD(thread_ap_block_pp1_stage2_subdone);

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( extLd_loc_empty_n );

    SC_METHOD(thread_ap_block_state10_pp1_stage1_iter0);

    SC_METHOD(thread_ap_block_state11_pp1_stage2_iter0);

    SC_METHOD(thread_ap_block_state12_pp1_stage0_iter1);

    SC_METHOD(thread_ap_block_state13_pp1_stage1_iter1);

    SC_METHOD(thread_ap_block_state9_pp1_stage0_iter0);

    SC_METHOD(thread_ap_condition_530);
    sensitive << ( tmp_reg_660 );
    sensitive << ( icmp_ln883_reg_670 );
    sensitive << ( icmp_ln883_1_reg_674 );
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( ap_block_pp1_stage1_11001 );

    SC_METHOD(thread_ap_condition_534);
    sensitive << ( tmp_fu_462_p3 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( icmp_ln883_fu_476_p2 );
    sensitive << ( icmp_ln883_1_fu_482_p2 );

    SC_METHOD(thread_ap_condition_pp1_exit_iter0_state9);
    sensitive << ( tmp_fu_462_p3 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_ap_enable_pp1);
    sensitive << ( ap_idle_pp1 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp1);
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );

    SC_METHOD(thread_ap_phi_mux_op2_assign_phi_fu_372_p4);
    sensitive << ( op2_assign_reg_369 );
    sensitive << ( tmp_reg_660 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( i_6_reg_733 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );

    SC_METHOD(thread_ap_phi_mux_p_0104_0_i_i_phi_fu_314_p4);
    sensitive << ( p_0104_0_i_i_reg_311 );
    sensitive << ( reg_392 );
    sensitive << ( tmp_reg_660 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );

    SC_METHOD(thread_ap_phi_mux_p_0106_0_i_i_phi_fu_363_p4);
    sensitive << ( p_0106_0_i_i_reg_360 );
    sensitive << ( tmp_reg_660 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( child_depth_curr_V_1_reg_718 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );

    SC_METHOD(thread_ap_phi_mux_p_07_0_i_i_phi_fu_343_p4);
    sensitive << ( p_07_0_i_i_reg_340 );
    sensitive << ( right_curr_V_1_reg_349 );
    sensitive << ( tmp_reg_660 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );

    SC_METHOD(thread_ap_phi_mux_p_09_0_i_i_phi_fu_323_p4);
    sensitive << ( p_09_0_i_i_reg_320 );
    sensitive << ( left_curr_V_1_reg_329 );
    sensitive << ( tmp_reg_660 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_child_depth_V_address0);
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( sext_ln23_fu_434_p1 );
    sensitive << ( zext_ln544_fu_450_p1 );
    sensitive << ( zext_ln40_fu_509_p1 );
    sensitive << ( ap_block_pp1_stage1 );

    SC_METHOD(thread_child_depth_V_address1);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( zext_ln544_5_fu_455_p1 );
    sensitive << ( zext_ln544_8_fu_543_p1 );

    SC_METHOD(thread_child_depth_V_ce0);
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( ap_block_pp1_stage1_11001 );

    SC_METHOD(thread_child_depth_V_ce1);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter1 );

    SC_METHOD(thread_child_depth_V_d0);
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( length_V_reg_664 );
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( ap_block_pp1_stage1 );

    SC_METHOD(thread_child_depth_V_we0);
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( tmp_reg_660 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( ap_block_pp1_stage1_11001 );

    SC_METHOD(thread_child_depth_curr_V_1_fu_531_p3);
    sensitive << ( p_097_0_i_i_reg_301 );
    sensitive << ( length_V_reg_664 );
    sensitive << ( icmp_ln879_reg_688 );

    SC_METHOD(thread_count_V_1_fu_524_p2);
    sensitive << ( count_V_reg_698 );
    sensitive << ( zext_ln544_6_fu_520_p1 );

    SC_METHOD(thread_extLd_loc_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( extLd_loc_empty_n );

    SC_METHOD(thread_extLd_loc_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( extLd_loc_empty_n );

    SC_METHOD(thread_i_5_fu_407_p2);
    sensitive << ( i_0_i_i_reg_290 );

    SC_METHOD(thread_i_6_fu_537_p2);
    sensitive << ( op2_assign_reg_369 );

    SC_METHOD(thread_i_fu_424_p2);
    sensitive << ( zext_ln13_reg_548 );

    SC_METHOD(thread_icmp_ln17_fu_401_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_i_i_reg_290 );

    SC_METHOD(thread_icmp_ln879_fu_497_p2);
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( tmp_fu_462_p3 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_phi_mux_op2_assign_phi_fu_372_p4 );
    sensitive << ( zext_ln879_fu_493_p1 );

    SC_METHOD(thread_icmp_ln883_1_fu_482_p2);
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( tmp_fu_462_p3 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_phi_mux_p_07_0_i_i_phi_fu_343_p4 );

    SC_METHOD(thread_icmp_ln883_fu_476_p2);
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( tmp_fu_462_p3 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_phi_mux_p_09_0_i_i_phi_fu_323_p4 );

    SC_METHOD(thread_internal_length_hist_address0);
    sensitive << ( ap_CS_fsm_pp1_stage2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( zext_ln544_7_fu_488_p1 );
    sensitive << ( internal_length_hist_2_reg_683 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( zext_ln19_fu_413_p1 );
    sensitive << ( ap_block_pp1_stage2 );

    SC_METHOD(thread_internal_length_hist_ce0);
    sensitive << ( ap_CS_fsm_pp1_stage2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_block_pp1_stage2_11001 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );

    SC_METHOD(thread_internal_length_hist_d0);
    sensitive << ( ap_CS_fsm_pp1_stage2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_pp1_stage2 );
    sensitive << ( count_V_1_fu_524_p2 );

    SC_METHOD(thread_internal_length_hist_we0);
    sensitive << ( ap_CS_fsm_pp1_stage2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_block_pp1_stage2_11001 );
    sensitive << ( tmp_reg_660 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln883_reg_670 );
    sensitive << ( icmp_ln883_1_reg_674 );
    sensitive << ( icmp_ln17_fu_401_p2 );

    SC_METHOD(thread_left_V_address0);
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( sext_ln25_fu_438_p1 );
    sensitive << ( ap_block_pp1_stage1 );
    sensitive << ( sext_ln61_fu_514_p1 );

    SC_METHOD(thread_left_V_address1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( sext_ln26_fu_444_p1 );

    SC_METHOD(thread_left_V_ce0);
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( ap_block_pp1_stage1_11001 );

    SC_METHOD(thread_left_V_ce1);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_length_V_fu_470_p2);
    sensitive << ( ap_phi_mux_p_0106_0_i_i_phi_fu_363_p4 );

    SC_METHOD(thread_length_histogram_V_address0);
    sensitive << ( ap_CS_fsm_pp1_stage2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln544_7_reg_678 );
    sensitive << ( zext_ln19_fu_413_p1 );
    sensitive << ( ap_block_pp1_stage2 );

    SC_METHOD(thread_length_histogram_V_ce0);
    sensitive << ( ap_CS_fsm_pp1_stage2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_block_pp1_stage2_11001 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_length_histogram_V_d0);
    sensitive << ( ap_CS_fsm_pp1_stage2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_pp1_stage2 );
    sensitive << ( count_V_1_fu_524_p2 );

    SC_METHOD(thread_length_histogram_V_we0);
    sensitive << ( ap_CS_fsm_pp1_stage2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_block_pp1_stage2_11001 );
    sensitive << ( tmp_reg_660 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln883_reg_670 );
    sensitive << ( icmp_ln883_1_reg_674 );
    sensitive << ( icmp_ln17_fu_401_p2 );

    SC_METHOD(thread_parent_V_address0);
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( sext_ln25_fu_438_p1 );
    sensitive << ( ap_block_pp1_stage1 );
    sensitive << ( sext_ln61_fu_514_p1 );

    SC_METHOD(thread_parent_V_address1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( sext_ln26_fu_444_p1 );

    SC_METHOD(thread_parent_V_ce0);
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( ap_block_pp1_stage1_11001 );

    SC_METHOD(thread_parent_V_ce1);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_right_V_address0);
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( sext_ln25_fu_438_p1 );
    sensitive << ( ap_block_pp1_stage1 );
    sensitive << ( sext_ln61_fu_514_p1 );

    SC_METHOD(thread_right_V_address1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( sext_ln26_fu_444_p1 );

    SC_METHOD(thread_right_V_ce0);
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( ap_block_pp1_stage1_11001 );

    SC_METHOD(thread_right_V_ce1);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sext_ln23_fu_434_p1);
    sensitive << ( add_ln23_reg_563 );

    SC_METHOD(thread_sext_ln25_1_fu_459_p1);
    sensitive << ( i_reg_568 );

    SC_METHOD(thread_sext_ln25_fu_438_p1);
    sensitive << ( i_reg_568 );

    SC_METHOD(thread_sext_ln26_fu_444_p1);
    sensitive << ( add_ln26_reg_574 );

    SC_METHOD(thread_sext_ln61_fu_514_p1);
    sensitive << ( add_ln61_reg_693 );

    SC_METHOD(thread_tmp_fu_462_p3);
    sensitive << ( ap_phi_mux_op2_assign_phi_fu_372_p4 );

    SC_METHOD(thread_zext_ln13_fu_397_p1);
    sensitive << ( extLd_loc_dout );

    SC_METHOD(thread_zext_ln19_fu_413_p1);
    sensitive << ( i_0_i_i_reg_290 );

    SC_METHOD(thread_zext_ln40_fu_509_p1);
    sensitive << ( op2_assign_reg_369 );

    SC_METHOD(thread_zext_ln544_5_fu_455_p1);
    sensitive << ( parent_next_V_reg_609 );

    SC_METHOD(thread_zext_ln544_6_fu_520_p1);
    sensitive << ( ap_phi_reg_pp1_iter0_phi_ln700_i_i_reg_379 );

    SC_METHOD(thread_zext_ln544_7_fu_488_p1);
    sensitive << ( length_V_fu_470_p2 );

    SC_METHOD(thread_zext_ln544_8_fu_543_p1);
    sensitive << ( reg_392 );

    SC_METHOD(thread_zext_ln544_fu_450_p1);
    sensitive << ( reg_392 );

    SC_METHOD(thread_zext_ln879_fu_493_p1);
    sensitive << ( ap_phi_mux_p_0104_0_i_i_phi_fu_314_p4 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( extLd_loc_empty_n );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_462_p3 );
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0_subdone );
    sensitive << ( ap_block_pp1_stage2_subdone );
    sensitive << ( ap_block_pp1_stage1_subdone );
    sensitive << ( icmp_ln17_fu_401_p2 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "000000000001";
    ap_enable_reg_pp1_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "compute_bit_length_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, parent_V_address0, "(port)parent_V_address0");
    sc_trace(mVcdFile, parent_V_ce0, "(port)parent_V_ce0");
    sc_trace(mVcdFile, parent_V_q0, "(port)parent_V_q0");
    sc_trace(mVcdFile, parent_V_address1, "(port)parent_V_address1");
    sc_trace(mVcdFile, parent_V_ce1, "(port)parent_V_ce1");
    sc_trace(mVcdFile, parent_V_q1, "(port)parent_V_q1");
    sc_trace(mVcdFile, left_V_address0, "(port)left_V_address0");
    sc_trace(mVcdFile, left_V_ce0, "(port)left_V_ce0");
    sc_trace(mVcdFile, left_V_q0, "(port)left_V_q0");
    sc_trace(mVcdFile, left_V_address1, "(port)left_V_address1");
    sc_trace(mVcdFile, left_V_ce1, "(port)left_V_ce1");
    sc_trace(mVcdFile, left_V_q1, "(port)left_V_q1");
    sc_trace(mVcdFile, right_V_address0, "(port)right_V_address0");
    sc_trace(mVcdFile, right_V_ce0, "(port)right_V_ce0");
    sc_trace(mVcdFile, right_V_q0, "(port)right_V_q0");
    sc_trace(mVcdFile, right_V_address1, "(port)right_V_address1");
    sc_trace(mVcdFile, right_V_ce1, "(port)right_V_ce1");
    sc_trace(mVcdFile, right_V_q1, "(port)right_V_q1");
    sc_trace(mVcdFile, extLd_loc_dout, "(port)extLd_loc_dout");
    sc_trace(mVcdFile, extLd_loc_empty_n, "(port)extLd_loc_empty_n");
    sc_trace(mVcdFile, extLd_loc_read, "(port)extLd_loc_read");
    sc_trace(mVcdFile, length_histogram_V_address0, "(port)length_histogram_V_address0");
    sc_trace(mVcdFile, length_histogram_V_ce0, "(port)length_histogram_V_ce0");
    sc_trace(mVcdFile, length_histogram_V_we0, "(port)length_histogram_V_we0");
    sc_trace(mVcdFile, length_histogram_V_d0, "(port)length_histogram_V_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, extLd_loc_blk_n, "extLd_loc_blk_n");
    sc_trace(mVcdFile, p_097_0_i_i_reg_301, "p_097_0_i_i_reg_301");
    sc_trace(mVcdFile, p_0104_0_i_i_reg_311, "p_0104_0_i_i_reg_311");
    sc_trace(mVcdFile, p_09_0_i_i_reg_320, "p_09_0_i_i_reg_320");
    sc_trace(mVcdFile, left_curr_V_1_reg_329, "left_curr_V_1_reg_329");
    sc_trace(mVcdFile, p_07_0_i_i_reg_340, "p_07_0_i_i_reg_340");
    sc_trace(mVcdFile, right_curr_V_1_reg_349, "right_curr_V_1_reg_349");
    sc_trace(mVcdFile, p_0106_0_i_i_reg_360, "p_0106_0_i_i_reg_360");
    sc_trace(mVcdFile, op2_assign_reg_369, "op2_assign_reg_369");
    sc_trace(mVcdFile, reg_392, "reg_392");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage2, "ap_CS_fsm_pp1_stage2");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter0, "ap_enable_reg_pp1_iter0");
    sc_trace(mVcdFile, ap_block_state11_pp1_stage2_iter0, "ap_block_state11_pp1_stage2_iter0");
    sc_trace(mVcdFile, ap_block_pp1_stage2_11001, "ap_block_pp1_stage2_11001");
    sc_trace(mVcdFile, tmp_reg_660, "tmp_reg_660");
    sc_trace(mVcdFile, zext_ln13_fu_397_p1, "zext_ln13_fu_397_p1");
    sc_trace(mVcdFile, zext_ln13_reg_548, "zext_ln13_reg_548");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, i_5_fu_407_p2, "i_5_fu_407_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, add_ln23_fu_419_p2, "add_ln23_fu_419_p2");
    sc_trace(mVcdFile, add_ln23_reg_563, "add_ln23_reg_563");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, i_fu_424_p2, "i_fu_424_p2");
    sc_trace(mVcdFile, i_reg_568, "i_reg_568");
    sc_trace(mVcdFile, add_ln26_fu_429_p2, "add_ln26_fu_429_p2");
    sc_trace(mVcdFile, add_ln26_reg_574, "add_ln26_reg_574");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, parent_next_V_reg_609, "parent_next_V_reg_609");
    sc_trace(mVcdFile, left_curr_V_reg_615, "left_curr_V_reg_615");
    sc_trace(mVcdFile, left_next_V_reg_620, "left_next_V_reg_620");
    sc_trace(mVcdFile, right_curr_V_reg_625, "right_curr_V_reg_625");
    sc_trace(mVcdFile, right_next_V_reg_630, "right_next_V_reg_630");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, child_depth_V_q0, "child_depth_V_q0");
    sc_trace(mVcdFile, child_depth_curr_V_reg_645, "child_depth_curr_V_reg_645");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, child_depth_V_q1, "child_depth_V_q1");
    sc_trace(mVcdFile, child_depth_next_V_reg_650, "child_depth_next_V_reg_650");
    sc_trace(mVcdFile, sext_ln25_1_fu_459_p1, "sext_ln25_1_fu_459_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, tmp_fu_462_p3, "tmp_fu_462_p3");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage0, "ap_CS_fsm_pp1_stage0");
    sc_trace(mVcdFile, ap_block_state9_pp1_stage0_iter0, "ap_block_state9_pp1_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state12_pp1_stage0_iter1, "ap_block_state12_pp1_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage0_11001, "ap_block_pp1_stage0_11001");
    sc_trace(mVcdFile, tmp_reg_660_pp1_iter1_reg, "tmp_reg_660_pp1_iter1_reg");
    sc_trace(mVcdFile, length_V_fu_470_p2, "length_V_fu_470_p2");
    sc_trace(mVcdFile, length_V_reg_664, "length_V_reg_664");
    sc_trace(mVcdFile, icmp_ln883_fu_476_p2, "icmp_ln883_fu_476_p2");
    sc_trace(mVcdFile, icmp_ln883_reg_670, "icmp_ln883_reg_670");
    sc_trace(mVcdFile, icmp_ln883_1_fu_482_p2, "icmp_ln883_1_fu_482_p2");
    sc_trace(mVcdFile, icmp_ln883_1_reg_674, "icmp_ln883_1_reg_674");
    sc_trace(mVcdFile, zext_ln544_7_fu_488_p1, "zext_ln544_7_fu_488_p1");
    sc_trace(mVcdFile, zext_ln544_7_reg_678, "zext_ln544_7_reg_678");
    sc_trace(mVcdFile, internal_length_hist_2_reg_683, "internal_length_hist_2_reg_683");
    sc_trace(mVcdFile, icmp_ln879_fu_497_p2, "icmp_ln879_fu_497_p2");
    sc_trace(mVcdFile, icmp_ln879_reg_688, "icmp_ln879_reg_688");
    sc_trace(mVcdFile, add_ln61_fu_503_p2, "add_ln61_fu_503_p2");
    sc_trace(mVcdFile, add_ln61_reg_693, "add_ln61_reg_693");
    sc_trace(mVcdFile, internal_length_hist_q0, "internal_length_hist_q0");
    sc_trace(mVcdFile, count_V_reg_698, "count_V_reg_698");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage1, "ap_CS_fsm_pp1_stage1");
    sc_trace(mVcdFile, ap_block_state10_pp1_stage1_iter0, "ap_block_state10_pp1_stage1_iter0");
    sc_trace(mVcdFile, ap_block_state13_pp1_stage1_iter1, "ap_block_state13_pp1_stage1_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage1_11001, "ap_block_pp1_stage1_11001");
    sc_trace(mVcdFile, child_depth_curr_V_1_fu_531_p3, "child_depth_curr_V_1_fu_531_p3");
    sc_trace(mVcdFile, child_depth_curr_V_1_reg_718, "child_depth_curr_V_1_reg_718");
    sc_trace(mVcdFile, left_next_V_1_reg_723, "left_next_V_1_reg_723");
    sc_trace(mVcdFile, right_next_V_1_reg_728, "right_next_V_1_reg_728");
    sc_trace(mVcdFile, i_6_fu_537_p2, "i_6_fu_537_p2");
    sc_trace(mVcdFile, i_6_reg_733, "i_6_reg_733");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter1, "ap_enable_reg_pp1_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage0_subdone, "ap_block_pp1_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp1_exit_iter0_state9, "ap_condition_pp1_exit_iter0_state9");
    sc_trace(mVcdFile, ap_block_pp1_stage2_subdone, "ap_block_pp1_stage2_subdone");
    sc_trace(mVcdFile, ap_block_pp1_stage1_subdone, "ap_block_pp1_stage1_subdone");
    sc_trace(mVcdFile, child_depth_V_address0, "child_depth_V_address0");
    sc_trace(mVcdFile, child_depth_V_ce0, "child_depth_V_ce0");
    sc_trace(mVcdFile, child_depth_V_we0, "child_depth_V_we0");
    sc_trace(mVcdFile, child_depth_V_d0, "child_depth_V_d0");
    sc_trace(mVcdFile, child_depth_V_address1, "child_depth_V_address1");
    sc_trace(mVcdFile, child_depth_V_ce1, "child_depth_V_ce1");
    sc_trace(mVcdFile, internal_length_hist_address0, "internal_length_hist_address0");
    sc_trace(mVcdFile, internal_length_hist_ce0, "internal_length_hist_ce0");
    sc_trace(mVcdFile, internal_length_hist_we0, "internal_length_hist_we0");
    sc_trace(mVcdFile, internal_length_hist_d0, "internal_length_hist_d0");
    sc_trace(mVcdFile, i_0_i_i_reg_290, "i_0_i_i_reg_290");
    sc_trace(mVcdFile, icmp_ln17_fu_401_p2, "icmp_ln17_fu_401_p2");
    sc_trace(mVcdFile, ap_phi_mux_p_0104_0_i_i_phi_fu_314_p4, "ap_phi_mux_p_0104_0_i_i_phi_fu_314_p4");
    sc_trace(mVcdFile, ap_block_pp1_stage0, "ap_block_pp1_stage0");
    sc_trace(mVcdFile, ap_phi_mux_p_09_0_i_i_phi_fu_323_p4, "ap_phi_mux_p_09_0_i_i_phi_fu_323_p4");
    sc_trace(mVcdFile, ap_phi_mux_p_07_0_i_i_phi_fu_343_p4, "ap_phi_mux_p_07_0_i_i_phi_fu_343_p4");
    sc_trace(mVcdFile, ap_phi_mux_p_0106_0_i_i_phi_fu_363_p4, "ap_phi_mux_p_0106_0_i_i_phi_fu_363_p4");
    sc_trace(mVcdFile, ap_phi_mux_op2_assign_phi_fu_372_p4, "ap_phi_mux_op2_assign_phi_fu_372_p4");
    sc_trace(mVcdFile, ap_phi_reg_pp1_iter0_phi_ln700_i_i_reg_379, "ap_phi_reg_pp1_iter0_phi_ln700_i_i_reg_379");
    sc_trace(mVcdFile, zext_ln19_fu_413_p1, "zext_ln19_fu_413_p1");
    sc_trace(mVcdFile, sext_ln23_fu_434_p1, "sext_ln23_fu_434_p1");
    sc_trace(mVcdFile, sext_ln25_fu_438_p1, "sext_ln25_fu_438_p1");
    sc_trace(mVcdFile, sext_ln26_fu_444_p1, "sext_ln26_fu_444_p1");
    sc_trace(mVcdFile, zext_ln544_fu_450_p1, "zext_ln544_fu_450_p1");
    sc_trace(mVcdFile, zext_ln544_5_fu_455_p1, "zext_ln544_5_fu_455_p1");
    sc_trace(mVcdFile, zext_ln40_fu_509_p1, "zext_ln40_fu_509_p1");
    sc_trace(mVcdFile, ap_block_pp1_stage1, "ap_block_pp1_stage1");
    sc_trace(mVcdFile, sext_ln61_fu_514_p1, "sext_ln61_fu_514_p1");
    sc_trace(mVcdFile, ap_block_pp1_stage2, "ap_block_pp1_stage2");
    sc_trace(mVcdFile, zext_ln544_8_fu_543_p1, "zext_ln544_8_fu_543_p1");
    sc_trace(mVcdFile, count_V_1_fu_524_p2, "count_V_1_fu_524_p2");
    sc_trace(mVcdFile, zext_ln879_fu_493_p1, "zext_ln879_fu_493_p1");
    sc_trace(mVcdFile, zext_ln544_6_fu_520_p1, "zext_ln544_6_fu_520_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp1, "ap_idle_pp1");
    sc_trace(mVcdFile, ap_enable_pp1, "ap_enable_pp1");
    sc_trace(mVcdFile, ap_condition_530, "ap_condition_530");
    sc_trace(mVcdFile, ap_condition_534, "ap_condition_534");
#endif

    }
}

compute_bit_length::~compute_bit_length() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete child_depth_V_U;
    delete internal_length_hist_U;
}

void compute_bit_length::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state9.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter1 = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage2.read()) && 
              esl_seteq<1,1,1>(ap_block_pp1_stage2_subdone.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
              esl_seteq<1,1,1>(ap_block_pp1_stage1_subdone.read(), ap_const_boolean_0)))) {
            ap_enable_reg_pp1_iter1 = ap_enable_reg_pp1_iter0.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
            ap_enable_reg_pp1_iter1 = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read())) {
        if (esl_seteq<1,1,1>(ap_condition_534.read(), ap_const_boolean_1)) {
            ap_phi_reg_pp1_iter0_phi_ln700_i_i_reg_379 = ap_const_lv2_2;
        } else if (esl_seteq<1,1,1>(ap_condition_530.read(), ap_const_boolean_1)) {
            ap_phi_reg_pp1_iter0_phi_ln700_i_i_reg_379 = ap_const_lv2_1;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, extLd_loc_empty_n.read())))) {
        i_0_i_i_reg_290 = ap_const_lv7_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln17_fu_401_p2.read()))) {
        i_0_i_i_reg_290 = i_5_fu_407_p2.read();
    }
    if ((esl_seteq<1,1,1>(tmp_reg_660.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()))) {
        left_curr_V_1_reg_329 = left_next_V_1_reg_723.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        left_curr_V_1_reg_329 = left_next_V_reg_620.read();
    }
    if ((esl_seteq<1,1,1>(tmp_reg_660.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()))) {
        op2_assign_reg_369 = i_6_reg_733.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        op2_assign_reg_369 = sext_ln25_1_fu_459_p1.read();
    }
    if ((esl_seteq<1,1,1>(tmp_reg_660.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()))) {
        p_0104_0_i_i_reg_311 = reg_392.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        p_0104_0_i_i_reg_311 = parent_next_V_reg_609.read();
    }
    if ((esl_seteq<1,1,1>(tmp_reg_660.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()))) {
        p_0106_0_i_i_reg_360 = child_depth_curr_V_1_reg_718.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        p_0106_0_i_i_reg_360 = child_depth_curr_V_reg_645.read();
    }
    if ((esl_seteq<1,1,1>(tmp_reg_660.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()))) {
        p_07_0_i_i_reg_340 = right_curr_V_1_reg_349.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        p_07_0_i_i_reg_340 = right_curr_V_reg_625.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage1_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_660_pp1_iter1_reg.read()))) {
        p_097_0_i_i_reg_301 = child_depth_V_q1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        p_097_0_i_i_reg_301 = child_depth_next_V_reg_650.read();
    }
    if ((esl_seteq<1,1,1>(tmp_reg_660.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()))) {
        p_09_0_i_i_reg_320 = left_curr_V_1_reg_329.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        p_09_0_i_i_reg_320 = left_curr_V_reg_615.read();
    }
    if ((esl_seteq<1,1,1>(tmp_reg_660.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()))) {
        right_curr_V_1_reg_349 = right_next_V_1_reg_728.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        right_curr_V_1_reg_349 = right_next_V_reg_630.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        add_ln23_reg_563 = add_ln23_fu_419_p2.read();
        add_ln26_reg_574 = add_ln26_fu_429_p2.read();
        i_reg_568 = i_fu_424_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_462_p3.read()))) {
        add_ln61_reg_693 = add_ln61_fu_503_p2.read();
        icmp_ln879_reg_688 = icmp_ln879_fu_497_p2.read();
        icmp_ln883_1_reg_674 = icmp_ln883_1_fu_482_p2.read();
        icmp_ln883_reg_670 = icmp_ln883_fu_476_p2.read();
        length_V_reg_664 = length_V_fu_470_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage2.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage2_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(tmp_reg_660.read(), ap_const_lv1_0))) {
        child_depth_curr_V_1_reg_718 = child_depth_curr_V_1_fu_531_p3.read();
        i_6_reg_733 = i_6_fu_537_p2.read();
        left_next_V_1_reg_723 = left_V_q0.read();
        right_next_V_1_reg_728 = right_V_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        child_depth_curr_V_reg_645 = child_depth_V_q0.read();
        child_depth_next_V_reg_650 = child_depth_V_q1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage1_11001.read(), ap_const_boolean_0) && ((esl_seteq<1,1,1>(tmp_reg_660.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln883_1_reg_674.read())) || 
  (esl_seteq<1,1,1>(tmp_reg_660.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln883_reg_670.read()))))) {
        count_V_reg_698 = internal_length_hist_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && ((esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_462_p3.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln883_1_fu_482_p2.read())) || 
  (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_462_p3.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln883_fu_476_p2.read()))))) {
        internal_length_hist_2_reg_683 =  (sc_lv<6>) (zext_ln544_7_fu_488_p1.read());
        zext_ln544_7_reg_678 = zext_ln544_7_fu_488_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        left_curr_V_reg_615 = left_V_q0.read();
        left_next_V_reg_620 = left_V_q1.read();
        parent_next_V_reg_609 = parent_V_q1.read();
        right_curr_V_reg_625 = right_V_q0.read();
        right_next_V_reg_630 = right_V_q1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp1_stage2_11001.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(tmp_reg_660.read(), ap_const_lv1_0)))) {
        reg_392 = parent_V_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_reg_660 = ap_phi_mux_op2_assign_phi_fu_372_p4.read().range(31, 31);
        tmp_reg_660_pp1_iter1_reg = tmp_reg_660.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, extLd_loc_empty_n.read())))) {
        zext_ln13_reg_548 = zext_ln13_fu_397_p1.read();
    }
}

void compute_bit_length::thread_add_ln23_fu_419_p2() {
    add_ln23_fu_419_p2 = (!zext_ln13_reg_548.read().is_01() || !ap_const_lv10_3FE.is_01())? sc_lv<10>(): (sc_biguint<10>(zext_ln13_reg_548.read()) + sc_bigint<10>(ap_const_lv10_3FE));
}

void compute_bit_length::thread_add_ln26_fu_429_p2() {
    add_ln26_fu_429_p2 = (!zext_ln13_reg_548.read().is_01() || !ap_const_lv10_3FC.is_01())? sc_lv<10>(): (sc_biguint<10>(zext_ln13_reg_548.read()) + sc_bigint<10>(ap_const_lv10_3FC));
}

void compute_bit_length::thread_add_ln61_fu_503_p2() {
    add_ln61_fu_503_p2 = (!ap_phi_mux_op2_assign_phi_fu_372_p4.read().is_01() || !ap_const_lv32_FFFFFFFE.is_01())? sc_lv<32>(): (sc_biguint<32>(ap_phi_mux_op2_assign_phi_fu_372_p4.read()) + sc_bigint<32>(ap_const_lv32_FFFFFFFE));
}

void compute_bit_length::thread_ap_CS_fsm_pp1_stage0() {
    ap_CS_fsm_pp1_stage0 = ap_CS_fsm.read()[8];
}

void compute_bit_length::thread_ap_CS_fsm_pp1_stage1() {
    ap_CS_fsm_pp1_stage1 = ap_CS_fsm.read()[9];
}

void compute_bit_length::thread_ap_CS_fsm_pp1_stage2() {
    ap_CS_fsm_pp1_stage2 = ap_CS_fsm.read()[10];
}

void compute_bit_length::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void compute_bit_length::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[11];
}

void compute_bit_length::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void compute_bit_length::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void compute_bit_length::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void compute_bit_length::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void compute_bit_length::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void compute_bit_length::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void compute_bit_length::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void compute_bit_length::thread_ap_block_pp1_stage0() {
    ap_block_pp1_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void compute_bit_length::thread_ap_block_pp1_stage0_11001() {
    ap_block_pp1_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void compute_bit_length::thread_ap_block_pp1_stage0_subdone() {
    ap_block_pp1_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void compute_bit_length::thread_ap_block_pp1_stage1() {
    ap_block_pp1_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void compute_bit_length::thread_ap_block_pp1_stage1_11001() {
    ap_block_pp1_stage1_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void compute_bit_length::thread_ap_block_pp1_stage1_subdone() {
    ap_block_pp1_stage1_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void compute_bit_length::thread_ap_block_pp1_stage2() {
    ap_block_pp1_stage2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void compute_bit_length::thread_ap_block_pp1_stage2_11001() {
    ap_block_pp1_stage2_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void compute_bit_length::thread_ap_block_pp1_stage2_subdone() {
    ap_block_pp1_stage2_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void compute_bit_length::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, extLd_loc_empty_n.read()));
}

void compute_bit_length::thread_ap_block_state10_pp1_stage1_iter0() {
    ap_block_state10_pp1_stage1_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void compute_bit_length::thread_ap_block_state11_pp1_stage2_iter0() {
    ap_block_state11_pp1_stage2_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void compute_bit_length::thread_ap_block_state12_pp1_stage0_iter1() {
    ap_block_state12_pp1_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void compute_bit_length::thread_ap_block_state13_pp1_stage1_iter1() {
    ap_block_state13_pp1_stage1_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void compute_bit_length::thread_ap_block_state9_pp1_stage0_iter0() {
    ap_block_state9_pp1_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void compute_bit_length::thread_ap_condition_530() {
    ap_condition_530 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage1_11001.read(), ap_const_boolean_0) && ((esl_seteq<1,1,1>(tmp_reg_660.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln883_1_reg_674.read()) && 
   esl_seteq<1,1,1>(icmp_ln883_reg_670.read(), ap_const_lv1_1)) || 
  (esl_seteq<1,1,1>(tmp_reg_660.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln883_reg_670.read()) && 
   esl_seteq<1,1,1>(icmp_ln883_1_reg_674.read(), ap_const_lv1_1))));
}

void compute_bit_length::thread_ap_condition_534() {
    ap_condition_534 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_462_p3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln883_1_fu_482_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln883_fu_476_p2.read()));
}

void compute_bit_length::thread_ap_condition_pp1_exit_iter0_state9() {
    if (esl_seteq<1,1,1>(tmp_fu_462_p3.read(), ap_const_lv1_1)) {
        ap_condition_pp1_exit_iter0_state9 = ap_const_logic_1;
    } else {
        ap_condition_pp1_exit_iter0_state9 = ap_const_logic_0;
    }
}

void compute_bit_length::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void compute_bit_length::thread_ap_enable_pp1() {
    ap_enable_pp1 = (ap_idle_pp1.read() ^ ap_const_logic_1);
}

void compute_bit_length::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void compute_bit_length::thread_ap_idle_pp1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter1.read()))) {
        ap_idle_pp1 = ap_const_logic_1;
    } else {
        ap_idle_pp1 = ap_const_logic_0;
    }
}

void compute_bit_length::thread_ap_phi_mux_op2_assign_phi_fu_372_p4() {
    if ((esl_seteq<1,1,1>(tmp_reg_660.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_op2_assign_phi_fu_372_p4 = i_6_reg_733.read();
    } else {
        ap_phi_mux_op2_assign_phi_fu_372_p4 = op2_assign_reg_369.read();
    }
}

void compute_bit_length::thread_ap_phi_mux_p_0104_0_i_i_phi_fu_314_p4() {
    if ((esl_seteq<1,1,1>(tmp_reg_660.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_p_0104_0_i_i_phi_fu_314_p4 = reg_392.read();
    } else {
        ap_phi_mux_p_0104_0_i_i_phi_fu_314_p4 = p_0104_0_i_i_reg_311.read();
    }
}

void compute_bit_length::thread_ap_phi_mux_p_0106_0_i_i_phi_fu_363_p4() {
    if ((esl_seteq<1,1,1>(tmp_reg_660.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_p_0106_0_i_i_phi_fu_363_p4 = child_depth_curr_V_1_reg_718.read();
    } else {
        ap_phi_mux_p_0106_0_i_i_phi_fu_363_p4 = p_0106_0_i_i_reg_360.read();
    }
}

void compute_bit_length::thread_ap_phi_mux_p_07_0_i_i_phi_fu_343_p4() {
    if ((esl_seteq<1,1,1>(tmp_reg_660.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_p_07_0_i_i_phi_fu_343_p4 = right_curr_V_1_reg_349.read();
    } else {
        ap_phi_mux_p_07_0_i_i_phi_fu_343_p4 = p_07_0_i_i_reg_340.read();
    }
}

void compute_bit_length::thread_ap_phi_mux_p_09_0_i_i_phi_fu_323_p4() {
    if ((esl_seteq<1,1,1>(tmp_reg_660.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_p_09_0_i_i_phi_fu_323_p4 = left_curr_V_1_reg_329.read();
    } else {
        ap_phi_mux_p_09_0_i_i_phi_fu_323_p4 = p_09_0_i_i_reg_320.read();
    }
}

void compute_bit_length::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void compute_bit_length::thread_child_depth_V_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage1.read(), ap_const_boolean_0))) {
        child_depth_V_address0 =  (sc_lv<8>) (zext_ln40_fu_509_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        child_depth_V_address0 =  (sc_lv<8>) (zext_ln544_fu_450_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        child_depth_V_address0 =  (sc_lv<8>) (sext_ln23_fu_434_p1.read());
    } else {
        child_depth_V_address0 = "XXXXXXXX";
    }
}

void compute_bit_length::thread_child_depth_V_address1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        child_depth_V_address1 =  (sc_lv<8>) (zext_ln544_8_fu_543_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        child_depth_V_address1 =  (sc_lv<8>) (zext_ln544_5_fu_455_p1.read());
    } else {
        child_depth_V_address1 = "XXXXXXXX";
    }
}

void compute_bit_length::thread_child_depth_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage1_11001.read(), ap_const_boolean_0)))) {
        child_depth_V_ce0 = ap_const_logic_1;
    } else {
        child_depth_V_ce0 = ap_const_logic_0;
    }
}

void compute_bit_length::thread_child_depth_V_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read())))) {
        child_depth_V_ce1 = ap_const_logic_1;
    } else {
        child_depth_V_ce1 = ap_const_logic_0;
    }
}

void compute_bit_length::thread_child_depth_V_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage1.read(), ap_const_boolean_0))) {
        child_depth_V_d0 = length_V_reg_664.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        child_depth_V_d0 = ap_const_lv6_1;
    } else {
        child_depth_V_d0 =  (sc_lv<6>) ("XXXXXX");
    }
}

void compute_bit_length::thread_child_depth_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(tmp_reg_660.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage1_11001.read(), ap_const_boolean_0)))) {
        child_depth_V_we0 = ap_const_logic_1;
    } else {
        child_depth_V_we0 = ap_const_logic_0;
    }
}

void compute_bit_length::thread_child_depth_curr_V_1_fu_531_p3() {
    child_depth_curr_V_1_fu_531_p3 = (!icmp_ln879_reg_688.read()[0].is_01())? sc_lv<6>(): ((icmp_ln879_reg_688.read()[0].to_bool())? length_V_reg_664.read(): p_097_0_i_i_reg_301.read());
}

void compute_bit_length::thread_count_V_1_fu_524_p2() {
    count_V_1_fu_524_p2 = (!count_V_reg_698.read().is_01() || !zext_ln544_6_fu_520_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(count_V_reg_698.read()) + sc_biguint<9>(zext_ln544_6_fu_520_p1.read()));
}

void compute_bit_length::thread_extLd_loc_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        extLd_loc_blk_n = extLd_loc_empty_n.read();
    } else {
        extLd_loc_blk_n = ap_const_logic_1;
    }
}

void compute_bit_length::thread_extLd_loc_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, extLd_loc_empty_n.read())))) {
        extLd_loc_read = ap_const_logic_1;
    } else {
        extLd_loc_read = ap_const_logic_0;
    }
}

void compute_bit_length::thread_i_5_fu_407_p2() {
    i_5_fu_407_p2 = (!i_0_i_i_reg_290.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(i_0_i_i_reg_290.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void compute_bit_length::thread_i_6_fu_537_p2() {
    i_6_fu_537_p2 = (!op2_assign_reg_369.read().is_01() || !ap_const_lv32_FFFFFFFF.is_01())? sc_lv<32>(): (sc_biguint<32>(op2_assign_reg_369.read()) + sc_bigint<32>(ap_const_lv32_FFFFFFFF));
}

void compute_bit_length::thread_i_fu_424_p2() {
    i_fu_424_p2 = (!zext_ln13_reg_548.read().is_01() || !ap_const_lv10_3FD.is_01())? sc_lv<10>(): (sc_biguint<10>(zext_ln13_reg_548.read()) + sc_bigint<10>(ap_const_lv10_3FD));
}

void compute_bit_length::thread_icmp_ln17_fu_401_p2() {
    icmp_ln17_fu_401_p2 = (!i_0_i_i_reg_290.read().is_01() || !ap_const_lv7_40.is_01())? sc_lv<1>(): sc_lv<1>(i_0_i_i_reg_290.read() == ap_const_lv7_40);
}

void compute_bit_length::thread_icmp_ln879_fu_497_p2() {
    icmp_ln879_fu_497_p2 = (!zext_ln879_fu_493_p1.read().is_01() || !ap_phi_mux_op2_assign_phi_fu_372_p4.read().is_01())? sc_lv<1>(): sc_lv<1>(zext_ln879_fu_493_p1.read() == ap_phi_mux_op2_assign_phi_fu_372_p4.read());
}

void compute_bit_length::thread_icmp_ln883_1_fu_482_p2() {
    icmp_ln883_1_fu_482_p2 = (!ap_phi_mux_p_07_0_i_i_phi_fu_343_p4.read().is_01() || !ap_const_lv9_1FF.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_p_07_0_i_i_phi_fu_343_p4.read() == ap_const_lv9_1FF);
}

void compute_bit_length::thread_icmp_ln883_fu_476_p2() {
    icmp_ln883_fu_476_p2 = (!ap_phi_mux_p_09_0_i_i_phi_fu_323_p4.read().is_01() || !ap_const_lv9_1FF.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_p_09_0_i_i_phi_fu_323_p4.read() == ap_const_lv9_1FF);
}

void compute_bit_length::thread_internal_length_hist_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage2.read(), ap_const_boolean_0))) {
        internal_length_hist_address0 = internal_length_hist_2_reg_683.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        internal_length_hist_address0 =  (sc_lv<6>) (zext_ln544_7_fu_488_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        internal_length_hist_address0 =  (sc_lv<6>) (zext_ln19_fu_413_p1.read());
    } else {
        internal_length_hist_address0 =  (sc_lv<6>) ("XXXXXX");
    }
}

void compute_bit_length::thread_internal_length_hist_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage2_11001.read(), ap_const_boolean_0)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)))) {
        internal_length_hist_ce0 = ap_const_logic_1;
    } else {
        internal_length_hist_ce0 = ap_const_logic_0;
    }
}

void compute_bit_length::thread_internal_length_hist_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage2.read(), ap_const_boolean_0))) {
        internal_length_hist_d0 = count_V_1_fu_524_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        internal_length_hist_d0 = ap_const_lv9_0;
    } else {
        internal_length_hist_d0 =  (sc_lv<9>) ("XXXXXXXXX");
    }
}

void compute_bit_length::thread_internal_length_hist_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln17_fu_401_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage2_11001.read(), ap_const_boolean_0) && 
          ((esl_seteq<1,1,1>(tmp_reg_660.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln883_1_reg_674.read())) || 
           (esl_seteq<1,1,1>(tmp_reg_660.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln883_reg_670.read())))))) {
        internal_length_hist_we0 = ap_const_logic_1;
    } else {
        internal_length_hist_we0 = ap_const_logic_0;
    }
}

void compute_bit_length::thread_left_V_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage1.read(), ap_const_boolean_0))) {
        left_V_address0 =  (sc_lv<8>) (sext_ln61_fu_514_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        left_V_address0 =  (sc_lv<8>) (sext_ln25_fu_438_p1.read());
    } else {
        left_V_address0 = "XXXXXXXX";
    }
}

void compute_bit_length::thread_left_V_address1() {
    left_V_address1 =  (sc_lv<8>) (sext_ln26_fu_444_p1.read());
}

void compute_bit_length::thread_left_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage1_11001.read(), ap_const_boolean_0)))) {
        left_V_ce0 = ap_const_logic_1;
    } else {
        left_V_ce0 = ap_const_logic_0;
    }
}

void compute_bit_length::thread_left_V_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        left_V_ce1 = ap_const_logic_1;
    } else {
        left_V_ce1 = ap_const_logic_0;
    }
}

void compute_bit_length::thread_length_V_fu_470_p2() {
    length_V_fu_470_p2 = (!ap_phi_mux_p_0106_0_i_i_phi_fu_363_p4.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(ap_phi_mux_p_0106_0_i_i_phi_fu_363_p4.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void compute_bit_length::thread_length_histogram_V_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage2.read(), ap_const_boolean_0))) {
        length_histogram_V_address0 =  (sc_lv<6>) (zext_ln544_7_reg_678.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        length_histogram_V_address0 =  (sc_lv<6>) (zext_ln19_fu_413_p1.read());
    } else {
        length_histogram_V_address0 =  (sc_lv<6>) ("XXXXXX");
    }
}

void compute_bit_length::thread_length_histogram_V_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage2_11001.read(), ap_const_boolean_0)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        length_histogram_V_ce0 = ap_const_logic_1;
    } else {
        length_histogram_V_ce0 = ap_const_logic_0;
    }
}

void compute_bit_length::thread_length_histogram_V_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage2.read(), ap_const_boolean_0))) {
        length_histogram_V_d0 = count_V_1_fu_524_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        length_histogram_V_d0 = ap_const_lv9_0;
    } else {
        length_histogram_V_d0 =  (sc_lv<9>) ("XXXXXXXXX");
    }
}

void compute_bit_length::thread_length_histogram_V_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln17_fu_401_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage2_11001.read(), ap_const_boolean_0) && 
          ((esl_seteq<1,1,1>(tmp_reg_660.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln883_1_reg_674.read())) || 
           (esl_seteq<1,1,1>(tmp_reg_660.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln883_reg_670.read())))))) {
        length_histogram_V_we0 = ap_const_logic_1;
    } else {
        length_histogram_V_we0 = ap_const_logic_0;
    }
}

void compute_bit_length::thread_parent_V_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage1.read(), ap_const_boolean_0))) {
        parent_V_address0 =  (sc_lv<8>) (sext_ln61_fu_514_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        parent_V_address0 =  (sc_lv<8>) (sext_ln25_fu_438_p1.read());
    } else {
        parent_V_address0 = "XXXXXXXX";
    }
}

void compute_bit_length::thread_parent_V_address1() {
    parent_V_address1 =  (sc_lv<8>) (sext_ln26_fu_444_p1.read());
}

void compute_bit_length::thread_parent_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage1_11001.read(), ap_const_boolean_0)))) {
        parent_V_ce0 = ap_const_logic_1;
    } else {
        parent_V_ce0 = ap_const_logic_0;
    }
}

void compute_bit_length::thread_parent_V_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        parent_V_ce1 = ap_const_logic_1;
    } else {
        parent_V_ce1 = ap_const_logic_0;
    }
}

void compute_bit_length::thread_right_V_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage1.read(), ap_const_boolean_0))) {
        right_V_address0 =  (sc_lv<8>) (sext_ln61_fu_514_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        right_V_address0 =  (sc_lv<8>) (sext_ln25_fu_438_p1.read());
    } else {
        right_V_address0 = "XXXXXXXX";
    }
}

void compute_bit_length::thread_right_V_address1() {
    right_V_address1 =  (sc_lv<8>) (sext_ln26_fu_444_p1.read());
}

void compute_bit_length::thread_right_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage1_11001.read(), ap_const_boolean_0)))) {
        right_V_ce0 = ap_const_logic_1;
    } else {
        right_V_ce0 = ap_const_logic_0;
    }
}

void compute_bit_length::thread_right_V_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        right_V_ce1 = ap_const_logic_1;
    } else {
        right_V_ce1 = ap_const_logic_0;
    }
}

void compute_bit_length::thread_sext_ln23_fu_434_p1() {
    sext_ln23_fu_434_p1 = esl_sext<64,10>(add_ln23_reg_563.read());
}

void compute_bit_length::thread_sext_ln25_1_fu_459_p1() {
    sext_ln25_1_fu_459_p1 = esl_sext<32,10>(i_reg_568.read());
}

void compute_bit_length::thread_sext_ln25_fu_438_p1() {
    sext_ln25_fu_438_p1 = esl_sext<64,10>(i_reg_568.read());
}

void compute_bit_length::thread_sext_ln26_fu_444_p1() {
    sext_ln26_fu_444_p1 = esl_sext<64,10>(add_ln26_reg_574.read());
}

void compute_bit_length::thread_sext_ln61_fu_514_p1() {
    sext_ln61_fu_514_p1 = esl_sext<64,32>(add_ln61_reg_693.read());
}

void compute_bit_length::thread_tmp_fu_462_p3() {
    tmp_fu_462_p3 = ap_phi_mux_op2_assign_phi_fu_372_p4.read().range(31, 31);
}

void compute_bit_length::thread_zext_ln13_fu_397_p1() {
    zext_ln13_fu_397_p1 = esl_zext<10,9>(extLd_loc_dout.read());
}

void compute_bit_length::thread_zext_ln19_fu_413_p1() {
    zext_ln19_fu_413_p1 = esl_zext<64,7>(i_0_i_i_reg_290.read());
}

void compute_bit_length::thread_zext_ln40_fu_509_p1() {
    zext_ln40_fu_509_p1 = esl_zext<64,32>(op2_assign_reg_369.read());
}

void compute_bit_length::thread_zext_ln544_5_fu_455_p1() {
    zext_ln544_5_fu_455_p1 = esl_zext<64,9>(parent_next_V_reg_609.read());
}

void compute_bit_length::thread_zext_ln544_6_fu_520_p1() {
    zext_ln544_6_fu_520_p1 = esl_zext<9,2>(ap_phi_reg_pp1_iter0_phi_ln700_i_i_reg_379.read());
}

void compute_bit_length::thread_zext_ln544_7_fu_488_p1() {
    zext_ln544_7_fu_488_p1 = esl_zext<64,6>(length_V_fu_470_p2.read());
}

void compute_bit_length::thread_zext_ln544_8_fu_543_p1() {
    zext_ln544_8_fu_543_p1 = esl_zext<64,9>(reg_392.read());
}

void compute_bit_length::thread_zext_ln544_fu_450_p1() {
    zext_ln544_fu_450_p1 = esl_zext<64,9>(reg_392.read());
}

void compute_bit_length::thread_zext_ln879_fu_493_p1() {
    zext_ln879_fu_493_p1 = esl_zext<32,9>(ap_phi_mux_p_0104_0_i_i_phi_fu_314_p4.read());
}

void compute_bit_length::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, extLd_loc_empty_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln17_fu_401_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            break;
        case 256 : 
            if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(tmp_fu_462_p3.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(tmp_fu_462_p3.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state14;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            }
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_block_pp1_stage1_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage1_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter0.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage1_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter0.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state14;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            }
            break;
        case 1024 : 
            if (esl_seteq<1,1,1>(ap_block_pp1_stage2_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            }
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<12>) ("XXXXXXXXXXXX");
            break;
    }
}

}

