// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _create_tree_HH_
#define _create_tree_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "create_tree_frequibs.h"
#include "create_tree_frequjbC.h"

namespace ap_rtl {

struct create_tree : public sc_module {
    // Port declarations 31
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<8> > in_value_V_address0;
    sc_out< sc_logic > in_value_V_ce0;
    sc_in< sc_lv<9> > in_value_V_q0;
    sc_out< sc_lv<8> > in_frequency_V_address0;
    sc_out< sc_logic > in_frequency_V_ce0;
    sc_in< sc_lv<32> > in_frequency_V_q0;
    sc_in< sc_lv<9> > extLd_loc_dout;
    sc_in< sc_logic > extLd_loc_empty_n;
    sc_out< sc_logic > extLd_loc_read;
    sc_out< sc_lv<8> > parent_V_address0;
    sc_out< sc_logic > parent_V_ce0;
    sc_out< sc_logic > parent_V_we0;
    sc_out< sc_lv<9> > parent_V_d0;
    sc_out< sc_lv<8> > left_V_address0;
    sc_out< sc_logic > left_V_ce0;
    sc_out< sc_logic > left_V_we0;
    sc_out< sc_lv<9> > left_V_d0;
    sc_out< sc_lv<8> > right_V_address0;
    sc_out< sc_logic > right_V_ce0;
    sc_out< sc_logic > right_V_we0;
    sc_out< sc_lv<9> > right_V_d0;
    sc_out< sc_lv<9> > extLd_loc_out_din;
    sc_in< sc_logic > extLd_loc_out_full_n;
    sc_out< sc_logic > extLd_loc_out_write;


    // Module declarations
    create_tree(sc_module_name name);
    SC_HAS_PROCESS(create_tree);

    ~create_tree();

    sc_trace_file* mVcdFile;

    create_tree_frequibs* frequency_0_V_U;
    create_tree_frequjbC* frequency_1_V_U;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<7> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > extLd_loc_blk_n;
    sc_signal< sc_logic > extLd_loc_out_blk_n;
    sc_signal< sc_lv<9> > t_V_3_reg_291;
    sc_signal< sc_lv<9> > t_V_reg_303;
    sc_signal< sc_lv<9> > op_assign_reg_315;
    sc_signal< sc_lv<9> > p_0147_2_i_i_reg_385;
    sc_signal< sc_lv<9> > p_098_2_i_i_reg_397;
    sc_signal< sc_lv<8> > reg_419;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage4;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_state6_pp0_stage4_iter0;
    sc_signal< bool > ap_block_pp0_stage4_11001;
    sc_signal< sc_lv<1> > icmp_ln19_reg_688;
    sc_signal< sc_lv<1> > or_ln51_fu_615_p2;
    sc_signal< sc_lv<9> > extLd_loc_read_reg_677;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<10> > add_ln19_fu_427_p2;
    sc_signal< sc_lv<10> > add_ln19_reg_683;
    sc_signal< sc_lv<1> > icmp_ln19_fu_437_p2;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<9> > i_fu_442_p2;
    sc_signal< sc_lv<9> > i_reg_692;
    sc_signal< sc_lv<9> > lshr_ln1_reg_707;
    sc_signal< sc_lv<10> > ret_V_1_fu_478_p2;
    sc_signal< sc_lv<10> > ret_V_1_reg_712;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< bool > ap_block_state3_pp0_stage1_iter0;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<9> > s_value_V_reg_727;
    sc_signal< sc_lv<32> > s_frequency_V_2_reg_733;
    sc_signal< sc_lv<32> > intermediate_freq_V_1_fu_514_p3;
    sc_signal< sc_lv<32> > intermediate_freq_V_1_reg_760;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage2;
    sc_signal< bool > ap_block_state4_pp0_stage2_iter0;
    sc_signal< bool > ap_block_pp0_stage2_11001;
    sc_signal< sc_lv<32> > intermediate_freq_ne_fu_522_p3;
    sc_signal< sc_lv<32> > intermediate_freq_ne_reg_767;
    sc_signal< sc_lv<9> > s_value_V_1_reg_772;
    sc_signal< sc_lv<32> > s_frequency_V_reg_777;
    sc_signal< sc_lv<1> > or_ln34_fu_562_p2;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage3;
    sc_signal< bool > ap_block_state5_pp0_stage3_iter0;
    sc_signal< bool > ap_block_pp0_stage3_11001;
    sc_signal< sc_lv<9> > tree_count_V_fu_574_p2;
    sc_signal< sc_lv<9> > in_count_V_fu_580_p2;
    sc_signal< sc_lv<8> > right_V_addr_reg_796;
    sc_signal< sc_lv<1> > or_ln51_reg_801;
    sc_signal< sc_lv<32> > add_ln209_1_fu_621_p2;
    sc_signal< sc_lv<32> > add_ln209_1_reg_805;
    sc_signal< sc_lv<1> > trunc_ln321_1_fu_627_p1;
    sc_signal< sc_lv<1> > trunc_ln321_1_reg_811;
    sc_signal< sc_lv<32> > add_ln209_fu_643_p2;
    sc_signal< sc_lv<32> > add_ln209_reg_815;
    sc_signal< sc_lv<1> > trunc_ln321_fu_649_p1;
    sc_signal< sc_lv<1> > trunc_ln321_reg_821;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage4_subdone;
    sc_signal< sc_lv<7> > frequency_0_V_address0;
    sc_signal< sc_logic > frequency_0_V_ce0;
    sc_signal< sc_logic > frequency_0_V_we0;
    sc_signal< sc_lv<32> > frequency_0_V_d0;
    sc_signal< sc_lv<32> > frequency_0_V_q0;
    sc_signal< sc_lv<7> > frequency_0_V_address1;
    sc_signal< sc_logic > frequency_0_V_ce1;
    sc_signal< sc_lv<32> > frequency_0_V_q1;
    sc_signal< sc_lv<7> > frequency_1_V_address0;
    sc_signal< sc_logic > frequency_1_V_ce0;
    sc_signal< sc_logic > frequency_1_V_we0;
    sc_signal< sc_lv<32> > frequency_1_V_d0;
    sc_signal< sc_lv<32> > frequency_1_V_q0;
    sc_signal< sc_lv<7> > frequency_1_V_address1;
    sc_signal< sc_logic > frequency_1_V_ce1;
    sc_signal< sc_lv<32> > frequency_1_V_q1;
    sc_signal< sc_lv<9> > ap_phi_mux_t_V_3_phi_fu_295_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<9> > ap_phi_mux_t_V_phi_fu_307_p4;
    sc_signal< sc_lv<9> > ap_phi_mux_op_assign_phi_fu_320_p4;
    sc_signal< sc_lv<32> > ap_phi_reg_pp0_iter0_s_1_0_i_i_reg_328;
    sc_signal< sc_lv<9> > ap_phi_reg_pp0_iter0_s_0_0_i_i_reg_337;
    sc_signal< sc_lv<9> > ap_phi_reg_pp0_iter0_t_V_5_reg_347;
    sc_signal< sc_lv<9> > ap_phi_reg_pp0_iter0_t_V_4_reg_357;
    sc_signal< sc_lv<32> > ap_phi_reg_pp0_iter0_p_0181_0_i_i_reg_367;
    sc_signal< sc_lv<32> > ap_phi_reg_pp0_iter0_p_0102_0_i_i_reg_376;
    sc_signal< sc_lv<9> > ap_phi_reg_pp0_iter0_p_0147_2_i_i_reg_385;
    sc_signal< sc_lv<9> > tree_count_V_1_fu_636_p2;
    sc_signal< sc_lv<9> > in_count_V_1_fu_653_p2;
    sc_signal< sc_lv<9> > ap_phi_reg_pp0_iter0_p_098_2_i_i_reg_397;
    sc_signal< sc_lv<64> > zext_ln544_4_fu_448_p1;
    sc_signal< sc_lv<64> > zext_ln29_fu_494_p1;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<64> > zext_ln31_fu_500_p1;
    sc_signal< sc_lv<64> > zext_ln544_5_fu_505_p1;
    sc_signal< sc_lv<64> > zext_ln36_fu_568_p1;
    sc_signal< bool > ap_block_pp0_stage3;
    sc_signal< sc_lv<64> > zext_ln544_fu_530_p1;
    sc_signal< sc_lv<64> > zext_ln544_6_fu_631_p1;
    sc_signal< bool > ap_block_pp0_stage4;
    sc_signal< sc_lv<64> > zext_ln321_1_fu_660_p1;
    sc_signal< sc_lv<64> > zext_ln321_fu_666_p1;
    sc_signal< sc_lv<64> > zext_ln544_3_fu_672_p1;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<10> > extLd_cast_fu_423_p1;
    sc_signal< sc_lv<10> > zext_ln243_fu_433_p1;
    sc_signal< sc_lv<10> > zext_ln215_fu_454_p1;
    sc_signal< sc_lv<10> > ret_V_fu_458_p2;
    sc_signal< sc_lv<10> > zext_ln215_1_fu_474_p1;
    sc_signal< sc_lv<8> > lshr_ln_fu_484_p4;
    sc_signal< bool > ap_block_pp0_stage2;
    sc_signal< sc_lv<1> > trunc_ln29_fu_510_p1;
    sc_signal< sc_lv<1> > icmp_ln34_1_fu_540_p2;
    sc_signal< sc_lv<1> > xor_ln34_fu_544_p2;
    sc_signal< sc_lv<1> > icmp_ln34_fu_535_p2;
    sc_signal< sc_lv<1> > and_ln34_fu_550_p2;
    sc_signal< sc_lv<1> > icmp_ln879_fu_556_p2;
    sc_signal< sc_lv<1> > icmp_ln51_1_fu_591_p2;
    sc_signal< sc_lv<1> > xor_ln51_fu_597_p2;
    sc_signal< sc_lv<1> > icmp_ln51_fu_586_p2;
    sc_signal< sc_lv<1> > and_ln51_fu_603_p2;
    sc_signal< sc_lv<1> > icmp_ln879_2_fu_609_p2;
    sc_signal< sc_lv<7> > ap_NS_fsm;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< bool > ap_block_pp0_stage2_subdone;
    sc_signal< bool > ap_block_pp0_stage3_subdone;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< bool > ap_condition_529;
    sc_signal< bool > ap_condition_299;
    sc_signal< bool > ap_condition_342;
    sc_signal< bool > ap_condition_113;
    sc_signal< bool > ap_condition_608;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<7> ap_ST_fsm_state1;
    static const sc_lv<7> ap_ST_fsm_pp0_stage0;
    static const sc_lv<7> ap_ST_fsm_pp0_stage1;
    static const sc_lv<7> ap_ST_fsm_pp0_stage2;
    static const sc_lv<7> ap_ST_fsm_pp0_stage3;
    static const sc_lv<7> ap_ST_fsm_pp0_stage4;
    static const sc_lv<7> ap_ST_fsm_state8;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_5;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<9> ap_const_lv9_1FF;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<10> ap_const_lv10_3FF;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<32> ap_const_lv32_9;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln19_fu_427_p2();
    void thread_add_ln209_1_fu_621_p2();
    void thread_add_ln209_fu_643_p2();
    void thread_and_ln34_fu_550_p2();
    void thread_and_ln51_fu_603_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_pp0_stage2();
    void thread_ap_CS_fsm_pp0_stage3();
    void thread_ap_CS_fsm_pp0_stage4();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state8();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_pp0_stage2();
    void thread_ap_block_pp0_stage2_11001();
    void thread_ap_block_pp0_stage2_subdone();
    void thread_ap_block_pp0_stage3();
    void thread_ap_block_pp0_stage3_11001();
    void thread_ap_block_pp0_stage3_subdone();
    void thread_ap_block_pp0_stage4();
    void thread_ap_block_pp0_stage4_11001();
    void thread_ap_block_pp0_stage4_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage1_iter0();
    void thread_ap_block_state4_pp0_stage2_iter0();
    void thread_ap_block_state5_pp0_stage3_iter0();
    void thread_ap_block_state6_pp0_stage4_iter0();
    void thread_ap_block_state7_pp0_stage0_iter1();
    void thread_ap_condition_113();
    void thread_ap_condition_299();
    void thread_ap_condition_342();
    void thread_ap_condition_529();
    void thread_ap_condition_608();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_op_assign_phi_fu_320_p4();
    void thread_ap_phi_mux_t_V_3_phi_fu_295_p4();
    void thread_ap_phi_mux_t_V_phi_fu_307_p4();
    void thread_ap_phi_reg_pp0_iter0_p_0147_2_i_i_reg_385();
    void thread_ap_phi_reg_pp0_iter0_p_098_2_i_i_reg_397();
    void thread_ap_ready();
    void thread_extLd_cast_fu_423_p1();
    void thread_extLd_loc_blk_n();
    void thread_extLd_loc_out_blk_n();
    void thread_extLd_loc_out_din();
    void thread_extLd_loc_out_write();
    void thread_extLd_loc_read();
    void thread_frequency_0_V_address0();
    void thread_frequency_0_V_address1();
    void thread_frequency_0_V_ce0();
    void thread_frequency_0_V_ce1();
    void thread_frequency_0_V_d0();
    void thread_frequency_0_V_we0();
    void thread_frequency_1_V_address0();
    void thread_frequency_1_V_address1();
    void thread_frequency_1_V_ce0();
    void thread_frequency_1_V_ce1();
    void thread_frequency_1_V_d0();
    void thread_frequency_1_V_we0();
    void thread_i_fu_442_p2();
    void thread_icmp_ln19_fu_437_p2();
    void thread_icmp_ln34_1_fu_540_p2();
    void thread_icmp_ln34_fu_535_p2();
    void thread_icmp_ln51_1_fu_591_p2();
    void thread_icmp_ln51_fu_586_p2();
    void thread_icmp_ln879_2_fu_609_p2();
    void thread_icmp_ln879_fu_556_p2();
    void thread_in_count_V_1_fu_653_p2();
    void thread_in_count_V_fu_580_p2();
    void thread_in_frequency_V_address0();
    void thread_in_frequency_V_ce0();
    void thread_in_value_V_address0();
    void thread_in_value_V_ce0();
    void thread_intermediate_freq_V_1_fu_514_p3();
    void thread_intermediate_freq_ne_fu_522_p3();
    void thread_left_V_address0();
    void thread_left_V_ce0();
    void thread_left_V_d0();
    void thread_left_V_we0();
    void thread_lshr_ln_fu_484_p4();
    void thread_or_ln34_fu_562_p2();
    void thread_or_ln51_fu_615_p2();
    void thread_parent_V_address0();
    void thread_parent_V_ce0();
    void thread_parent_V_d0();
    void thread_parent_V_we0();
    void thread_ret_V_1_fu_478_p2();
    void thread_ret_V_fu_458_p2();
    void thread_right_V_address0();
    void thread_right_V_ce0();
    void thread_right_V_d0();
    void thread_right_V_we0();
    void thread_tree_count_V_1_fu_636_p2();
    void thread_tree_count_V_fu_574_p2();
    void thread_trunc_ln29_fu_510_p1();
    void thread_trunc_ln321_1_fu_627_p1();
    void thread_trunc_ln321_fu_649_p1();
    void thread_xor_ln34_fu_544_p2();
    void thread_xor_ln51_fu_597_p2();
    void thread_zext_ln215_1_fu_474_p1();
    void thread_zext_ln215_fu_454_p1();
    void thread_zext_ln243_fu_433_p1();
    void thread_zext_ln29_fu_494_p1();
    void thread_zext_ln31_fu_500_p1();
    void thread_zext_ln321_1_fu_660_p1();
    void thread_zext_ln321_fu_666_p1();
    void thread_zext_ln36_fu_568_p1();
    void thread_zext_ln544_3_fu_672_p1();
    void thread_zext_ln544_4_fu_448_p1();
    void thread_zext_ln544_5_fu_505_p1();
    void thread_zext_ln544_6_fu_631_p1();
    void thread_zext_ln544_fu_530_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
