// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _create_tree_HH_
#define _create_tree_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "create_tree_frequibs.h"

namespace ap_rtl {

struct create_tree : public sc_module {
    // Port declarations 31
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<8> > in_value_V_address0;
    sc_out< sc_logic > in_value_V_ce0;
    sc_in< sc_lv<9> > in_value_V_q0;
    sc_out< sc_lv<8> > in_frequency_V_address0;
    sc_out< sc_logic > in_frequency_V_ce0;
    sc_in< sc_lv<32> > in_frequency_V_q0;
    sc_in< sc_lv<9> > extLd_loc_dout;
    sc_in< sc_logic > extLd_loc_empty_n;
    sc_out< sc_logic > extLd_loc_read;
    sc_out< sc_lv<8> > parent_V_address0;
    sc_out< sc_logic > parent_V_ce0;
    sc_out< sc_logic > parent_V_we0;
    sc_out< sc_lv<9> > parent_V_d0;
    sc_out< sc_lv<8> > left_V_address0;
    sc_out< sc_logic > left_V_ce0;
    sc_out< sc_logic > left_V_we0;
    sc_out< sc_lv<9> > left_V_d0;
    sc_out< sc_lv<8> > right_V_address0;
    sc_out< sc_logic > right_V_ce0;
    sc_out< sc_logic > right_V_we0;
    sc_out< sc_lv<9> > right_V_d0;
    sc_out< sc_lv<9> > extLd_loc_out_din;
    sc_in< sc_logic > extLd_loc_out_full_n;
    sc_out< sc_logic > extLd_loc_out_write;


    // Module declarations
    create_tree(sc_module_name name);
    SC_HAS_PROCESS(create_tree);

    ~create_tree();

    sc_trace_file* mVcdFile;

    create_tree_frequibs* frequency_V_U;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<7> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > extLd_loc_blk_n;
    sc_signal< sc_logic > extLd_loc_out_blk_n;
    sc_signal< sc_lv<32> > frequency_V_q0;
    sc_signal< sc_lv<32> > reg_326;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<9> > reg_331;
    sc_signal< sc_lv<32> > reg_337;
    sc_signal< sc_lv<9> > extLd_loc_read_reg_508;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<10> > add_ln16_fu_346_p2;
    sc_signal< sc_lv<10> > add_ln16_reg_514;
    sc_signal< sc_lv<1> > icmp_ln16_fu_356_p2;
    sc_signal< sc_lv<1> > icmp_ln16_reg_519;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<9> > i_fu_361_p2;
    sc_signal< sc_lv<9> > i_reg_523;
    sc_signal< sc_lv<64> > zext_ln544_fu_367_p1;
    sc_signal< sc_lv<64> > zext_ln544_reg_528;
    sc_signal< sc_lv<1> > or_ln27_fu_407_p2;
    sc_signal< sc_lv<1> > or_ln27_reg_548;
    sc_signal< sc_lv<64> > zext_ln29_fu_413_p1;
    sc_signal< sc_lv<64> > zext_ln29_reg_552;
    sc_signal< sc_lv<8> > left_V_addr_reg_559;
    sc_signal< sc_lv<9> > tree_count_V_fu_418_p2;
    sc_signal< sc_lv<9> > tree_count_V_reg_564;
    sc_signal< sc_lv<9> > in_count_V_fu_424_p2;
    sc_signal< sc_lv<9> > in_count_V_reg_569;
    sc_signal< sc_lv<64> > zext_ln544_5_fu_430_p1;
    sc_signal< sc_lv<64> > zext_ln544_5_reg_574;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > icmp_ln43_fu_441_p2;
    sc_signal< sc_lv<1> > icmp_ln43_reg_594;
    sc_signal< sc_lv<8> > frequency_V_address0;
    sc_signal< sc_logic > frequency_V_ce0;
    sc_signal< sc_logic > frequency_V_we0;
    sc_signal< sc_lv<32> > frequency_V_d0;
    sc_signal< sc_lv<9> > t_V_3_reg_233;
    sc_signal< sc_lv<9> > ap_phi_mux_p_0168_2_i_i_phi_fu_306_p4;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<9> > t_V_reg_245;
    sc_signal< sc_lv<9> > ap_phi_mux_p_094_2_i_i_phi_fu_318_p4;
    sc_signal< sc_lv<9> > op_assign_reg_257;
    sc_signal< sc_lv<9> > ap_phi_mux_t_V_5_phi_fu_273_p4;
    sc_signal< sc_lv<9> > t_V_5_reg_270;
    sc_signal< sc_lv<9> > ap_phi_mux_t_V_4_phi_fu_284_p4;
    sc_signal< sc_lv<9> > t_V_4_reg_281;
    sc_signal< sc_lv<32> > p_090_0_i_i_reg_292;
    sc_signal< sc_lv<1> > or_ln43_fu_469_p2;
    sc_signal< sc_lv<9> > tree_count_V_1_fu_482_p2;
    sc_signal< sc_lv<9> > in_count_V_1_fu_496_p2;
    sc_signal< sc_lv<64> > zext_ln544_3_fu_372_p1;
    sc_signal< sc_lv<64> > zext_ln544_6_fu_435_p1;
    sc_signal< sc_lv<8> > frequency_V_addr_2_gep_fu_217_p3;
    sc_signal< sc_lv<64> > zext_ln544_4_fu_503_p1;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<32> > add_ln209_1_fu_475_p2;
    sc_signal< sc_lv<32> > add_ln209_fu_489_p2;
    sc_signal< sc_lv<10> > extLd_cast_fu_342_p1;
    sc_signal< sc_lv<10> > zext_ln243_fu_352_p1;
    sc_signal< sc_lv<1> > icmp_ln27_1_fu_383_p2;
    sc_signal< sc_lv<1> > xor_ln27_fu_389_p2;
    sc_signal< sc_lv<1> > icmp_ln27_fu_378_p2;
    sc_signal< sc_lv<1> > and_ln27_fu_395_p2;
    sc_signal< sc_lv<1> > icmp_ln879_fu_401_p2;
    sc_signal< sc_lv<1> > icmp_ln43_1_fu_446_p2;
    sc_signal< sc_lv<1> > xor_ln43_fu_452_p2;
    sc_signal< sc_lv<1> > and_ln43_fu_458_p2;
    sc_signal< sc_lv<1> > icmp_ln879_2_fu_463_p2;
    sc_signal< sc_lv<7> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<7> ap_ST_fsm_state1;
    static const sc_lv<7> ap_ST_fsm_state2;
    static const sc_lv<7> ap_ST_fsm_state3;
    static const sc_lv<7> ap_ST_fsm_state4;
    static const sc_lv<7> ap_ST_fsm_state5;
    static const sc_lv<7> ap_ST_fsm_state6;
    static const sc_lv<7> ap_ST_fsm_state7;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<9> ap_const_lv9_1FF;
    static const sc_lv<10> ap_const_lv10_3FF;
    static const sc_lv<9> ap_const_lv9_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln16_fu_346_p2();
    void thread_add_ln209_1_fu_475_p2();
    void thread_add_ln209_fu_489_p2();
    void thread_and_ln27_fu_395_p2();
    void thread_and_ln43_fu_458_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_block_state1();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_phi_mux_p_0168_2_i_i_phi_fu_306_p4();
    void thread_ap_phi_mux_p_094_2_i_i_phi_fu_318_p4();
    void thread_ap_phi_mux_t_V_4_phi_fu_284_p4();
    void thread_ap_phi_mux_t_V_5_phi_fu_273_p4();
    void thread_ap_ready();
    void thread_extLd_cast_fu_342_p1();
    void thread_extLd_loc_blk_n();
    void thread_extLd_loc_out_blk_n();
    void thread_extLd_loc_out_din();
    void thread_extLd_loc_out_write();
    void thread_extLd_loc_read();
    void thread_frequency_V_addr_2_gep_fu_217_p3();
    void thread_frequency_V_address0();
    void thread_frequency_V_ce0();
    void thread_frequency_V_d0();
    void thread_frequency_V_we0();
    void thread_i_fu_361_p2();
    void thread_icmp_ln16_fu_356_p2();
    void thread_icmp_ln27_1_fu_383_p2();
    void thread_icmp_ln27_fu_378_p2();
    void thread_icmp_ln43_1_fu_446_p2();
    void thread_icmp_ln43_fu_441_p2();
    void thread_icmp_ln879_2_fu_463_p2();
    void thread_icmp_ln879_fu_401_p2();
    void thread_in_count_V_1_fu_496_p2();
    void thread_in_count_V_fu_424_p2();
    void thread_in_frequency_V_address0();
    void thread_in_frequency_V_ce0();
    void thread_in_value_V_address0();
    void thread_in_value_V_ce0();
    void thread_left_V_address0();
    void thread_left_V_ce0();
    void thread_left_V_d0();
    void thread_left_V_we0();
    void thread_or_ln27_fu_407_p2();
    void thread_or_ln43_fu_469_p2();
    void thread_parent_V_address0();
    void thread_parent_V_ce0();
    void thread_parent_V_d0();
    void thread_parent_V_we0();
    void thread_right_V_address0();
    void thread_right_V_ce0();
    void thread_right_V_d0();
    void thread_right_V_we0();
    void thread_tree_count_V_1_fu_482_p2();
    void thread_tree_count_V_fu_418_p2();
    void thread_xor_ln27_fu_389_p2();
    void thread_xor_ln43_fu_452_p2();
    void thread_zext_ln243_fu_352_p1();
    void thread_zext_ln29_fu_413_p1();
    void thread_zext_ln544_3_fu_372_p1();
    void thread_zext_ln544_4_fu_503_p1();
    void thread_zext_ln544_5_fu_430_p1();
    void thread_zext_ln544_6_fu_435_p1();
    void thread_zext_ln544_fu_367_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
