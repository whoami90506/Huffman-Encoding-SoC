// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="huffman_encoding,hls_ip_2019_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=8.108500,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=28,HLS_SYN_DSP=0,HLS_SYN_FF=2912,HLS_SYN_LUT=6690,HLS_VERSION=2019_2}" *)

module huffman_encoding (
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP,
        ap_clk,
        ap_rst_n,
        interrupt,
        symbol_histogram_TDATA,
        symbol_histogram_TKEEP,
        symbol_histogram_TSTRB,
        symbol_histogram_TUSER,
        symbol_histogram_TLAST,
        symbol_histogram_TID,
        symbol_histogram_TDEST,
        encoding_TDATA,
        encoding_TKEEP,
        encoding_TSTRB,
        encoding_TUSER,
        encoding_TLAST,
        encoding_TID,
        encoding_TDEST,
        symbol_histogram_TVALID,
        symbol_histogram_TREADY,
        encoding_TVALID,
        encoding_TREADY
);

parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 5;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_S_AXI_ADDR_WIDTH = 32;

parameter C_S_AXI_AXILITES_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1:0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;
input   ap_clk;
input   ap_rst_n;
output   interrupt;
input  [47:0] symbol_histogram_TDATA;
input  [5:0] symbol_histogram_TKEEP;
input  [5:0] symbol_histogram_TSTRB;
input  [0:0] symbol_histogram_TUSER;
input  [0:0] symbol_histogram_TLAST;
input  [0:0] symbol_histogram_TID;
input  [0:0] symbol_histogram_TDEST;
output  [31:0] encoding_TDATA;
output  [3:0] encoding_TKEEP;
output  [3:0] encoding_TSTRB;
output  [0:0] encoding_TUSER;
output  [0:0] encoding_TLAST;
output  [0:0] encoding_TID;
output  [0:0] encoding_TDEST;
input   symbol_histogram_TVALID;
output   symbol_histogram_TREADY;
output   encoding_TVALID;
input   encoding_TREADY;

 reg    ap_rst_n_inv;
wire    ap_start;
wire    ap_ready;
wire    ap_done;
wire    ap_idle;
wire   [8:0] filtered_value_V_i_q0;
wire   [8:0] filtered_value_V_t_q0;
wire   [31:0] filtered_frequency_V_i_q0;
wire   [31:0] filtered_frequency_V_t_q0;
wire   [8:0] sorted_0_i_q0;
wire   [8:0] sorted_0_t_q0;
wire   [31:0] sorted_1_i_q0;
wire   [31:0] sorted_1_t_q0;
wire   [8:0] sorted_copy2_value_V_i_q0;
wire   [8:0] sorted_copy2_value_V_t_q0;
wire   [8:0] parent_V_i_q0;
wire   [8:0] parent_V_i_q1;
wire   [8:0] parent_V_t_q0;
wire   [8:0] parent_V_t_q1;
wire   [8:0] left_V_i_q0;
wire   [8:0] left_V_i_q1;
wire   [8:0] left_V_t_q0;
wire   [8:0] left_V_t_q1;
wire   [8:0] right_V_i_q0;
wire   [8:0] right_V_i_q1;
wire   [8:0] right_V_t_q0;
wire   [8:0] right_V_t_q1;
wire   [0:0] stream_buffer_3_i_q0;
wire   [0:0] stream_buffer_3_t_q0;
wire   [0:0] stream_buffer_5_i_q0;
wire   [0:0] stream_buffer_5_t_q0;
wire   [0:0] stream_buffer_6_i_q0;
wire   [0:0] stream_buffer_6_t_q0;
wire   [8:0] length_histogram_V_i_q0;
wire   [8:0] length_histogram_V_t_q0;
wire   [8:0] truncated_length_his_i_q0;
wire   [8:0] truncated_length_his_i_q1;
wire   [8:0] truncated_length_his_t_q0;
wire   [8:0] truncated_length_his_t_q1;
wire   [8:0] truncated_length_his_1_i_q0;
wire   [8:0] truncated_length_his_1_t_q0;
wire   [4:0] symbol_bits_V_i_q0;
wire   [4:0] symbol_bits_V_t_q0;
wire    Loop_read_stream_pro_U0_ap_start;
wire    Loop_read_stream_pro_U0_ap_done;
wire    Loop_read_stream_pro_U0_ap_continue;
wire    Loop_read_stream_pro_U0_ap_idle;
wire    Loop_read_stream_pro_U0_ap_ready;
wire    Loop_read_stream_pro_U0_start_out;
wire    Loop_read_stream_pro_U0_start_write;
wire    Loop_read_stream_pro_U0_symbol_histogram_TREADY;
wire   [40:0] Loop_read_stream_pro_U0_stream_buffer_0_din;
wire    Loop_read_stream_pro_U0_stream_buffer_0_write;
wire   [7:0] Loop_read_stream_pro_U0_stream_buffer_1_address0;
wire    Loop_read_stream_pro_U0_stream_buffer_1_ce0;
wire    Loop_read_stream_pro_U0_stream_buffer_1_we0;
wire   [5:0] Loop_read_stream_pro_U0_stream_buffer_1_d0;
wire   [7:0] Loop_read_stream_pro_U0_stream_buffer_2_address0;
wire    Loop_read_stream_pro_U0_stream_buffer_2_ce0;
wire    Loop_read_stream_pro_U0_stream_buffer_2_we0;
wire   [5:0] Loop_read_stream_pro_U0_stream_buffer_2_d0;
wire   [7:0] Loop_read_stream_pro_U0_stream_buffer_3_address0;
wire    Loop_read_stream_pro_U0_stream_buffer_3_ce0;
wire    Loop_read_stream_pro_U0_stream_buffer_3_we0;
wire   [0:0] Loop_read_stream_pro_U0_stream_buffer_3_d0;
wire   [7:0] Loop_read_stream_pro_U0_stream_buffer_4_address0;
wire    Loop_read_stream_pro_U0_stream_buffer_4_ce0;
wire    Loop_read_stream_pro_U0_stream_buffer_4_we0;
wire   [0:0] Loop_read_stream_pro_U0_stream_buffer_4_d0;
wire   [7:0] Loop_read_stream_pro_U0_stream_buffer_5_address0;
wire    Loop_read_stream_pro_U0_stream_buffer_5_ce0;
wire    Loop_read_stream_pro_U0_stream_buffer_5_we0;
wire   [0:0] Loop_read_stream_pro_U0_stream_buffer_5_d0;
wire   [7:0] Loop_read_stream_pro_U0_stream_buffer_6_address0;
wire    Loop_read_stream_pro_U0_stream_buffer_6_ce0;
wire    Loop_read_stream_pro_U0_stream_buffer_6_we0;
wire   [0:0] Loop_read_stream_pro_U0_stream_buffer_6_d0;
wire    ap_channel_done_stream_buffer_6;
wire    Loop_read_stream_pro_U0_stream_buffer_6_full_n;
reg    ap_sync_reg_channel_write_stream_buffer_6;
wire    ap_sync_channel_write_stream_buffer_6;
wire    ap_channel_done_stream_buffer_5;
wire    Loop_read_stream_pro_U0_stream_buffer_5_full_n;
reg    ap_sync_reg_channel_write_stream_buffer_5;
wire    ap_sync_channel_write_stream_buffer_5;
wire    ap_channel_done_stream_buffer_3;
wire    Loop_read_stream_pro_U0_stream_buffer_3_full_n;
reg    ap_sync_reg_channel_write_stream_buffer_3;
wire    ap_sync_channel_write_stream_buffer_3;
wire    filter_U0_ap_start;
wire    filter_U0_ap_done;
wire    filter_U0_ap_continue;
wire    filter_U0_ap_idle;
wire    filter_U0_ap_ready;
wire    filter_U0_start_out;
wire    filter_U0_start_write;
wire    filter_U0_in_data_V_read;
wire   [7:0] filter_U0_out_value_V_address0;
wire    filter_U0_out_value_V_ce0;
wire    filter_U0_out_value_V_we0;
wire   [8:0] filter_U0_out_value_V_d0;
wire   [7:0] filter_U0_out_frequency_V_address0;
wire    filter_U0_out_frequency_V_ce0;
wire    filter_U0_out_frequency_V_we0;
wire   [31:0] filter_U0_out_frequency_V_d0;
wire   [8:0] filter_U0_n_out_din;
wire    filter_U0_n_out_write;
wire    ap_channel_done_filtered_frequency_V;
wire    filter_U0_out_frequency_V_full_n;
reg    ap_sync_reg_channel_write_filtered_frequency_V;
wire    ap_sync_channel_write_filtered_frequency_V;
wire    ap_channel_done_filtered_value_V;
wire    filter_U0_out_value_V_full_n;
reg    ap_sync_reg_channel_write_filtered_value_V;
wire    ap_sync_channel_write_filtered_value_V;
wire    Block_huffman_encodi_U0_ap_start;
wire    Block_huffman_encodi_U0_ap_done;
wire    Block_huffman_encodi_U0_ap_continue;
wire    Block_huffman_encodi_U0_ap_idle;
wire    Block_huffman_encodi_U0_ap_ready;
wire    Block_huffman_encodi_U0_n_read;
wire   [8:0] Block_huffman_encodi_U0_n_out_din;
wire    Block_huffman_encodi_U0_n_out_write;
wire   [8:0] Block_huffman_encodi_U0_ap_return;
wire    ap_channel_done_extLd8_loc_channel;
wire    extLd8_loc_channel_full_n;
wire    sort_U0_ap_start;
wire    sort_U0_ap_done;
wire    sort_U0_ap_continue;
wire    sort_U0_ap_idle;
wire    sort_U0_ap_ready;
wire   [7:0] sort_U0_in_value_V_address0;
wire    sort_U0_in_value_V_ce0;
wire   [7:0] sort_U0_in_frequency_V_address0;
wire    sort_U0_in_frequency_V_ce0;
wire   [7:0] sort_U0_out_value_V_address0;
wire    sort_U0_out_value_V_ce0;
wire    sort_U0_out_value_V_we0;
wire   [8:0] sort_U0_out_value_V_d0;
wire   [7:0] sort_U0_out_frequency_V_address0;
wire    sort_U0_out_frequency_V_ce0;
wire    sort_U0_out_frequency_V_we0;
wire   [31:0] sort_U0_out_frequency_V_d0;
wire    ap_channel_done_sorted_1;
wire    sort_U0_out_frequency_V_full_n;
reg    ap_sync_reg_channel_write_sorted_1;
wire    ap_sync_channel_write_sorted_1;
wire    ap_channel_done_sorted_0;
wire    sort_U0_out_value_V_full_n;
reg    ap_sync_reg_channel_write_sorted_0;
wire    ap_sync_channel_write_sorted_0;
wire    Loop_copy_sorted_pro_U0_ap_start;
wire    Loop_copy_sorted_pro_U0_start_full_n;
wire    Loop_copy_sorted_pro_U0_ap_done;
wire    Loop_copy_sorted_pro_U0_ap_continue;
wire    Loop_copy_sorted_pro_U0_ap_idle;
wire    Loop_copy_sorted_pro_U0_ap_ready;
wire    Loop_copy_sorted_pro_U0_start_out;
wire    Loop_copy_sorted_pro_U0_start_write;
wire    Loop_copy_sorted_pro_U0_n_read;
wire   [7:0] Loop_copy_sorted_pro_U0_sorted_0_address0;
wire    Loop_copy_sorted_pro_U0_sorted_0_ce0;
wire   [8:0] Loop_copy_sorted_pro_U0_sorted_copy1_0_din;
wire    Loop_copy_sorted_pro_U0_sorted_copy1_0_write;
wire   [7:0] Loop_copy_sorted_pro_U0_sorted_1_address0;
wire    Loop_copy_sorted_pro_U0_sorted_1_ce0;
wire   [31:0] Loop_copy_sorted_pro_U0_sorted_copy1_1_din;
wire    Loop_copy_sorted_pro_U0_sorted_copy1_1_write;
wire   [7:0] Loop_copy_sorted_pro_U0_sorted_copy2_value_V_address0;
wire    Loop_copy_sorted_pro_U0_sorted_copy2_value_V_ce0;
wire    Loop_copy_sorted_pro_U0_sorted_copy2_value_V_we0;
wire   [8:0] Loop_copy_sorted_pro_U0_sorted_copy2_value_V_d0;
wire   [8:0] Loop_copy_sorted_pro_U0_val_assign6_out_out_din;
wire    Loop_copy_sorted_pro_U0_val_assign6_out_out_write;
wire   [8:0] Loop_copy_sorted_pro_U0_extLd_out_out_din;
wire    Loop_copy_sorted_pro_U0_extLd_out_out_write;
wire   [8:0] Loop_copy_sorted_pro_U0_extLd_out_out1_din;
wire    Loop_copy_sorted_pro_U0_extLd_out_out1_write;
wire    ap_channel_done_sorted_copy2_value_V;
wire    Loop_copy_sorted_pro_U0_sorted_copy2_value_V_full_n;
wire    create_tree_U0_ap_start;
wire    create_tree_U0_ap_done;
wire    create_tree_U0_ap_continue;
wire    create_tree_U0_ap_idle;
wire    create_tree_U0_ap_ready;
wire    create_tree_U0_in_value_V_read;
wire    create_tree_U0_in_frequency_V_read;
wire    create_tree_U0_extLd_loc_read;
wire   [7:0] create_tree_U0_parent_V_address0;
wire    create_tree_U0_parent_V_ce0;
wire    create_tree_U0_parent_V_we0;
wire   [8:0] create_tree_U0_parent_V_d0;
wire   [7:0] create_tree_U0_left_V_address0;
wire    create_tree_U0_left_V_ce0;
wire    create_tree_U0_left_V_we0;
wire   [8:0] create_tree_U0_left_V_d0;
wire   [7:0] create_tree_U0_right_V_address0;
wire    create_tree_U0_right_V_ce0;
wire    create_tree_U0_right_V_we0;
wire   [8:0] create_tree_U0_right_V_d0;
wire   [8:0] create_tree_U0_extLd_loc_out_din;
wire    create_tree_U0_extLd_loc_out_write;
wire    ap_channel_done_right_V;
wire    create_tree_U0_right_V_full_n;
reg    ap_sync_reg_channel_write_right_V;
wire    ap_sync_channel_write_right_V;
wire    ap_channel_done_left_V;
wire    create_tree_U0_left_V_full_n;
reg    ap_sync_reg_channel_write_left_V;
wire    ap_sync_channel_write_left_V;
wire    ap_channel_done_parent_V;
wire    create_tree_U0_parent_V_full_n;
reg    ap_sync_reg_channel_write_parent_V;
wire    ap_sync_channel_write_parent_V;
wire    compute_bit_length_U0_ap_start;
wire    compute_bit_length_U0_ap_done;
wire    compute_bit_length_U0_ap_continue;
wire    compute_bit_length_U0_ap_idle;
wire    compute_bit_length_U0_ap_ready;
wire   [7:0] compute_bit_length_U0_parent_V_address0;
wire    compute_bit_length_U0_parent_V_ce0;
wire   [7:0] compute_bit_length_U0_parent_V_address1;
wire    compute_bit_length_U0_parent_V_ce1;
wire   [7:0] compute_bit_length_U0_left_V_address0;
wire    compute_bit_length_U0_left_V_ce0;
wire   [7:0] compute_bit_length_U0_left_V_address1;
wire    compute_bit_length_U0_left_V_ce1;
wire   [7:0] compute_bit_length_U0_right_V_address0;
wire    compute_bit_length_U0_right_V_ce0;
wire   [7:0] compute_bit_length_U0_right_V_address1;
wire    compute_bit_length_U0_right_V_ce1;
wire    compute_bit_length_U0_extLd_loc_read;
wire   [5:0] compute_bit_length_U0_length_histogram_V_address0;
wire    compute_bit_length_U0_length_histogram_V_ce0;
wire    compute_bit_length_U0_length_histogram_V_we0;
wire   [8:0] compute_bit_length_U0_length_histogram_V_d0;
wire    ap_channel_done_length_histogram_V;
wire    compute_bit_length_U0_length_histogram_V_full_n;
wire    truncate_tree_U0_ap_start;
wire    truncate_tree_U0_ap_done;
wire    truncate_tree_U0_ap_continue;
wire    truncate_tree_U0_ap_idle;
wire    truncate_tree_U0_ap_ready;
wire   [5:0] truncate_tree_U0_input_length_histogram_V_address0;
wire    truncate_tree_U0_input_length_histogram_V_ce0;
wire   [5:0] truncate_tree_U0_output_length_histogram1_V_address0;
wire    truncate_tree_U0_output_length_histogram1_V_ce0;
wire    truncate_tree_U0_output_length_histogram1_V_we0;
wire   [8:0] truncate_tree_U0_output_length_histogram1_V_d0;
wire   [5:0] truncate_tree_U0_output_length_histogram1_V_address1;
wire    truncate_tree_U0_output_length_histogram1_V_ce1;
wire    truncate_tree_U0_output_length_histogram1_V_we1;
wire   [8:0] truncate_tree_U0_output_length_histogram1_V_d1;
wire   [5:0] truncate_tree_U0_output_length_histogram2_V_address0;
wire    truncate_tree_U0_output_length_histogram2_V_ce0;
wire    truncate_tree_U0_output_length_histogram2_V_we0;
wire   [8:0] truncate_tree_U0_output_length_histogram2_V_d0;
wire    ap_channel_done_truncated_length_his_1;
wire    truncate_tree_U0_output_length_histogram2_V_full_n;
reg    ap_sync_reg_channel_write_truncated_length_his_1;
wire    ap_sync_channel_write_truncated_length_his_1;
wire    ap_channel_done_truncated_length_his;
wire    truncate_tree_U0_output_length_histogram1_V_full_n;
reg    ap_sync_reg_channel_write_truncated_length_his;
wire    ap_sync_channel_write_truncated_length_his;
wire    canonize_tree_U0_ap_start;
wire    canonize_tree_U0_ap_done;
wire    canonize_tree_U0_ap_continue;
wire    canonize_tree_U0_ap_idle;
wire    canonize_tree_U0_ap_ready;
wire   [7:0] canonize_tree_U0_sorted_value_V_address0;
wire    canonize_tree_U0_sorted_value_V_ce0;
wire    canonize_tree_U0_val_assign6_loc_read;
wire   [5:0] canonize_tree_U0_codeword_length_histogram_V_address0;
wire    canonize_tree_U0_codeword_length_histogram_V_ce0;
wire   [7:0] canonize_tree_U0_symbol_bits_V_address0;
wire    canonize_tree_U0_symbol_bits_V_ce0;
wire    canonize_tree_U0_symbol_bits_V_we0;
wire   [4:0] canonize_tree_U0_symbol_bits_V_d0;
wire    ap_channel_done_symbol_bits_V;
wire    canonize_tree_U0_symbol_bits_V_full_n;
wire    create_codeword_U0_ap_start;
wire    create_codeword_U0_ap_done;
wire    create_codeword_U0_ap_continue;
wire    create_codeword_U0_ap_idle;
wire    create_codeword_U0_ap_ready;
wire   [7:0] create_codeword_U0_symbol_bits_V_address0;
wire    create_codeword_U0_symbol_bits_V_ce0;
wire   [5:0] create_codeword_U0_codeword_length_histogram_V_address0;
wire    create_codeword_U0_codeword_length_histogram_V_ce0;
wire   [7:0] create_codeword_U0_stream_buffer_user_V_address0;
wire    create_codeword_U0_stream_buffer_user_V_ce0;
wire   [7:0] create_codeword_U0_stream_buffer_id_V_address0;
wire    create_codeword_U0_stream_buffer_id_V_ce0;
wire   [7:0] create_codeword_U0_stream_buffer_dest_V_address0;
wire    create_codeword_U0_stream_buffer_dest_V_ce0;
wire   [31:0] create_codeword_U0_encoding_TDATA;
wire    create_codeword_U0_encoding_TVALID;
wire   [3:0] create_codeword_U0_encoding_TKEEP;
wire   [3:0] create_codeword_U0_encoding_TSTRB;
wire   [0:0] create_codeword_U0_encoding_TUSER;
wire   [0:0] create_codeword_U0_encoding_TLAST;
wire   [0:0] create_codeword_U0_encoding_TID;
wire   [0:0] create_codeword_U0_encoding_TDEST;
wire    ap_sync_continue;
wire    Block_proc_U0_ap_start;
wire    Block_proc_U0_ap_done;
wire    Block_proc_U0_ap_continue;
wire    Block_proc_U0_ap_idle;
wire    Block_proc_U0_ap_ready;
wire    Block_proc_U0_extLd_loc_read;
wire   [31:0] Block_proc_U0_num_nonzero_symbols;
wire    Block_proc_U0_num_nonzero_symbols_ap_vld;
wire    stream_buffer_3_i_full_n;
wire    stream_buffer_3_t_empty_n;
wire    stream_buffer_5_i_full_n;
wire    stream_buffer_5_t_empty_n;
wire    stream_buffer_6_i_full_n;
wire    stream_buffer_6_t_empty_n;
wire    filtered_value_V_i_full_n;
wire    filtered_value_V_t_empty_n;
wire    filtered_frequency_V_i_full_n;
wire    filtered_frequency_V_t_empty_n;
wire    sorted_0_i_full_n;
wire    sorted_0_t_empty_n;
wire    sorted_1_i_full_n;
wire    sorted_1_t_empty_n;
wire    sorted_copy2_value_V_i_full_n;
wire    sorted_copy2_value_V_t_empty_n;
wire    parent_V_i_full_n;
wire    parent_V_t_empty_n;
wire   [8:0] parent_V_t_d1;
wire    parent_V_t_we1;
wire    left_V_i_full_n;
wire    left_V_t_empty_n;
wire   [8:0] left_V_t_d1;
wire    left_V_t_we1;
wire    right_V_i_full_n;
wire    right_V_t_empty_n;
wire   [8:0] right_V_t_d1;
wire    right_V_t_we1;
wire    length_histogram_V_i_full_n;
wire    length_histogram_V_t_empty_n;
wire    truncated_length_his_i_full_n;
wire    truncated_length_his_t_empty_n;
wire    truncated_length_his_1_i_full_n;
wire    truncated_length_his_1_t_empty_n;
wire    symbol_bits_V_i_full_n;
wire    symbol_bits_V_t_empty_n;
wire    stream_buffer_0_chan_full_n;
wire   [40:0] stream_buffer_0_chan_dout;
wire    stream_buffer_0_chan_empty_n;
wire    n_c_full_n;
wire   [8:0] n_c_dout;
wire    n_c_empty_n;
wire    n_c18_full_n;
wire   [8:0] n_c18_dout;
wire    n_c18_empty_n;
wire   [8:0] extLd8_loc_channel_dout;
wire    extLd8_loc_channel_empty_n;
wire    sorted_copy1_0_chann_full_n;
wire   [8:0] sorted_copy1_0_chann_dout;
wire    sorted_copy1_0_chann_empty_n;
wire    sorted_copy1_1_chann_full_n;
wire   [31:0] sorted_copy1_1_chann_dout;
wire    sorted_copy1_1_chann_empty_n;
wire    val_assign6_loc_c_full_n;
wire   [8:0] val_assign6_loc_c_dout;
wire    val_assign6_loc_c_empty_n;
wire    extLd_loc_c_full_n;
wire   [8:0] extLd_loc_c_dout;
wire    extLd_loc_c_empty_n;
wire    extLd_loc_c19_full_n;
wire   [8:0] extLd_loc_c19_dout;
wire    extLd_loc_c19_empty_n;
wire    extLd_loc_c20_full_n;
wire   [8:0] extLd_loc_c20_dout;
wire    extLd_loc_c20_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
wire   [0:0] start_for_filter_U0_din;
wire    start_for_filter_U0_full_n;
wire   [0:0] start_for_filter_U0_dout;
wire    start_for_filter_U0_empty_n;
wire   [0:0] start_for_Block_huffman_encodi_U0_din;
wire    start_for_Block_huffman_encodi_U0_full_n;
wire   [0:0] start_for_Block_huffman_encodi_U0_dout;
wire    start_for_Block_huffman_encodi_U0_empty_n;
wire    Block_huffman_encodi_U0_start_full_n;
wire    Block_huffman_encodi_U0_start_write;
wire    sort_U0_start_full_n;
wire    sort_U0_start_write;
wire   [0:0] start_for_create_tree_U0_din;
wire    start_for_create_tree_U0_full_n;
wire   [0:0] start_for_create_tree_U0_dout;
wire    start_for_create_tree_U0_empty_n;
wire   [0:0] start_for_Block_proc_U0_din;
wire    start_for_Block_proc_U0_full_n;
wire   [0:0] start_for_Block_proc_U0_dout;
wire    start_for_Block_proc_U0_empty_n;
wire    create_tree_U0_start_full_n;
wire    create_tree_U0_start_write;
wire    compute_bit_length_U0_start_full_n;
wire    compute_bit_length_U0_start_write;
wire    truncate_tree_U0_start_full_n;
wire    truncate_tree_U0_start_write;
wire    canonize_tree_U0_start_full_n;
wire    canonize_tree_U0_start_write;
wire    create_codeword_U0_start_full_n;
wire    create_codeword_U0_start_write;
wire    Block_proc_U0_start_full_n;
wire    Block_proc_U0_start_write;

// power-on initialization
initial begin
#0 ap_sync_reg_channel_write_stream_buffer_6 = 1'b0;
#0 ap_sync_reg_channel_write_stream_buffer_5 = 1'b0;
#0 ap_sync_reg_channel_write_stream_buffer_3 = 1'b0;
#0 ap_sync_reg_channel_write_filtered_frequency_V = 1'b0;
#0 ap_sync_reg_channel_write_filtered_value_V = 1'b0;
#0 ap_sync_reg_channel_write_sorted_1 = 1'b0;
#0 ap_sync_reg_channel_write_sorted_0 = 1'b0;
#0 ap_sync_reg_channel_write_right_V = 1'b0;
#0 ap_sync_reg_channel_write_left_V = 1'b0;
#0 ap_sync_reg_channel_write_parent_V = 1'b0;
#0 ap_sync_reg_channel_write_truncated_length_his_1 = 1'b0;
#0 ap_sync_reg_channel_write_truncated_length_his = 1'b0;
end

huffman_encoding_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
huffman_encoding_AXILiteS_s_axi_U(
    .AWVALID(s_axi_AXILiteS_AWVALID),
    .AWREADY(s_axi_AXILiteS_AWREADY),
    .AWADDR(s_axi_AXILiteS_AWADDR),
    .WVALID(s_axi_AXILiteS_WVALID),
    .WREADY(s_axi_AXILiteS_WREADY),
    .WDATA(s_axi_AXILiteS_WDATA),
    .WSTRB(s_axi_AXILiteS_WSTRB),
    .ARVALID(s_axi_AXILiteS_ARVALID),
    .ARREADY(s_axi_AXILiteS_ARREADY),
    .ARADDR(s_axi_AXILiteS_ARADDR),
    .RVALID(s_axi_AXILiteS_RVALID),
    .RREADY(s_axi_AXILiteS_RREADY),
    .RDATA(s_axi_AXILiteS_RDATA),
    .RRESP(s_axi_AXILiteS_RRESP),
    .BVALID(s_axi_AXILiteS_BVALID),
    .BREADY(s_axi_AXILiteS_BREADY),
    .BRESP(s_axi_AXILiteS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .num_nonzero_symbols(Block_proc_U0_num_nonzero_symbols),
    .num_nonzero_symbols_ap_vld(Block_proc_U0_num_nonzero_symbols_ap_vld)
);

huffman_encoding_mb6 #(
    .DataWidth( 9 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
filtered_value_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(filter_U0_out_value_V_address0),
    .i_ce0(filter_U0_out_value_V_ce0),
    .i_we0(filter_U0_out_value_V_we0),
    .i_d0(filter_U0_out_value_V_d0),
    .i_q0(filtered_value_V_i_q0),
    .t_address0(sort_U0_in_value_V_address0),
    .t_ce0(sort_U0_in_value_V_ce0),
    .t_we0(1'b0),
    .t_d0(9'd0),
    .t_q0(filtered_value_V_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(filtered_value_V_i_full_n),
    .i_write(ap_channel_done_filtered_value_V),
    .t_empty_n(filtered_value_V_t_empty_n),
    .t_read(sort_U0_ap_ready)
);

huffman_encoding_ncg #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
filtered_frequency_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(filter_U0_out_frequency_V_address0),
    .i_ce0(filter_U0_out_frequency_V_ce0),
    .i_we0(filter_U0_out_frequency_V_we0),
    .i_d0(filter_U0_out_frequency_V_d0),
    .i_q0(filtered_frequency_V_i_q0),
    .t_address0(sort_U0_in_frequency_V_address0),
    .t_ce0(sort_U0_in_frequency_V_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(filtered_frequency_V_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(filtered_frequency_V_i_full_n),
    .i_write(ap_channel_done_filtered_frequency_V),
    .t_empty_n(filtered_frequency_V_t_empty_n),
    .t_read(sort_U0_ap_ready)
);

huffman_encoding_mb6 #(
    .DataWidth( 9 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
sorted_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(sort_U0_out_value_V_address0),
    .i_ce0(sort_U0_out_value_V_ce0),
    .i_we0(sort_U0_out_value_V_we0),
    .i_d0(sort_U0_out_value_V_d0),
    .i_q0(sorted_0_i_q0),
    .t_address0(Loop_copy_sorted_pro_U0_sorted_0_address0),
    .t_ce0(Loop_copy_sorted_pro_U0_sorted_0_ce0),
    .t_we0(1'b0),
    .t_d0(9'd0),
    .t_q0(sorted_0_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(sorted_0_i_full_n),
    .i_write(ap_channel_done_sorted_0),
    .t_empty_n(sorted_0_t_empty_n),
    .t_read(Loop_copy_sorted_pro_U0_ap_ready)
);

huffman_encoding_ncg #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
sorted_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(sort_U0_out_frequency_V_address0),
    .i_ce0(sort_U0_out_frequency_V_ce0),
    .i_we0(sort_U0_out_frequency_V_we0),
    .i_d0(sort_U0_out_frequency_V_d0),
    .i_q0(sorted_1_i_q0),
    .t_address0(Loop_copy_sorted_pro_U0_sorted_1_address0),
    .t_ce0(Loop_copy_sorted_pro_U0_sorted_1_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(sorted_1_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(sorted_1_i_full_n),
    .i_write(ap_channel_done_sorted_1),
    .t_empty_n(sorted_1_t_empty_n),
    .t_read(Loop_copy_sorted_pro_U0_ap_ready)
);

huffman_encoding_mb6 #(
    .DataWidth( 9 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
sorted_copy2_value_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(Loop_copy_sorted_pro_U0_sorted_copy2_value_V_address0),
    .i_ce0(Loop_copy_sorted_pro_U0_sorted_copy2_value_V_ce0),
    .i_we0(Loop_copy_sorted_pro_U0_sorted_copy2_value_V_we0),
    .i_d0(Loop_copy_sorted_pro_U0_sorted_copy2_value_V_d0),
    .i_q0(sorted_copy2_value_V_i_q0),
    .t_address0(canonize_tree_U0_sorted_value_V_address0),
    .t_ce0(canonize_tree_U0_sorted_value_V_ce0),
    .t_we0(1'b0),
    .t_d0(9'd0),
    .t_q0(sorted_copy2_value_V_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(sorted_copy2_value_V_i_full_n),
    .i_write(Loop_copy_sorted_pro_U0_ap_done),
    .t_empty_n(sorted_copy2_value_V_t_empty_n),
    .t_read(canonize_tree_U0_ap_ready)
);

huffman_encoding_rcU #(
    .DataWidth( 9 ),
    .AddressRange( 255 ),
    .AddressWidth( 8 ))
parent_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(create_tree_U0_parent_V_address0),
    .i_ce0(create_tree_U0_parent_V_ce0),
    .i_we0(create_tree_U0_parent_V_we0),
    .i_d0(create_tree_U0_parent_V_d0),
    .i_q0(parent_V_i_q0),
    .i_address1(8'd0),
    .i_ce1(1'b0),
    .i_q1(parent_V_i_q1),
    .t_address0(compute_bit_length_U0_parent_V_address0),
    .t_ce0(compute_bit_length_U0_parent_V_ce0),
    .t_we0(1'b0),
    .t_d0(9'd0),
    .t_q0(parent_V_t_q0),
    .t_address1(compute_bit_length_U0_parent_V_address1),
    .t_ce1(compute_bit_length_U0_parent_V_ce1),
    .t_q1(parent_V_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(parent_V_i_full_n),
    .i_write(ap_channel_done_parent_V),
    .t_empty_n(parent_V_t_empty_n),
    .t_read(compute_bit_length_U0_ap_ready)
);

huffman_encoding_rcU #(
    .DataWidth( 9 ),
    .AddressRange( 255 ),
    .AddressWidth( 8 ))
left_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(create_tree_U0_left_V_address0),
    .i_ce0(create_tree_U0_left_V_ce0),
    .i_we0(create_tree_U0_left_V_we0),
    .i_d0(create_tree_U0_left_V_d0),
    .i_q0(left_V_i_q0),
    .i_address1(8'd0),
    .i_ce1(1'b0),
    .i_q1(left_V_i_q1),
    .t_address0(compute_bit_length_U0_left_V_address0),
    .t_ce0(compute_bit_length_U0_left_V_ce0),
    .t_we0(1'b0),
    .t_d0(9'd0),
    .t_q0(left_V_t_q0),
    .t_address1(compute_bit_length_U0_left_V_address1),
    .t_ce1(compute_bit_length_U0_left_V_ce1),
    .t_q1(left_V_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(left_V_i_full_n),
    .i_write(ap_channel_done_left_V),
    .t_empty_n(left_V_t_empty_n),
    .t_read(compute_bit_length_U0_ap_ready)
);

huffman_encoding_rcU #(
    .DataWidth( 9 ),
    .AddressRange( 255 ),
    .AddressWidth( 8 ))
right_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(create_tree_U0_right_V_address0),
    .i_ce0(create_tree_U0_right_V_ce0),
    .i_we0(create_tree_U0_right_V_we0),
    .i_d0(create_tree_U0_right_V_d0),
    .i_q0(right_V_i_q0),
    .i_address1(8'd0),
    .i_ce1(1'b0),
    .i_q1(right_V_i_q1),
    .t_address0(compute_bit_length_U0_right_V_address0),
    .t_ce0(compute_bit_length_U0_right_V_ce0),
    .t_we0(1'b0),
    .t_d0(9'd0),
    .t_q0(right_V_t_q0),
    .t_address1(compute_bit_length_U0_right_V_address1),
    .t_ce1(compute_bit_length_U0_right_V_ce1),
    .t_q1(right_V_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(right_V_i_full_n),
    .i_write(ap_channel_done_right_V),
    .t_empty_n(right_V_t_empty_n),
    .t_read(compute_bit_length_U0_ap_ready)
);

huffman_encoding_udo #(
    .DataWidth( 6 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
stream_buffer_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(Loop_read_stream_pro_U0_stream_buffer_1_address0),
    .ce0(Loop_read_stream_pro_U0_stream_buffer_1_ce0),
    .we0(Loop_read_stream_pro_U0_stream_buffer_1_we0),
    .d0(Loop_read_stream_pro_U0_stream_buffer_1_d0)
);

huffman_encoding_udo #(
    .DataWidth( 6 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
stream_buffer_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(Loop_read_stream_pro_U0_stream_buffer_2_address0),
    .ce0(Loop_read_stream_pro_U0_stream_buffer_2_ce0),
    .we0(Loop_read_stream_pro_U0_stream_buffer_2_we0),
    .d0(Loop_read_stream_pro_U0_stream_buffer_2_d0)
);

huffman_encoding_wdI #(
    .DataWidth( 1 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
stream_buffer_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(Loop_read_stream_pro_U0_stream_buffer_3_address0),
    .i_ce0(Loop_read_stream_pro_U0_stream_buffer_3_ce0),
    .i_we0(Loop_read_stream_pro_U0_stream_buffer_3_we0),
    .i_d0(Loop_read_stream_pro_U0_stream_buffer_3_d0),
    .i_q0(stream_buffer_3_i_q0),
    .t_address0(create_codeword_U0_stream_buffer_user_V_address0),
    .t_ce0(create_codeword_U0_stream_buffer_user_V_ce0),
    .t_we0(1'b0),
    .t_d0(1'd0),
    .t_q0(stream_buffer_3_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(stream_buffer_3_i_full_n),
    .i_write(ap_channel_done_stream_buffer_3),
    .t_empty_n(stream_buffer_3_t_empty_n),
    .t_read(create_codeword_U0_ap_ready)
);

huffman_encoding_xdS #(
    .DataWidth( 1 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
stream_buffer_4_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(Loop_read_stream_pro_U0_stream_buffer_4_address0),
    .ce0(Loop_read_stream_pro_U0_stream_buffer_4_ce0),
    .we0(Loop_read_stream_pro_U0_stream_buffer_4_we0),
    .d0(Loop_read_stream_pro_U0_stream_buffer_4_d0)
);

huffman_encoding_wdI #(
    .DataWidth( 1 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
stream_buffer_5_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(Loop_read_stream_pro_U0_stream_buffer_5_address0),
    .i_ce0(Loop_read_stream_pro_U0_stream_buffer_5_ce0),
    .i_we0(Loop_read_stream_pro_U0_stream_buffer_5_we0),
    .i_d0(Loop_read_stream_pro_U0_stream_buffer_5_d0),
    .i_q0(stream_buffer_5_i_q0),
    .t_address0(create_codeword_U0_stream_buffer_id_V_address0),
    .t_ce0(create_codeword_U0_stream_buffer_id_V_ce0),
    .t_we0(1'b0),
    .t_d0(1'd0),
    .t_q0(stream_buffer_5_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(stream_buffer_5_i_full_n),
    .i_write(ap_channel_done_stream_buffer_5),
    .t_empty_n(stream_buffer_5_t_empty_n),
    .t_read(create_codeword_U0_ap_ready)
);

huffman_encoding_wdI #(
    .DataWidth( 1 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
stream_buffer_6_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(Loop_read_stream_pro_U0_stream_buffer_6_address0),
    .i_ce0(Loop_read_stream_pro_U0_stream_buffer_6_ce0),
    .i_we0(Loop_read_stream_pro_U0_stream_buffer_6_we0),
    .i_d0(Loop_read_stream_pro_U0_stream_buffer_6_d0),
    .i_q0(stream_buffer_6_i_q0),
    .t_address0(create_codeword_U0_stream_buffer_dest_V_address0),
    .t_ce0(create_codeword_U0_stream_buffer_dest_V_ce0),
    .t_we0(1'b0),
    .t_d0(1'd0),
    .t_q0(stream_buffer_6_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(stream_buffer_6_i_full_n),
    .i_write(ap_channel_done_stream_buffer_6),
    .t_empty_n(stream_buffer_6_t_empty_n),
    .t_read(create_codeword_U0_ap_ready)
);

huffman_encoding_Aem #(
    .DataWidth( 9 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
length_histogram_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(compute_bit_length_U0_length_histogram_V_address0),
    .i_ce0(compute_bit_length_U0_length_histogram_V_ce0),
    .i_we0(compute_bit_length_U0_length_histogram_V_we0),
    .i_d0(compute_bit_length_U0_length_histogram_V_d0),
    .i_q0(length_histogram_V_i_q0),
    .t_address0(truncate_tree_U0_input_length_histogram_V_address0),
    .t_ce0(truncate_tree_U0_input_length_histogram_V_ce0),
    .t_we0(1'b0),
    .t_d0(9'd0),
    .t_q0(length_histogram_V_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(length_histogram_V_i_full_n),
    .i_write(compute_bit_length_U0_ap_done),
    .t_empty_n(length_histogram_V_t_empty_n),
    .t_read(truncate_tree_U0_ap_ready)
);

huffman_encoding_Bew #(
    .DataWidth( 9 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
truncated_length_his_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(truncate_tree_U0_output_length_histogram1_V_address0),
    .i_ce0(truncate_tree_U0_output_length_histogram1_V_ce0),
    .i_we0(truncate_tree_U0_output_length_histogram1_V_we0),
    .i_d0(truncate_tree_U0_output_length_histogram1_V_d0),
    .i_q0(truncated_length_his_i_q0),
    .i_address1(truncate_tree_U0_output_length_histogram1_V_address1),
    .i_ce1(truncate_tree_U0_output_length_histogram1_V_ce1),
    .i_we1(truncate_tree_U0_output_length_histogram1_V_we1),
    .i_d1(truncate_tree_U0_output_length_histogram1_V_d1),
    .i_q1(truncated_length_his_i_q1),
    .t_address0(canonize_tree_U0_codeword_length_histogram_V_address0),
    .t_ce0(canonize_tree_U0_codeword_length_histogram_V_ce0),
    .t_we0(1'b0),
    .t_d0(9'd0),
    .t_q0(truncated_length_his_t_q0),
    .t_address1(6'd0),
    .t_ce1(1'b0),
    .t_we1(1'b0),
    .t_d1(9'd0),
    .t_q1(truncated_length_his_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(truncated_length_his_i_full_n),
    .i_write(ap_channel_done_truncated_length_his),
    .t_empty_n(truncated_length_his_t_empty_n),
    .t_read(canonize_tree_U0_ap_ready)
);

huffman_encoding_Aem #(
    .DataWidth( 9 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
truncated_length_his_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(truncate_tree_U0_output_length_histogram2_V_address0),
    .i_ce0(truncate_tree_U0_output_length_histogram2_V_ce0),
    .i_we0(truncate_tree_U0_output_length_histogram2_V_we0),
    .i_d0(truncate_tree_U0_output_length_histogram2_V_d0),
    .i_q0(truncated_length_his_1_i_q0),
    .t_address0(create_codeword_U0_codeword_length_histogram_V_address0),
    .t_ce0(create_codeword_U0_codeword_length_histogram_V_ce0),
    .t_we0(1'b0),
    .t_d0(9'd0),
    .t_q0(truncated_length_his_1_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(truncated_length_his_1_i_full_n),
    .i_write(ap_channel_done_truncated_length_his_1),
    .t_empty_n(truncated_length_his_1_t_empty_n),
    .t_read(create_codeword_U0_ap_ready)
);

huffman_encoding_DeQ #(
    .DataWidth( 5 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
symbol_bits_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(canonize_tree_U0_symbol_bits_V_address0),
    .i_ce0(canonize_tree_U0_symbol_bits_V_ce0),
    .i_we0(canonize_tree_U0_symbol_bits_V_we0),
    .i_d0(canonize_tree_U0_symbol_bits_V_d0),
    .i_q0(symbol_bits_V_i_q0),
    .t_address0(create_codeword_U0_symbol_bits_V_address0),
    .t_ce0(create_codeword_U0_symbol_bits_V_ce0),
    .t_we0(1'b0),
    .t_d0(5'd0),
    .t_q0(symbol_bits_V_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(symbol_bits_V_i_full_n),
    .i_write(canonize_tree_U0_ap_done),
    .t_empty_n(symbol_bits_V_t_empty_n),
    .t_read(create_codeword_U0_ap_ready)
);

Loop_read_stream_pro Loop_read_stream_pro_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Loop_read_stream_pro_U0_ap_start),
    .start_full_n(start_for_filter_U0_full_n),
    .ap_done(Loop_read_stream_pro_U0_ap_done),
    .ap_continue(Loop_read_stream_pro_U0_ap_continue),
    .ap_idle(Loop_read_stream_pro_U0_ap_idle),
    .ap_ready(Loop_read_stream_pro_U0_ap_ready),
    .start_out(Loop_read_stream_pro_U0_start_out),
    .start_write(Loop_read_stream_pro_U0_start_write),
    .symbol_histogram_TDATA(symbol_histogram_TDATA),
    .symbol_histogram_TVALID(symbol_histogram_TVALID),
    .symbol_histogram_TREADY(Loop_read_stream_pro_U0_symbol_histogram_TREADY),
    .symbol_histogram_TKEEP(symbol_histogram_TKEEP),
    .symbol_histogram_TSTRB(symbol_histogram_TSTRB),
    .symbol_histogram_TUSER(symbol_histogram_TUSER),
    .symbol_histogram_TLAST(symbol_histogram_TLAST),
    .symbol_histogram_TID(symbol_histogram_TID),
    .symbol_histogram_TDEST(symbol_histogram_TDEST),
    .stream_buffer_0_din(Loop_read_stream_pro_U0_stream_buffer_0_din),
    .stream_buffer_0_full_n(stream_buffer_0_chan_full_n),
    .stream_buffer_0_write(Loop_read_stream_pro_U0_stream_buffer_0_write),
    .stream_buffer_1_address0(Loop_read_stream_pro_U0_stream_buffer_1_address0),
    .stream_buffer_1_ce0(Loop_read_stream_pro_U0_stream_buffer_1_ce0),
    .stream_buffer_1_we0(Loop_read_stream_pro_U0_stream_buffer_1_we0),
    .stream_buffer_1_d0(Loop_read_stream_pro_U0_stream_buffer_1_d0),
    .stream_buffer_2_address0(Loop_read_stream_pro_U0_stream_buffer_2_address0),
    .stream_buffer_2_ce0(Loop_read_stream_pro_U0_stream_buffer_2_ce0),
    .stream_buffer_2_we0(Loop_read_stream_pro_U0_stream_buffer_2_we0),
    .stream_buffer_2_d0(Loop_read_stream_pro_U0_stream_buffer_2_d0),
    .stream_buffer_3_address0(Loop_read_stream_pro_U0_stream_buffer_3_address0),
    .stream_buffer_3_ce0(Loop_read_stream_pro_U0_stream_buffer_3_ce0),
    .stream_buffer_3_we0(Loop_read_stream_pro_U0_stream_buffer_3_we0),
    .stream_buffer_3_d0(Loop_read_stream_pro_U0_stream_buffer_3_d0),
    .stream_buffer_4_address0(Loop_read_stream_pro_U0_stream_buffer_4_address0),
    .stream_buffer_4_ce0(Loop_read_stream_pro_U0_stream_buffer_4_ce0),
    .stream_buffer_4_we0(Loop_read_stream_pro_U0_stream_buffer_4_we0),
    .stream_buffer_4_d0(Loop_read_stream_pro_U0_stream_buffer_4_d0),
    .stream_buffer_5_address0(Loop_read_stream_pro_U0_stream_buffer_5_address0),
    .stream_buffer_5_ce0(Loop_read_stream_pro_U0_stream_buffer_5_ce0),
    .stream_buffer_5_we0(Loop_read_stream_pro_U0_stream_buffer_5_we0),
    .stream_buffer_5_d0(Loop_read_stream_pro_U0_stream_buffer_5_d0),
    .stream_buffer_6_address0(Loop_read_stream_pro_U0_stream_buffer_6_address0),
    .stream_buffer_6_ce0(Loop_read_stream_pro_U0_stream_buffer_6_ce0),
    .stream_buffer_6_we0(Loop_read_stream_pro_U0_stream_buffer_6_we0),
    .stream_buffer_6_d0(Loop_read_stream_pro_U0_stream_buffer_6_d0)
);

filter filter_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(filter_U0_ap_start),
    .start_full_n(start_for_Block_huffman_encodi_U0_full_n),
    .ap_done(filter_U0_ap_done),
    .ap_continue(filter_U0_ap_continue),
    .ap_idle(filter_U0_ap_idle),
    .ap_ready(filter_U0_ap_ready),
    .start_out(filter_U0_start_out),
    .start_write(filter_U0_start_write),
    .in_data_V_dout(stream_buffer_0_chan_dout),
    .in_data_V_empty_n(stream_buffer_0_chan_empty_n),
    .in_data_V_read(filter_U0_in_data_V_read),
    .out_value_V_address0(filter_U0_out_value_V_address0),
    .out_value_V_ce0(filter_U0_out_value_V_ce0),
    .out_value_V_we0(filter_U0_out_value_V_we0),
    .out_value_V_d0(filter_U0_out_value_V_d0),
    .out_frequency_V_address0(filter_U0_out_frequency_V_address0),
    .out_frequency_V_ce0(filter_U0_out_frequency_V_ce0),
    .out_frequency_V_we0(filter_U0_out_frequency_V_we0),
    .out_frequency_V_d0(filter_U0_out_frequency_V_d0),
    .n_out_din(filter_U0_n_out_din),
    .n_out_full_n(n_c_full_n),
    .n_out_write(filter_U0_n_out_write)
);

Block_huffman_encodi Block_huffman_encodi_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Block_huffman_encodi_U0_ap_start),
    .ap_done(Block_huffman_encodi_U0_ap_done),
    .ap_continue(Block_huffman_encodi_U0_ap_continue),
    .ap_idle(Block_huffman_encodi_U0_ap_idle),
    .ap_ready(Block_huffman_encodi_U0_ap_ready),
    .n_dout(n_c_dout),
    .n_empty_n(n_c_empty_n),
    .n_read(Block_huffman_encodi_U0_n_read),
    .n_out_din(Block_huffman_encodi_U0_n_out_din),
    .n_out_full_n(n_c18_full_n),
    .n_out_write(Block_huffman_encodi_U0_n_out_write),
    .ap_return(Block_huffman_encodi_U0_ap_return)
);

sort sort_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(sort_U0_ap_start),
    .ap_done(sort_U0_ap_done),
    .ap_continue(sort_U0_ap_continue),
    .ap_idle(sort_U0_ap_idle),
    .ap_ready(sort_U0_ap_ready),
    .in_value_V_address0(sort_U0_in_value_V_address0),
    .in_value_V_ce0(sort_U0_in_value_V_ce0),
    .in_value_V_q0(filtered_value_V_t_q0),
    .in_frequency_V_address0(sort_U0_in_frequency_V_address0),
    .in_frequency_V_ce0(sort_U0_in_frequency_V_ce0),
    .in_frequency_V_q0(filtered_frequency_V_t_q0),
    .extLd8_loc_channel(extLd8_loc_channel_dout),
    .out_value_V_address0(sort_U0_out_value_V_address0),
    .out_value_V_ce0(sort_U0_out_value_V_ce0),
    .out_value_V_we0(sort_U0_out_value_V_we0),
    .out_value_V_d0(sort_U0_out_value_V_d0),
    .out_frequency_V_address0(sort_U0_out_frequency_V_address0),
    .out_frequency_V_ce0(sort_U0_out_frequency_V_ce0),
    .out_frequency_V_we0(sort_U0_out_frequency_V_we0),
    .out_frequency_V_d0(sort_U0_out_frequency_V_d0)
);

Loop_copy_sorted_pro Loop_copy_sorted_pro_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Loop_copy_sorted_pro_U0_ap_start),
    .start_full_n(Loop_copy_sorted_pro_U0_start_full_n),
    .ap_done(Loop_copy_sorted_pro_U0_ap_done),
    .ap_continue(Loop_copy_sorted_pro_U0_ap_continue),
    .ap_idle(Loop_copy_sorted_pro_U0_ap_idle),
    .ap_ready(Loop_copy_sorted_pro_U0_ap_ready),
    .start_out(Loop_copy_sorted_pro_U0_start_out),
    .start_write(Loop_copy_sorted_pro_U0_start_write),
    .n_dout(n_c18_dout),
    .n_empty_n(n_c18_empty_n),
    .n_read(Loop_copy_sorted_pro_U0_n_read),
    .sorted_0_address0(Loop_copy_sorted_pro_U0_sorted_0_address0),
    .sorted_0_ce0(Loop_copy_sorted_pro_U0_sorted_0_ce0),
    .sorted_0_q0(sorted_0_t_q0),
    .sorted_copy1_0_din(Loop_copy_sorted_pro_U0_sorted_copy1_0_din),
    .sorted_copy1_0_full_n(sorted_copy1_0_chann_full_n),
    .sorted_copy1_0_write(Loop_copy_sorted_pro_U0_sorted_copy1_0_write),
    .sorted_1_address0(Loop_copy_sorted_pro_U0_sorted_1_address0),
    .sorted_1_ce0(Loop_copy_sorted_pro_U0_sorted_1_ce0),
    .sorted_1_q0(sorted_1_t_q0),
    .sorted_copy1_1_din(Loop_copy_sorted_pro_U0_sorted_copy1_1_din),
    .sorted_copy1_1_full_n(sorted_copy1_1_chann_full_n),
    .sorted_copy1_1_write(Loop_copy_sorted_pro_U0_sorted_copy1_1_write),
    .sorted_copy2_value_V_address0(Loop_copy_sorted_pro_U0_sorted_copy2_value_V_address0),
    .sorted_copy2_value_V_ce0(Loop_copy_sorted_pro_U0_sorted_copy2_value_V_ce0),
    .sorted_copy2_value_V_we0(Loop_copy_sorted_pro_U0_sorted_copy2_value_V_we0),
    .sorted_copy2_value_V_d0(Loop_copy_sorted_pro_U0_sorted_copy2_value_V_d0),
    .val_assign6_out_out_din(Loop_copy_sorted_pro_U0_val_assign6_out_out_din),
    .val_assign6_out_out_full_n(val_assign6_loc_c_full_n),
    .val_assign6_out_out_write(Loop_copy_sorted_pro_U0_val_assign6_out_out_write),
    .extLd_out_out_din(Loop_copy_sorted_pro_U0_extLd_out_out_din),
    .extLd_out_out_full_n(extLd_loc_c_full_n),
    .extLd_out_out_write(Loop_copy_sorted_pro_U0_extLd_out_out_write),
    .extLd_out_out1_din(Loop_copy_sorted_pro_U0_extLd_out_out1_din),
    .extLd_out_out1_full_n(extLd_loc_c19_full_n),
    .extLd_out_out1_write(Loop_copy_sorted_pro_U0_extLd_out_out1_write)
);

create_tree create_tree_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(create_tree_U0_ap_start),
    .ap_done(create_tree_U0_ap_done),
    .ap_continue(create_tree_U0_ap_continue),
    .ap_idle(create_tree_U0_ap_idle),
    .ap_ready(create_tree_U0_ap_ready),
    .in_value_V_dout(sorted_copy1_0_chann_dout),
    .in_value_V_empty_n(sorted_copy1_0_chann_empty_n),
    .in_value_V_read(create_tree_U0_in_value_V_read),
    .in_frequency_V_dout(sorted_copy1_1_chann_dout),
    .in_frequency_V_empty_n(sorted_copy1_1_chann_empty_n),
    .in_frequency_V_read(create_tree_U0_in_frequency_V_read),
    .extLd_loc_dout(extLd_loc_c_dout),
    .extLd_loc_empty_n(extLd_loc_c_empty_n),
    .extLd_loc_read(create_tree_U0_extLd_loc_read),
    .parent_V_address0(create_tree_U0_parent_V_address0),
    .parent_V_ce0(create_tree_U0_parent_V_ce0),
    .parent_V_we0(create_tree_U0_parent_V_we0),
    .parent_V_d0(create_tree_U0_parent_V_d0),
    .left_V_address0(create_tree_U0_left_V_address0),
    .left_V_ce0(create_tree_U0_left_V_ce0),
    .left_V_we0(create_tree_U0_left_V_we0),
    .left_V_d0(create_tree_U0_left_V_d0),
    .right_V_address0(create_tree_U0_right_V_address0),
    .right_V_ce0(create_tree_U0_right_V_ce0),
    .right_V_we0(create_tree_U0_right_V_we0),
    .right_V_d0(create_tree_U0_right_V_d0),
    .extLd_loc_out_din(create_tree_U0_extLd_loc_out_din),
    .extLd_loc_out_full_n(extLd_loc_c20_full_n),
    .extLd_loc_out_write(create_tree_U0_extLd_loc_out_write)
);

compute_bit_length compute_bit_length_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(compute_bit_length_U0_ap_start),
    .ap_done(compute_bit_length_U0_ap_done),
    .ap_continue(compute_bit_length_U0_ap_continue),
    .ap_idle(compute_bit_length_U0_ap_idle),
    .ap_ready(compute_bit_length_U0_ap_ready),
    .parent_V_address0(compute_bit_length_U0_parent_V_address0),
    .parent_V_ce0(compute_bit_length_U0_parent_V_ce0),
    .parent_V_q0(parent_V_t_q0),
    .parent_V_address1(compute_bit_length_U0_parent_V_address1),
    .parent_V_ce1(compute_bit_length_U0_parent_V_ce1),
    .parent_V_q1(parent_V_t_q1),
    .left_V_address0(compute_bit_length_U0_left_V_address0),
    .left_V_ce0(compute_bit_length_U0_left_V_ce0),
    .left_V_q0(left_V_t_q0),
    .left_V_address1(compute_bit_length_U0_left_V_address1),
    .left_V_ce1(compute_bit_length_U0_left_V_ce1),
    .left_V_q1(left_V_t_q1),
    .right_V_address0(compute_bit_length_U0_right_V_address0),
    .right_V_ce0(compute_bit_length_U0_right_V_ce0),
    .right_V_q0(right_V_t_q0),
    .right_V_address1(compute_bit_length_U0_right_V_address1),
    .right_V_ce1(compute_bit_length_U0_right_V_ce1),
    .right_V_q1(right_V_t_q1),
    .extLd_loc_dout(extLd_loc_c20_dout),
    .extLd_loc_empty_n(extLd_loc_c20_empty_n),
    .extLd_loc_read(compute_bit_length_U0_extLd_loc_read),
    .length_histogram_V_address0(compute_bit_length_U0_length_histogram_V_address0),
    .length_histogram_V_ce0(compute_bit_length_U0_length_histogram_V_ce0),
    .length_histogram_V_we0(compute_bit_length_U0_length_histogram_V_we0),
    .length_histogram_V_d0(compute_bit_length_U0_length_histogram_V_d0)
);

truncate_tree truncate_tree_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(truncate_tree_U0_ap_start),
    .ap_done(truncate_tree_U0_ap_done),
    .ap_continue(truncate_tree_U0_ap_continue),
    .ap_idle(truncate_tree_U0_ap_idle),
    .ap_ready(truncate_tree_U0_ap_ready),
    .input_length_histogram_V_address0(truncate_tree_U0_input_length_histogram_V_address0),
    .input_length_histogram_V_ce0(truncate_tree_U0_input_length_histogram_V_ce0),
    .input_length_histogram_V_q0(length_histogram_V_t_q0),
    .output_length_histogram1_V_address0(truncate_tree_U0_output_length_histogram1_V_address0),
    .output_length_histogram1_V_ce0(truncate_tree_U0_output_length_histogram1_V_ce0),
    .output_length_histogram1_V_we0(truncate_tree_U0_output_length_histogram1_V_we0),
    .output_length_histogram1_V_d0(truncate_tree_U0_output_length_histogram1_V_d0),
    .output_length_histogram1_V_q0(truncated_length_his_i_q0),
    .output_length_histogram1_V_address1(truncate_tree_U0_output_length_histogram1_V_address1),
    .output_length_histogram1_V_ce1(truncate_tree_U0_output_length_histogram1_V_ce1),
    .output_length_histogram1_V_we1(truncate_tree_U0_output_length_histogram1_V_we1),
    .output_length_histogram1_V_d1(truncate_tree_U0_output_length_histogram1_V_d1),
    .output_length_histogram1_V_q1(truncated_length_his_i_q1),
    .output_length_histogram2_V_address0(truncate_tree_U0_output_length_histogram2_V_address0),
    .output_length_histogram2_V_ce0(truncate_tree_U0_output_length_histogram2_V_ce0),
    .output_length_histogram2_V_we0(truncate_tree_U0_output_length_histogram2_V_we0),
    .output_length_histogram2_V_d0(truncate_tree_U0_output_length_histogram2_V_d0)
);

canonize_tree canonize_tree_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(canonize_tree_U0_ap_start),
    .ap_done(canonize_tree_U0_ap_done),
    .ap_continue(canonize_tree_U0_ap_continue),
    .ap_idle(canonize_tree_U0_ap_idle),
    .ap_ready(canonize_tree_U0_ap_ready),
    .sorted_value_V_address0(canonize_tree_U0_sorted_value_V_address0),
    .sorted_value_V_ce0(canonize_tree_U0_sorted_value_V_ce0),
    .sorted_value_V_q0(sorted_copy2_value_V_t_q0),
    .val_assign6_loc_dout(val_assign6_loc_c_dout),
    .val_assign6_loc_empty_n(val_assign6_loc_c_empty_n),
    .val_assign6_loc_read(canonize_tree_U0_val_assign6_loc_read),
    .codeword_length_histogram_V_address0(canonize_tree_U0_codeword_length_histogram_V_address0),
    .codeword_length_histogram_V_ce0(canonize_tree_U0_codeword_length_histogram_V_ce0),
    .codeword_length_histogram_V_q0(truncated_length_his_t_q0),
    .symbol_bits_V_address0(canonize_tree_U0_symbol_bits_V_address0),
    .symbol_bits_V_ce0(canonize_tree_U0_symbol_bits_V_ce0),
    .symbol_bits_V_we0(canonize_tree_U0_symbol_bits_V_we0),
    .symbol_bits_V_d0(canonize_tree_U0_symbol_bits_V_d0)
);

create_codeword create_codeword_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(create_codeword_U0_ap_start),
    .ap_done(create_codeword_U0_ap_done),
    .ap_continue(create_codeword_U0_ap_continue),
    .ap_idle(create_codeword_U0_ap_idle),
    .ap_ready(create_codeword_U0_ap_ready),
    .symbol_bits_V_address0(create_codeword_U0_symbol_bits_V_address0),
    .symbol_bits_V_ce0(create_codeword_U0_symbol_bits_V_ce0),
    .symbol_bits_V_q0(symbol_bits_V_t_q0),
    .codeword_length_histogram_V_address0(create_codeword_U0_codeword_length_histogram_V_address0),
    .codeword_length_histogram_V_ce0(create_codeword_U0_codeword_length_histogram_V_ce0),
    .codeword_length_histogram_V_q0(truncated_length_his_1_t_q0),
    .stream_buffer_user_V_address0(create_codeword_U0_stream_buffer_user_V_address0),
    .stream_buffer_user_V_ce0(create_codeword_U0_stream_buffer_user_V_ce0),
    .stream_buffer_user_V_q0(stream_buffer_3_t_q0),
    .stream_buffer_id_V_address0(create_codeword_U0_stream_buffer_id_V_address0),
    .stream_buffer_id_V_ce0(create_codeword_U0_stream_buffer_id_V_ce0),
    .stream_buffer_id_V_q0(stream_buffer_5_t_q0),
    .stream_buffer_dest_V_address0(create_codeword_U0_stream_buffer_dest_V_address0),
    .stream_buffer_dest_V_ce0(create_codeword_U0_stream_buffer_dest_V_ce0),
    .stream_buffer_dest_V_q0(stream_buffer_6_t_q0),
    .encoding_TDATA(create_codeword_U0_encoding_TDATA),
    .encoding_TVALID(create_codeword_U0_encoding_TVALID),
    .encoding_TREADY(encoding_TREADY),
    .encoding_TKEEP(create_codeword_U0_encoding_TKEEP),
    .encoding_TSTRB(create_codeword_U0_encoding_TSTRB),
    .encoding_TUSER(create_codeword_U0_encoding_TUSER),
    .encoding_TLAST(create_codeword_U0_encoding_TLAST),
    .encoding_TID(create_codeword_U0_encoding_TID),
    .encoding_TDEST(create_codeword_U0_encoding_TDEST)
);

Block_proc Block_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Block_proc_U0_ap_start),
    .ap_done(Block_proc_U0_ap_done),
    .ap_continue(Block_proc_U0_ap_continue),
    .ap_idle(Block_proc_U0_ap_idle),
    .ap_ready(Block_proc_U0_ap_ready),
    .extLd_loc_dout(extLd_loc_c19_dout),
    .extLd_loc_empty_n(extLd_loc_c19_empty_n),
    .extLd_loc_read(Block_proc_U0_extLd_loc_read),
    .num_nonzero_symbols(Block_proc_U0_num_nonzero_symbols),
    .num_nonzero_symbols_ap_vld(Block_proc_U0_num_nonzero_symbols_ap_vld)
);

fifo_w41_d256_A stream_buffer_0_chan_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Loop_read_stream_pro_U0_stream_buffer_0_din),
    .if_full_n(stream_buffer_0_chan_full_n),
    .if_write(Loop_read_stream_pro_U0_stream_buffer_0_write),
    .if_dout(stream_buffer_0_chan_dout),
    .if_empty_n(stream_buffer_0_chan_empty_n),
    .if_read(filter_U0_in_data_V_read)
);

fifo_w9_d2_A n_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(filter_U0_n_out_din),
    .if_full_n(n_c_full_n),
    .if_write(filter_U0_n_out_write),
    .if_dout(n_c_dout),
    .if_empty_n(n_c_empty_n),
    .if_read(Block_huffman_encodi_U0_n_read)
);

fifo_w9_d3_A n_c18_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_huffman_encodi_U0_n_out_din),
    .if_full_n(n_c18_full_n),
    .if_write(Block_huffman_encodi_U0_n_out_write),
    .if_dout(n_c18_dout),
    .if_empty_n(n_c18_empty_n),
    .if_read(Loop_copy_sorted_pro_U0_n_read)
);

fifo_w9_d2_A extLd8_loc_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_huffman_encodi_U0_ap_return),
    .if_full_n(extLd8_loc_channel_full_n),
    .if_write(Block_huffman_encodi_U0_ap_done),
    .if_dout(extLd8_loc_channel_dout),
    .if_empty_n(extLd8_loc_channel_empty_n),
    .if_read(sort_U0_ap_ready)
);

fifo_w9_d256_A sorted_copy1_0_chann_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Loop_copy_sorted_pro_U0_sorted_copy1_0_din),
    .if_full_n(sorted_copy1_0_chann_full_n),
    .if_write(Loop_copy_sorted_pro_U0_sorted_copy1_0_write),
    .if_dout(sorted_copy1_0_chann_dout),
    .if_empty_n(sorted_copy1_0_chann_empty_n),
    .if_read(create_tree_U0_in_value_V_read)
);

fifo_w32_d256_A sorted_copy1_1_chann_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Loop_copy_sorted_pro_U0_sorted_copy1_1_din),
    .if_full_n(sorted_copy1_1_chann_full_n),
    .if_write(Loop_copy_sorted_pro_U0_sorted_copy1_1_write),
    .if_dout(sorted_copy1_1_chann_dout),
    .if_empty_n(sorted_copy1_1_chann_empty_n),
    .if_read(create_tree_U0_in_frequency_V_read)
);

fifo_w9_d5_A val_assign6_loc_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Loop_copy_sorted_pro_U0_val_assign6_out_out_din),
    .if_full_n(val_assign6_loc_c_full_n),
    .if_write(Loop_copy_sorted_pro_U0_val_assign6_out_out_write),
    .if_dout(val_assign6_loc_c_dout),
    .if_empty_n(val_assign6_loc_c_empty_n),
    .if_read(canonize_tree_U0_val_assign6_loc_read)
);

fifo_w9_d2_A extLd_loc_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Loop_copy_sorted_pro_U0_extLd_out_out_din),
    .if_full_n(extLd_loc_c_full_n),
    .if_write(Loop_copy_sorted_pro_U0_extLd_out_out_write),
    .if_dout(extLd_loc_c_dout),
    .if_empty_n(extLd_loc_c_empty_n),
    .if_read(create_tree_U0_extLd_loc_read)
);

fifo_w9_d2_A extLd_loc_c19_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Loop_copy_sorted_pro_U0_extLd_out_out1_din),
    .if_full_n(extLd_loc_c19_full_n),
    .if_write(Loop_copy_sorted_pro_U0_extLd_out_out1_write),
    .if_dout(extLd_loc_c19_dout),
    .if_empty_n(extLd_loc_c19_empty_n),
    .if_read(Block_proc_U0_extLd_loc_read)
);

fifo_w9_d2_A extLd_loc_c20_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(create_tree_U0_extLd_loc_out_din),
    .if_full_n(extLd_loc_c20_full_n),
    .if_write(create_tree_U0_extLd_loc_out_write),
    .if_dout(extLd_loc_c20_dout),
    .if_empty_n(extLd_loc_c20_empty_n),
    .if_read(compute_bit_length_U0_extLd_loc_read)
);

start_for_filter_U0 start_for_filter_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_filter_U0_din),
    .if_full_n(start_for_filter_U0_full_n),
    .if_write(Loop_read_stream_pro_U0_start_write),
    .if_dout(start_for_filter_U0_dout),
    .if_empty_n(start_for_filter_U0_empty_n),
    .if_read(filter_U0_ap_ready)
);

start_for_Block_hEe0 start_for_Block_hEe0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_Block_huffman_encodi_U0_din),
    .if_full_n(start_for_Block_huffman_encodi_U0_full_n),
    .if_write(filter_U0_start_write),
    .if_dout(start_for_Block_huffman_encodi_U0_dout),
    .if_empty_n(start_for_Block_huffman_encodi_U0_empty_n),
    .if_read(Block_huffman_encodi_U0_ap_ready)
);

start_for_create_Ffa start_for_create_Ffa_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_create_tree_U0_din),
    .if_full_n(start_for_create_tree_U0_full_n),
    .if_write(Loop_copy_sorted_pro_U0_start_write),
    .if_dout(start_for_create_tree_U0_dout),
    .if_empty_n(start_for_create_tree_U0_empty_n),
    .if_read(create_tree_U0_ap_ready)
);

start_for_Block_pGfk start_for_Block_pGfk_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_Block_proc_U0_din),
    .if_full_n(start_for_Block_proc_U0_full_n),
    .if_write(Loop_copy_sorted_pro_U0_start_write),
    .if_dout(start_for_Block_proc_U0_dout),
    .if_empty_n(start_for_Block_proc_U0_empty_n),
    .if_read(Block_proc_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_filtered_frequency_V <= 1'b0;
    end else begin
        if (((filter_U0_ap_done & filter_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_filtered_frequency_V <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_filtered_frequency_V <= ap_sync_channel_write_filtered_frequency_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_filtered_value_V <= 1'b0;
    end else begin
        if (((filter_U0_ap_done & filter_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_filtered_value_V <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_filtered_value_V <= ap_sync_channel_write_filtered_value_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_left_V <= 1'b0;
    end else begin
        if (((create_tree_U0_ap_done & create_tree_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_left_V <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_left_V <= ap_sync_channel_write_left_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_parent_V <= 1'b0;
    end else begin
        if (((create_tree_U0_ap_done & create_tree_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_parent_V <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_parent_V <= ap_sync_channel_write_parent_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_right_V <= 1'b0;
    end else begin
        if (((create_tree_U0_ap_done & create_tree_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_right_V <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_right_V <= ap_sync_channel_write_right_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_sorted_0 <= 1'b0;
    end else begin
        if (((sort_U0_ap_done & sort_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_sorted_0 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_sorted_0 <= ap_sync_channel_write_sorted_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_sorted_1 <= 1'b0;
    end else begin
        if (((sort_U0_ap_done & sort_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_sorted_1 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_sorted_1 <= ap_sync_channel_write_sorted_1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_stream_buffer_3 <= 1'b0;
    end else begin
        if (((Loop_read_stream_pro_U0_ap_done & Loop_read_stream_pro_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_stream_buffer_3 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_stream_buffer_3 <= ap_sync_channel_write_stream_buffer_3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_stream_buffer_5 <= 1'b0;
    end else begin
        if (((Loop_read_stream_pro_U0_ap_done & Loop_read_stream_pro_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_stream_buffer_5 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_stream_buffer_5 <= ap_sync_channel_write_stream_buffer_5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_stream_buffer_6 <= 1'b0;
    end else begin
        if (((Loop_read_stream_pro_U0_ap_done & Loop_read_stream_pro_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_stream_buffer_6 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_stream_buffer_6 <= ap_sync_channel_write_stream_buffer_6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_truncated_length_his <= 1'b0;
    end else begin
        if (((truncate_tree_U0_ap_done & truncate_tree_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_truncated_length_his <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_truncated_length_his <= ap_sync_channel_write_truncated_length_his;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_truncated_length_his_1 <= 1'b0;
    end else begin
        if (((truncate_tree_U0_ap_done & truncate_tree_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_truncated_length_his_1 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_truncated_length_his_1 <= ap_sync_channel_write_truncated_length_his_1;
        end
    end
end

assign Block_huffman_encodi_U0_ap_continue = extLd8_loc_channel_full_n;

assign Block_huffman_encodi_U0_ap_start = start_for_Block_huffman_encodi_U0_empty_n;

assign Block_huffman_encodi_U0_start_full_n = 1'b1;

assign Block_huffman_encodi_U0_start_write = 1'b0;

assign Block_proc_U0_ap_continue = ap_sync_done;

assign Block_proc_U0_ap_start = start_for_Block_proc_U0_empty_n;

assign Block_proc_U0_start_full_n = 1'b1;

assign Block_proc_U0_start_write = 1'b0;

assign Loop_copy_sorted_pro_U0_ap_continue = sorted_copy2_value_V_i_full_n;

assign Loop_copy_sorted_pro_U0_ap_start = (sorted_1_t_empty_n & sorted_0_t_empty_n);

assign Loop_copy_sorted_pro_U0_sorted_copy2_value_V_full_n = sorted_copy2_value_V_i_full_n;

assign Loop_copy_sorted_pro_U0_start_full_n = (start_for_create_tree_U0_full_n & start_for_Block_proc_U0_full_n);

assign Loop_read_stream_pro_U0_ap_continue = (ap_sync_channel_write_stream_buffer_6 & ap_sync_channel_write_stream_buffer_5 & ap_sync_channel_write_stream_buffer_3);

assign Loop_read_stream_pro_U0_ap_start = ap_start;

assign Loop_read_stream_pro_U0_stream_buffer_3_full_n = stream_buffer_3_i_full_n;

assign Loop_read_stream_pro_U0_stream_buffer_5_full_n = stream_buffer_5_i_full_n;

assign Loop_read_stream_pro_U0_stream_buffer_6_full_n = stream_buffer_6_i_full_n;

assign ap_channel_done_extLd8_loc_channel = Block_huffman_encodi_U0_ap_done;

assign ap_channel_done_filtered_frequency_V = (filter_U0_ap_done & (ap_sync_reg_channel_write_filtered_frequency_V ^ 1'b1));

assign ap_channel_done_filtered_value_V = (filter_U0_ap_done & (ap_sync_reg_channel_write_filtered_value_V ^ 1'b1));

assign ap_channel_done_left_V = ((ap_sync_reg_channel_write_left_V ^ 1'b1) & create_tree_U0_ap_done);

assign ap_channel_done_length_histogram_V = compute_bit_length_U0_ap_done;

assign ap_channel_done_parent_V = ((ap_sync_reg_channel_write_parent_V ^ 1'b1) & create_tree_U0_ap_done);

assign ap_channel_done_right_V = ((ap_sync_reg_channel_write_right_V ^ 1'b1) & create_tree_U0_ap_done);

assign ap_channel_done_sorted_0 = (sort_U0_ap_done & (ap_sync_reg_channel_write_sorted_0 ^ 1'b1));

assign ap_channel_done_sorted_1 = (sort_U0_ap_done & (ap_sync_reg_channel_write_sorted_1 ^ 1'b1));

assign ap_channel_done_sorted_copy2_value_V = Loop_copy_sorted_pro_U0_ap_done;

assign ap_channel_done_stream_buffer_3 = ((ap_sync_reg_channel_write_stream_buffer_3 ^ 1'b1) & Loop_read_stream_pro_U0_ap_done);

assign ap_channel_done_stream_buffer_5 = ((ap_sync_reg_channel_write_stream_buffer_5 ^ 1'b1) & Loop_read_stream_pro_U0_ap_done);

assign ap_channel_done_stream_buffer_6 = ((ap_sync_reg_channel_write_stream_buffer_6 ^ 1'b1) & Loop_read_stream_pro_U0_ap_done);

assign ap_channel_done_symbol_bits_V = canonize_tree_U0_ap_done;

assign ap_channel_done_truncated_length_his = (truncate_tree_U0_ap_done & (ap_sync_reg_channel_write_truncated_length_his ^ 1'b1));

assign ap_channel_done_truncated_length_his_1 = (truncate_tree_U0_ap_done & (ap_sync_reg_channel_write_truncated_length_his_1 ^ 1'b1));

assign ap_done = ap_sync_done;

assign ap_idle = (truncate_tree_U0_ap_idle & sort_U0_ap_idle & filter_U0_ap_idle & (extLd8_loc_channel_empty_n ^ 1'b1) & (symbol_bits_V_t_empty_n ^ 1'b1) & (truncated_length_his_1_t_empty_n ^ 1'b1) & (truncated_length_his_t_empty_n ^ 1'b1) & (length_histogram_V_t_empty_n ^ 1'b1) & (right_V_t_empty_n ^ 1'b1) & (left_V_t_empty_n ^ 1'b1) & (parent_V_t_empty_n ^ 1'b1) & (sorted_copy2_value_V_t_empty_n ^ 1'b1) & (sorted_1_t_empty_n ^ 1'b1) & (sorted_0_t_empty_n ^ 1'b1) & (filtered_frequency_V_t_empty_n ^ 1'b1) & (filtered_value_V_t_empty_n ^ 1'b1) & (stream_buffer_6_t_empty_n ^ 1'b1) & (stream_buffer_5_t_empty_n ^ 1'b1) & (stream_buffer_3_t_empty_n ^ 1'b1) & create_tree_U0_ap_idle & create_codeword_U0_ap_idle & compute_bit_length_U0_ap_idle & canonize_tree_U0_ap_idle & Loop_read_stream_pro_U0_ap_idle & Loop_copy_sorted_pro_U0_ap_idle & Block_proc_U0_ap_idle & Block_huffman_encodi_U0_ap_idle);

assign ap_ready = Loop_read_stream_pro_U0_ap_ready;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_channel_write_filtered_frequency_V = ((filter_U0_out_frequency_V_full_n & ap_channel_done_filtered_frequency_V) | ap_sync_reg_channel_write_filtered_frequency_V);

assign ap_sync_channel_write_filtered_value_V = ((filter_U0_out_value_V_full_n & ap_channel_done_filtered_value_V) | ap_sync_reg_channel_write_filtered_value_V);

assign ap_sync_channel_write_left_V = ((create_tree_U0_left_V_full_n & ap_channel_done_left_V) | ap_sync_reg_channel_write_left_V);

assign ap_sync_channel_write_parent_V = ((create_tree_U0_parent_V_full_n & ap_channel_done_parent_V) | ap_sync_reg_channel_write_parent_V);

assign ap_sync_channel_write_right_V = ((create_tree_U0_right_V_full_n & ap_channel_done_right_V) | ap_sync_reg_channel_write_right_V);

assign ap_sync_channel_write_sorted_0 = ((sort_U0_out_value_V_full_n & ap_channel_done_sorted_0) | ap_sync_reg_channel_write_sorted_0);

assign ap_sync_channel_write_sorted_1 = ((sort_U0_out_frequency_V_full_n & ap_channel_done_sorted_1) | ap_sync_reg_channel_write_sorted_1);

assign ap_sync_channel_write_stream_buffer_3 = ((ap_channel_done_stream_buffer_3 & Loop_read_stream_pro_U0_stream_buffer_3_full_n) | ap_sync_reg_channel_write_stream_buffer_3);

assign ap_sync_channel_write_stream_buffer_5 = ((ap_channel_done_stream_buffer_5 & Loop_read_stream_pro_U0_stream_buffer_5_full_n) | ap_sync_reg_channel_write_stream_buffer_5);

assign ap_sync_channel_write_stream_buffer_6 = ((ap_channel_done_stream_buffer_6 & Loop_read_stream_pro_U0_stream_buffer_6_full_n) | ap_sync_reg_channel_write_stream_buffer_6);

assign ap_sync_channel_write_truncated_length_his = ((truncate_tree_U0_output_length_histogram1_V_full_n & ap_channel_done_truncated_length_his) | ap_sync_reg_channel_write_truncated_length_his);

assign ap_sync_channel_write_truncated_length_his_1 = ((truncate_tree_U0_output_length_histogram2_V_full_n & ap_channel_done_truncated_length_his_1) | ap_sync_reg_channel_write_truncated_length_his_1);

assign ap_sync_continue = ap_sync_done;

assign ap_sync_done = (create_codeword_U0_ap_done & Block_proc_U0_ap_done);

assign ap_sync_ready = Loop_read_stream_pro_U0_ap_ready;

assign canonize_tree_U0_ap_continue = symbol_bits_V_i_full_n;

assign canonize_tree_U0_ap_start = (truncated_length_his_t_empty_n & sorted_copy2_value_V_t_empty_n);

assign canonize_tree_U0_start_full_n = 1'b1;

assign canonize_tree_U0_start_write = 1'b0;

assign canonize_tree_U0_symbol_bits_V_full_n = symbol_bits_V_i_full_n;

assign compute_bit_length_U0_ap_continue = length_histogram_V_i_full_n;

assign compute_bit_length_U0_ap_start = (right_V_t_empty_n & parent_V_t_empty_n & left_V_t_empty_n);

assign compute_bit_length_U0_length_histogram_V_full_n = length_histogram_V_i_full_n;

assign compute_bit_length_U0_start_full_n = 1'b1;

assign compute_bit_length_U0_start_write = 1'b0;

assign create_codeword_U0_ap_continue = ap_sync_done;

assign create_codeword_U0_ap_start = (truncated_length_his_1_t_empty_n & symbol_bits_V_t_empty_n & stream_buffer_6_t_empty_n & stream_buffer_5_t_empty_n & stream_buffer_3_t_empty_n);

assign create_codeword_U0_start_full_n = 1'b1;

assign create_codeword_U0_start_write = 1'b0;

assign create_tree_U0_ap_continue = (ap_sync_channel_write_right_V & ap_sync_channel_write_parent_V & ap_sync_channel_write_left_V);

assign create_tree_U0_ap_start = start_for_create_tree_U0_empty_n;

assign create_tree_U0_left_V_full_n = left_V_i_full_n;

assign create_tree_U0_parent_V_full_n = parent_V_i_full_n;

assign create_tree_U0_right_V_full_n = right_V_i_full_n;

assign create_tree_U0_start_full_n = 1'b1;

assign create_tree_U0_start_write = 1'b0;

assign encoding_TDATA = create_codeword_U0_encoding_TDATA;

assign encoding_TDEST = create_codeword_U0_encoding_TDEST;

assign encoding_TID = create_codeword_U0_encoding_TID;

assign encoding_TKEEP = create_codeword_U0_encoding_TKEEP;

assign encoding_TLAST = create_codeword_U0_encoding_TLAST;

assign encoding_TSTRB = create_codeword_U0_encoding_TSTRB;

assign encoding_TUSER = create_codeword_U0_encoding_TUSER;

assign encoding_TVALID = create_codeword_U0_encoding_TVALID;

assign filter_U0_ap_continue = (ap_sync_channel_write_filtered_value_V & ap_sync_channel_write_filtered_frequency_V);

assign filter_U0_ap_start = start_for_filter_U0_empty_n;

assign filter_U0_out_frequency_V_full_n = filtered_frequency_V_i_full_n;

assign filter_U0_out_value_V_full_n = filtered_value_V_i_full_n;

assign left_V_t_d1 = 9'd0;

assign left_V_t_we1 = 1'b0;

assign parent_V_t_d1 = 9'd0;

assign parent_V_t_we1 = 1'b0;

assign right_V_t_d1 = 9'd0;

assign right_V_t_we1 = 1'b0;

assign sort_U0_ap_continue = (ap_sync_channel_write_sorted_1 & ap_sync_channel_write_sorted_0);

assign sort_U0_ap_start = (filtered_value_V_t_empty_n & filtered_frequency_V_t_empty_n & extLd8_loc_channel_empty_n);

assign sort_U0_out_frequency_V_full_n = sorted_1_i_full_n;

assign sort_U0_out_value_V_full_n = sorted_0_i_full_n;

assign sort_U0_start_full_n = 1'b1;

assign sort_U0_start_write = 1'b0;

assign start_for_Block_huffman_encodi_U0_din = 1'b1;

assign start_for_Block_proc_U0_din = 1'b1;

assign start_for_create_tree_U0_din = 1'b1;

assign start_for_filter_U0_din = 1'b1;

assign symbol_histogram_TREADY = Loop_read_stream_pro_U0_symbol_histogram_TREADY;

assign truncate_tree_U0_ap_continue = (ap_sync_channel_write_truncated_length_his_1 & ap_sync_channel_write_truncated_length_his);

assign truncate_tree_U0_ap_start = length_histogram_V_t_empty_n;

assign truncate_tree_U0_output_length_histogram1_V_full_n = truncated_length_his_i_full_n;

assign truncate_tree_U0_output_length_histogram2_V_full_n = truncated_length_his_1_i_full_n;

assign truncate_tree_U0_start_full_n = 1'b1;

assign truncate_tree_U0_start_write = 1'b0;

endmodule //huffman_encoding
